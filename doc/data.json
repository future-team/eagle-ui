{
    "project": {
        "name": "eagle-ui",
        "description": "<div  style=\"margin:-15px -20px;\">\n    <div style=\"padding: 50px 24px 60px 24px;box-sizing: border-box;background-color: #38b7ea;overflow: hidden;text-align:center; color:#fff;\">\n        <div>\n            <h1>Eagle-UI</h1>\n            <p style=\"margin-top:25px\">点评商家、销售系统常用的react组件库</p>\n        </div>\n    </div>\n    <div style=\"margin: 20px 0;padding: 0px 30px;\">\n        <p class=\"lead\">\n            eagle-ui是一款基于react开发的pc端UI组件库，目前主要用于apollo系统，它提供了常用的表单、布局、日历、弹窗等一系列符合apollo style的控件集合。\n        </p>\n        <h2>安装</h2>\n        <div class=\"well well-small sign-left2\" style=\"display: inline-block;width: 45%;\">\n            <div class=\"stdoc-code\">\n                <p>\n                    $ bower install eagle-ui\n                </p>\n            </div>\n        </div>\n        <div class=\"well well-small sign-left2\" style=\"display: inline-block;width: 45%;float: right\">\n            <div class=\"stdoc-code\">\n                <p>\n                    $ npm install eagle-ui --save\n                </p>\n            </div>\n        </div>\n        <h2>如何在项目中引用</h2>\n        <div class=\"well well-small sign-left3\">\n            <div class=\"stdoc-code\">\n                <p>\n                    import {CalendarPanel,Input} from 'eagle-ui';\n                </p>\n            </div>\n        </div>\n        <p>引入需要使用的组件之后在render函数中的调用方式如下：</p>\n        <pre class=\"code prettyprint\">\n<code>\n    &lt;CalendarPanel defaultDate={this.state.defaultDate}\n            startDate=\"2015-11-11\"\n            endDate=\"2017-12-1\"\n            getValueCallback={::this.getvalue}&gt;\n            &lt;Input placeholder=\"请选择日期\" style={{width:'150px'}} /&gt;\n    &lt;/CalendarPanel&gt;\n</code>\n        </pre>\n        <h2>其他</h2>\n        <h3>推荐移动端React UI组件库 - Phoenix-ui</h3>\n        <p>Github: <a href=\"https://github.com/future-team/phoenix-ui\">https://github.com/future-team/phoenix-ui</a></p>\n        <p>Document: <a href=\"http://future-team.github.io/phoenix-ui/doc/index.html\">http://future-team.github.io/phoenix-ui/doc/index.html</a></p>\n    </div>\n    <div style=\"padding: 72px 24px; box-sizing: border-box; background-color: rgb(238, 238, 238); text-align: center;\">\n        <div style=\"max-width: 1200px; margin: 0px auto;\">\n            <h3 style=\"margin: 0px; padding: 0px; font-weight: 300; font-size: 22px;\">\n                Want to help make this project awesome? Check out our repo\n            </h3>\n            <a href=\"https://github.com/future-team/eagle-ui\"  style=\"color:#fff;box-sizing: border-box; display: inline-block; cursor:pointer;text-decoration: none; margin-top: 30px; padding: 0px; outline: none; font-size: inherit; font-weight: inherit; position: relative; vertical-align: middle; height: 36px; line-height: 36px; width: 100px; border-radius: 2px; background-color: #38b7ea; text-align: center;\">\n                <div style=\"height: 36px; border-radius: 2px; top: 0px;\">\n                    GitHub\n                </div>\n            </a>\n        </div>\n    </div>\n</div>\n",
        "version": "0.1.0",
        "url": "",
        "navs": [
            {
                "name": "主页",
                "url": ""
            },
            {
                "name": "示例",
                "url": "http://future-team.github.io/eagle-ui/examples/index.html"
            }
        ]
    },
    "files": {
        "src/dialog/Dialog.js": {
            "name": "src/dialog/Dialog.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/panels/Panel.js": {
            "name": "src/panels/Panel.js",
            "modules": {
                "panel(面板)": 1
            },
            "classes": {
                "Panel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/panels/PanelContent.js": {
            "name": "src/panels/PanelContent.js",
            "modules": {},
            "classes": {
                "PanelContent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/panels/PanelFooter.js": {
            "name": "src/panels/PanelFooter.js",
            "modules": {},
            "classes": {
                "PanelFooter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/panels/PanelHeader.js": {
            "name": "src/panels/PanelHeader.js",
            "modules": {},
            "classes": {
                "PanelHeader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/sug/Search.js": {
            "name": "src/sug/Search.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/tables/Column.js": {
            "name": "src/tables/Column.js",
            "modules": {},
            "classes": {
                "Column": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tables/Table.js": {
            "name": "src/tables/Table.js",
            "modules": {
                "table(表格)": 1
            },
            "classes": {
                "Table": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tables/Td.js": {
            "name": "src/tables/Td.js",
            "modules": {},
            "classes": {
                "Td": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tables/Th.js": {
            "name": "src/tables/Th.js",
            "modules": {},
            "classes": {
                "Th": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tables/Tr.js": {
            "name": "src/tables/Tr.js",
            "modules": {},
            "classes": {
                "Tr": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/utils/ClassNameMixin.js": {
            "name": "src/utils/ClassNameMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/MethodMixin.js": {
            "name": "src/utils/MethodMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/PropertyMixin.js": {
            "name": "src/utils/PropertyMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/constants.js": {
            "name": "src/utils/constants.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/extend.js": {
            "name": "src/utils/extend.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/Button.js": {
            "name": "src/Button.js",
            "modules": {},
            "classes": {
                "Button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ButtonGroup.js": {
            "name": "src/ButtonGroup.js",
            "modules": {},
            "classes": {
                "ButtonGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Calendar.js": {
            "name": "src/Calendar.js",
            "modules": {},
            "classes": {
                "Calendar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CalendarPanel.js": {
            "name": "src/CalendarPanel.js",
            "modules": {},
            "classes": {
                "CalendarPanel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CheckboxGroup.js": {
            "name": "src/CheckboxGroup.js",
            "modules": {},
            "classes": {
                "CheckboxGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Col.js": {
            "name": "src/Col.js",
            "modules": {},
            "classes": {
                "Col": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Crumb.js": {
            "name": "src/Crumb.js",
            "modules": {
                "ui": 1
            },
            "classes": {
                "Crumb": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/DateTimePicker.js": {
            "name": "src/DateTimePicker.js",
            "modules": {},
            "classes": {
                "DateTimePicker": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Dialog.js": {
            "name": "src/Dialog.js",
            "modules": {},
            "classes": {
                "Dialog": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Grid.js": {
            "name": "src/Grid.js",
            "modules": {
                "grid(布局)": 1
            },
            "classes": {
                "Grid": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ImgSlider.js": {
            "name": "src/ImgSlider.js",
            "modules": {},
            "classes": {
                "imgSlider": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Input.js": {
            "name": "src/Input.js",
            "modules": {
                "form(表单)": 1
            },
            "classes": {
                "Input": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Label.js": {
            "name": "src/Label.js",
            "modules": {},
            "classes": {
                "Label": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/LabelGroup.js": {
            "name": "src/LabelGroup.js",
            "modules": {},
            "classes": {
                "LabelGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Paging.js": {
            "name": "src/Paging.js",
            "modules": {},
            "classes": {
                "Paging": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/RadioGroup.js": {
            "name": "src/RadioGroup.js",
            "modules": {},
            "classes": {
                "RadioGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Row.js": {
            "name": "src/Row.js",
            "modules": {},
            "classes": {
                "Row": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Select.js": {
            "name": "src/Select.js",
            "modules": {},
            "classes": {
                "Select": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Slider.js": {
            "name": "src/Slider.js",
            "modules": {},
            "classes": {
                "Slider": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Star.js": {
            "name": "src/Star.js",
            "modules": {},
            "classes": {
                "Star": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Suggestion.js": {
            "name": "src/Suggestion.js",
            "modules": {},
            "classes": {
                "Suggestion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Tab.js": {
            "name": "src/Tab.js",
            "modules": {},
            "classes": {
                "Tab": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Tabset.js": {
            "name": "src/Tabset.js",
            "modules": {},
            "classes": {
                "Tabset": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/TimePicker.js": {
            "name": "src/TimePicker.js",
            "modules": {},
            "classes": {
                "TimePicker": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Toast.js": {
            "name": "src/Toast.js",
            "modules": {},
            "classes": {
                "Toast": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Tooltip.js": {
            "name": "src/Tooltip.js",
            "modules": {},
            "classes": {
                "Tooltip": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/TooltipPanel.js": {
            "name": "src/TooltipPanel.js",
            "modules": {},
            "classes": {
                "TooltipPanel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ValidatorBase.js": {
            "name": "src/ValidatorBase.js",
            "modules": {},
            "classes": {
                "ValidatorPanel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ValidatorWrapper.js": {
            "name": "src/ValidatorWrapper.js",
            "modules": {},
            "classes": {
                "ValidatorWrapper": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "panel(面板)": {
            "name": "panel(面板)",
            "submodules": {},
            "classes": {
                "Panel": 1,
                "PanelContent": 1,
                "PanelFooter": 1,
                "PanelHeader": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/panels/PanelHeader.js",
            "line": 5,
            "description": "<h5>eagle-ui主要面板布局组件</h5>\n<strong><a href='../classes/Panel.html'>Panel定义整个容器</a></strong><br>\n<strong><a href='../classes/PanelContent.html'>PanelContent定义内容区域</a></strong><br>\n<strong><a href='../classes/PanelFooter.html'>PanelFooter定义底部区域</a></strong><br>\n<strong><a href='../classes/PanelHeader.html'>PanelHeader定义头部区域</a></strong><br>",
            "itemtype": "main"
        },
        "table(表格)": {
            "name": "table(表格)",
            "submodules": {},
            "classes": {
                "Column": 1,
                "Table": 1,
                "Td": 1,
                "Th": 1,
                "Tr": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/tables/Tr.js",
            "line": 5,
            "description": "表格组件",
            "itemtype": "main",
            "static": 1
        },
        "form(表单)": {
            "name": "form(表单)",
            "submodules": {
                "undefined": 1
            },
            "classes": {
                "CheckboxGroup": 1,
                "RadioGroup": 1,
                "Select": 1,
                "ValidatorPanel": 1,
                "Button": 1,
                "ButtonGroup": 1,
                "Input": 1,
                "ValidatorWrapper": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/ValidatorWrapper.js",
            "line": 5,
            "description": "<h5>form表单模块集成了常见的表单元素形式:</h5>\n<strong><a href='../classes/CheckboxGroup.html'>checkbox多选框</a></strong><br>\n<strong><a href='../classes/RadioGroup.html'>radio单选框</a></strong><br>\n<strong><a href='../classes/Input.html'>input输入框</a></strong><br>\n<strong><a href='../classes/Select.html'>select下拉框</a></strong><br>\n<strong><a href='../classes/ButtonGroup.html'>button按钮组</a></strong>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "ui": {
            "name": "ui",
            "submodules": {},
            "classes": {
                "imgSlider": 1,
                "Label": 1,
                "Slider": 1,
                "Calendar": 1,
                "CalendarPanel": 1,
                "Crumb": 1,
                "DateTimePicker": 1,
                "Dialog": 1,
                "LabelGroup": 1,
                "Paging": 1,
                "Star": 1,
                "Suggestion": 1,
                "Tab": 1,
                "Tabset": 1,
                "TimePicker": 1,
                "Toast": 1,
                "Tooltip": 1,
                "TooltipPanel": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/TooltipPanel.js",
            "line": 10,
            "description": "<h5>eagle-ui部分UI组件</h5>\n<strong><a href='../classes/Crumb.html'>Crumb封装层级链接(面包屑)</a></strong><br>\n<strong><a href='../classes/Slider.html'>Slider组件展示幻灯片形式的照片展示</a></strong><br>\n<strong><a href='../classes/Label.html'>Label定义标签展示的形式</a></strong><br>\n<strong><a href='../classes/Search.html'>Search定义不同的搜索框</a></strong><br>\n<strong><a href='../classes/Star.html'>Star以星星的形式定义不同的星级展示</a></strong><br>\n<strong><a href='../classes/Calendar.html'>Calendar为日期选择组件</a></strong><br>\n<strong><a href='../classes/Dialog.html'>Dialog模拟了浏览器弹出的alert、confirm等交互形式</a></strong><br>\n<strong><a href='../classes/Paging.html'>Paging展示了常见的分页形式标签，封装了点击功能</a></strong><br>\n<strong><a href='../classes/Suggestion.html'>Suggestion在Search的基础上，动态联想匹配项</a></strong><br>\n<strong><a href='../classes/Tab.html'>Tab模拟了常见的导航条样式</a></strong><br>\n<strong><a href='../classes/Toast.html'>Toast可以模拟Ajax请求成功或者失败后，通知用户的UI界面展示</a></strong><br>\n<strong><a href='../classes/Tooltip.html'>Tooltip在Label的基础上，增加了鼠标hover或者点击的提示功能</a></strong>",
            "itemtype": "main"
        },
        "grid(布局)": {
            "name": "grid(布局)",
            "submodules": {},
            "classes": {
                "Row": 1,
                "Col": 1,
                "Grid": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/Row.js",
            "line": 6,
            "description": "<h5>eagle-ui主要栅格化布局组件</h5>\n<pre><code>\n    &#60;Grid&#62;//定义栅格\n        &#60;Row&#62;//定义一行\n             &#60;Col sm={6}&#62;//定义一列，总长度为12份\n             &#60;/Col&#62;\n        &#60;/Row&#62;\n    &#60;/Grid&#62;\n</code></pre>\n\n<strong><a href='../classes/Grid.html'>Grid定义外框</a></strong><br>\n<strong><a href='../classes/Row.html'>Row定义行排列</a></strong><br>\n<strong><a href='../classes/Col.html'>Col定义竖排列</a></strong><br>\n<h6>点击以上链接进行相关查看</h6>",
            "itemtype": "main"
        }
    },
    "classes": {
        "Panel": {
            "name": "Panel",
            "shortname": "Panel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panel(面板)",
            "namespace": "",
            "file": "src/panels/Panel.js",
            "line": 17,
            "description": "Panel定义整个容器,其主要作用是提供基本的边框样式、为其中的内容添加padding<br>\n和PanelHeader,PanelContent,PanelFooter配合使用<br />\nPanel是上面三个标签的父容器，<br />\n可以依据不同情况决定是否添加PanelHeader和PanelFooter\n<div><a target=\"_blank\" href=\"http://future-team.github.io/eagle-ui/examples/index.html#/panel\">demo展示</a></div>\n<div><a target=\"_blank\" href=\"https://github.com/future-team/eagle-ui/blob/master/src/panels/Panel.js\">查看源码</a></div>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\t\n\timport {Row,Col,Grid,\n\t    Panel,PanelHeader,PanelFooter,PanelContent,\n\t    Input,Label,LabelGroup,\n\t    FormGroup,RadioGroup,CheckboxGroup,Select} from 'eagle-ui';\n\t\n\t\n\tlet Demo = class Demo extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t    }\n\t\n\t    show(){\n\t        console.debug(1);\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid fluid>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>无嵌套panel</h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col end>\n\t                        <Panel>\n\t                            <PanelHeader>title</PanelHeader>\n\t                            <PanelContent>\n\t                                <Row>\n\t                                    <Col sm={1}>\n\t                                        <Input label=''  type=\"checkbox\"  />\n\t                                    </Col>\n\t                                    <Col sm={10}>\n\t                                        <div className='shop-card'>\n\t                                            <h1 className='shop-card-title inline-block'>\n\t                                                西贝莜面村（中山公园店）\n\t\n\t                                            </h1>\n\t                                            <Label error radius>运营下线</Label>\n\t                                            <div>\n\t                                                <span className='row-key'>方案ID：</span><span className='row-value'>21355</span>\n\t                                                <span className='row-key'>负责人：</span><span className='row-value'>张三丰</span>\n\t                                                <span className='row-key'>城市：</span><span className='row-value'>上海</span>\n\t                                                <span className='row-key'>售卖时间：</span><span className='row-value'>2014-2015</span>\n\t                                                <span className='row-key'>售卖量：</span><span className='row-value'>0</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <span className='row-key'>客户：</span><span className='row-value'></span>\n\t                                                <span className='row-key'>已分配（王卓轩 2015-02-01 14:22）</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <LabelGroup simple clickCallback={this.show} >\n\t                                                    <Label>流程历史</Label>\n\t                                                    <Label>编辑</Label>\n\t                                                    <Label>删除</Label>\n\t                                                    <Label>复制</Label>\n\t                                                </LabelGroup>\n\t                                            </div>\n\t                                        </div>\n\t                                    </Col>\n\t                                    <Col sm={1}>审批通过</Col>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col sm={1}>\n\t                                        <Input label=''  type=\"checkbox\" checked  />\n\t                                    </Col>\n\t                                    <Col sm={10}>\n\t                                        <div className='shop-card'>\n\t                                            <h1 className='shop-card-title inline-block'>\n\t                                                西贝莜面村（中山公园店）\n\t\n\t                                            </h1>\n\t                                            <Label success radius>售卖中</Label>\n\t                                            <div>\n\t                                                <span className='row-key'>方案ID：</span><span className='row-value'>21355</span>\n\t                                                <span className='row-key'>负责人：</span><span className='row-value'>张三丰</span>\n\t                                                <span className='row-key'>城市：</span><span className='row-value'>上海</span>\n\t                                                <span className='row-key'>售卖时间：</span><span className='row-value'>2014-2015</span>\n\t                                                <span className='row-key'>售卖量：</span><span className='row-value'>0</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <span className='row-key'>客户：</span><span className='row-value'></span>\n\t                                                <span className='row-key'>已分配（王卓轩 2015-02-01 14:22）</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <LabelGroup simple clickCallback={this.show} >\n\t                                                    <Label>流程历史</Label>\n\t                                                    <Label>编辑</Label>\n\t                                                    <Label>删除</Label>\n\t                                                    <Label>复制</Label>\n\t                                                </LabelGroup>\n\t                                            </div>\n\t                                        </div>\n\t                                    </Col>\n\t                                    <Col sm={1}>审批通过</Col>\n\t                                </Row>\n\t\n\t                            </PanelContent>\n\t                            <PanelFooter>heiheihei</PanelFooter>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>panel嵌套<small>通过设置PanelHeader的leftFlag属性达到此效果</small></h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel>\n\t                            <PanelHeader leftFlag>我是标题</PanelHeader>\n\t                            <PanelContent>\n\t                                <Row>\n\t                                    <Col>\n\t                                        <FormGroup>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>性别</Col>\n\t                                                <Col sm={10}>\n\t                                                    <RadioGroup defaultChecked=\"男\" name=\"radio-sex\">\n\t                                                        <Input  type=\"radio\"  label=\"男\" value=\"男\" />\n\t                                                        <Input  type=\"radio\"  label=\"女\" value=\"女\"  />\n\t                                                    </RadioGroup>\n\t                                                </Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>体育爱好</Col>\n\t                                                <Col sm={10}>\n\t                                                    <CheckboxGroup>\n\t                                                        <Input  type=\"checkbox\" label=\"足球\" checked   />\n\t                                                        <Input  type=\"checkbox\" label=\"篮球\"    />\n\t                                                        <Input  type=\"checkbox\" label=\"羽毛球\" checked   />\n\t                                                        <Input  type=\"checkbox\" label=\"乒乓球\"    />\n\t                                                    </CheckboxGroup>\n\t                                                </Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={13}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                                <FormGroup>\n\t                                                    <Col sm={13}>出生日期</Col>\n\t                                                    <Col sm={13} end><Input name=\"test\" id=\"test\" placeholder=\"请输入出生日期\"   /></Col>\n\t                                                </FormGroup>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>所在城市</Col>\n\t                                                <Col sm={10} layer>\n\t                                                    <Row style={{margin:0}}>\n\t                                                        <Col sm={4} end>\n\t                                                            <Select placeholder=\"请选择城市\" >\n\t                                                                <item value='bei'>北京</item>\n\t                                                                <item value='shang'>上海</item>\n\t                                                                <item value='nan'>南京</item>\n\t                                                            </Select>\n\t                                                        </Col>\n\t                                                    </Row>\n\t                                                </Col>\n\t                                            </Row>\n\t                                        </FormGroup>\n\t                                    </Col>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col padding={0}>\n\t                                        <Panel>\n\t                                            <PanelHeader leftFlag>我是标题二</PanelHeader>\n\t                                            <PanelContent padding={true}>\n\t                                                我是下一个内容区\n\t                                            </PanelContent>\n\t                                        </Panel>\n\t                                    </Col>\n\t\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col padding={0}>\n\t                                        <Panel>\n\t                                            <PanelHeader leftFlag>我是标题三</PanelHeader>\n\t                                            <PanelContent padding={true}>\n\t                                                我是下一个内容区\n\t                                            </PanelContent>\n\t                                        </Panel>\n\t                                    </Col>\n\t\n\t                                </Row>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>默认嵌套</h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel>\n\t                            <PanelHeader>另一种形式的嵌套</PanelHeader>\n\t                            <PanelContent>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                <Panel>\n\t                                                    <PanelHeader>另一种形式的嵌套3</PanelHeader>\n\t                                                    <PanelContent>\n\t                                                        <Row>\n\t                                                            <Col>\n\t                                                                我是内容区\n\t                                                            </Col>\n\t                                                        </Row>\n\t                                                    </PanelContent>\n\t                                                </Panel>\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>设置<span className=\"color-primary\">egType=\"normal\"</span>后的嵌套效果</h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel egType=\"normal\">\n\t                            <PanelHeader>另一种形式的嵌套</PanelHeader>\n\t                            <PanelContent>\n\t                                <Panel egType=\"normal\">\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                <Panel  margin={0}>\n\t                                                    <PanelHeader>另一种形式的嵌套3</PanelHeader>\n\t                                                    <PanelContent>\n\t                                                        <Row>\n\t                                                            <Col>\n\t                                                                我是内容区\n\t                                                            </Col>\n\t                                                        </Row>\n\t                                                    </PanelContent>\n\t                                                </Panel>\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                                <Panel margin={0}>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t            </Grid>\n\t\n\t\n\t        );\n\t    }\n\t};\n\t\n\texport default Demo;\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "panel"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/panel"
            ],
            "show": true
        },
        "PanelContent": {
            "name": "PanelContent",
            "shortname": "PanelContent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panel(面板)",
            "namespace": "",
            "file": "src/panels/PanelContent.js",
            "line": 5,
            "description": "PanelContent定义内容区域\n<div><a target=\"_blank\" href=\"http://future-team.github.io/eagle-ui/examples/index.html#/panel\">demo展示</a></div>\n<div><a target=\"_blank\" href=\"https://github.com/future-team/eagle-ui/blob/master/src/panels/PanelContent.js\">查看源码</a></div>",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\t\n\timport {Row,Col,Grid,\n\t    Panel,PanelHeader,PanelFooter,PanelContent,\n\t    Input,Label,LabelGroup,\n\t    FormGroup,RadioGroup,CheckboxGroup,Select} from 'eagle-ui';\n\t\n\t\n\tlet Demo = class Demo extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t    }\n\t\n\t    show(){\n\t        console.debug(1);\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid fluid>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>无嵌套panel</h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col end>\n\t                        <Panel>\n\t                            <PanelHeader>title</PanelHeader>\n\t                            <PanelContent>\n\t                                <Row>\n\t                                    <Col sm={1}>\n\t                                        <Input label=''  type=\"checkbox\"  />\n\t                                    </Col>\n\t                                    <Col sm={10}>\n\t                                        <div className='shop-card'>\n\t                                            <h1 className='shop-card-title inline-block'>\n\t                                                西贝莜面村（中山公园店）\n\t\n\t                                            </h1>\n\t                                            <Label error radius>运营下线</Label>\n\t                                            <div>\n\t                                                <span className='row-key'>方案ID：</span><span className='row-value'>21355</span>\n\t                                                <span className='row-key'>负责人：</span><span className='row-value'>张三丰</span>\n\t                                                <span className='row-key'>城市：</span><span className='row-value'>上海</span>\n\t                                                <span className='row-key'>售卖时间：</span><span className='row-value'>2014-2015</span>\n\t                                                <span className='row-key'>售卖量：</span><span className='row-value'>0</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <span className='row-key'>客户：</span><span className='row-value'></span>\n\t                                                <span className='row-key'>已分配（王卓轩 2015-02-01 14:22）</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <LabelGroup simple clickCallback={this.show} >\n\t                                                    <Label>流程历史</Label>\n\t                                                    <Label>编辑</Label>\n\t                                                    <Label>删除</Label>\n\t                                                    <Label>复制</Label>\n\t                                                </LabelGroup>\n\t                                            </div>\n\t                                        </div>\n\t                                    </Col>\n\t                                    <Col sm={1}>审批通过</Col>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col sm={1}>\n\t                                        <Input label=''  type=\"checkbox\" checked  />\n\t                                    </Col>\n\t                                    <Col sm={10}>\n\t                                        <div className='shop-card'>\n\t                                            <h1 className='shop-card-title inline-block'>\n\t                                                西贝莜面村（中山公园店）\n\t\n\t                                            </h1>\n\t                                            <Label success radius>售卖中</Label>\n\t                                            <div>\n\t                                                <span className='row-key'>方案ID：</span><span className='row-value'>21355</span>\n\t                                                <span className='row-key'>负责人：</span><span className='row-value'>张三丰</span>\n\t                                                <span className='row-key'>城市：</span><span className='row-value'>上海</span>\n\t                                                <span className='row-key'>售卖时间：</span><span className='row-value'>2014-2015</span>\n\t                                                <span className='row-key'>售卖量：</span><span className='row-value'>0</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <span className='row-key'>客户：</span><span className='row-value'></span>\n\t                                                <span className='row-key'>已分配（王卓轩 2015-02-01 14:22）</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <LabelGroup simple clickCallback={this.show} >\n\t                                                    <Label>流程历史</Label>\n\t                                                    <Label>编辑</Label>\n\t                                                    <Label>删除</Label>\n\t                                                    <Label>复制</Label>\n\t                                                </LabelGroup>\n\t                                            </div>\n\t                                        </div>\n\t                                    </Col>\n\t                                    <Col sm={1}>审批通过</Col>\n\t                                </Row>\n\t\n\t                            </PanelContent>\n\t                            <PanelFooter>heiheihei</PanelFooter>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>panel嵌套<small>通过设置PanelHeader的leftFlag属性达到此效果</small></h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel>\n\t                            <PanelHeader leftFlag>我是标题</PanelHeader>\n\t                            <PanelContent>\n\t                                <Row>\n\t                                    <Col>\n\t                                        <FormGroup>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>性别</Col>\n\t                                                <Col sm={10}>\n\t                                                    <RadioGroup defaultChecked=\"男\" name=\"radio-sex\">\n\t                                                        <Input  type=\"radio\"  label=\"男\" value=\"男\" />\n\t                                                        <Input  type=\"radio\"  label=\"女\" value=\"女\"  />\n\t                                                    </RadioGroup>\n\t                                                </Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>体育爱好</Col>\n\t                                                <Col sm={10}>\n\t                                                    <CheckboxGroup>\n\t                                                        <Input  type=\"checkbox\" label=\"足球\" checked   />\n\t                                                        <Input  type=\"checkbox\" label=\"篮球\"    />\n\t                                                        <Input  type=\"checkbox\" label=\"羽毛球\" checked   />\n\t                                                        <Input  type=\"checkbox\" label=\"乒乓球\"    />\n\t                                                    </CheckboxGroup>\n\t                                                </Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={13}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                                <FormGroup>\n\t                                                    <Col sm={13}>出生日期</Col>\n\t                                                    <Col sm={13} end><Input name=\"test\" id=\"test\" placeholder=\"请输入出生日期\"   /></Col>\n\t                                                </FormGroup>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>所在城市</Col>\n\t                                                <Col sm={10} layer>\n\t                                                    <Row style={{margin:0}}>\n\t                                                        <Col sm={4} end>\n\t                                                            <Select placeholder=\"请选择城市\" >\n\t                                                                <item value='bei'>北京</item>\n\t                                                                <item value='shang'>上海</item>\n\t                                                                <item value='nan'>南京</item>\n\t                                                            </Select>\n\t                                                        </Col>\n\t                                                    </Row>\n\t                                                </Col>\n\t                                            </Row>\n\t                                        </FormGroup>\n\t                                    </Col>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col padding={0}>\n\t                                        <Panel>\n\t                                            <PanelHeader leftFlag>我是标题二</PanelHeader>\n\t                                            <PanelContent padding={true}>\n\t                                                我是下一个内容区\n\t                                            </PanelContent>\n\t                                        </Panel>\n\t                                    </Col>\n\t\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col padding={0}>\n\t                                        <Panel>\n\t                                            <PanelHeader leftFlag>我是标题三</PanelHeader>\n\t                                            <PanelContent padding={true}>\n\t                                                我是下一个内容区\n\t                                            </PanelContent>\n\t                                        </Panel>\n\t                                    </Col>\n\t\n\t                                </Row>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>默认嵌套</h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel>\n\t                            <PanelHeader>另一种形式的嵌套</PanelHeader>\n\t                            <PanelContent>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                <Panel>\n\t                                                    <PanelHeader>另一种形式的嵌套3</PanelHeader>\n\t                                                    <PanelContent>\n\t                                                        <Row>\n\t                                                            <Col>\n\t                                                                我是内容区\n\t                                                            </Col>\n\t                                                        </Row>\n\t                                                    </PanelContent>\n\t                                                </Panel>\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>设置<span className=\"color-primary\">egType=\"normal\"</span>后的嵌套效果</h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel egType=\"normal\">\n\t                            <PanelHeader>另一种形式的嵌套</PanelHeader>\n\t                            <PanelContent>\n\t                                <Panel egType=\"normal\">\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                <Panel  margin={0}>\n\t                                                    <PanelHeader>另一种形式的嵌套3</PanelHeader>\n\t                                                    <PanelContent>\n\t                                                        <Row>\n\t                                                            <Col>\n\t                                                                我是内容区\n\t                                                            </Col>\n\t                                                        </Row>\n\t                                                    </PanelContent>\n\t                                                </Panel>\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                                <Panel margin={0}>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t            </Grid>\n\t\n\t\n\t        );\n\t    }\n\t};\n\t\n\texport default Demo;\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "panel"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/panel"
            ],
            "show": true
        },
        "PanelFooter": {
            "name": "PanelFooter",
            "shortname": "PanelFooter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panel(面板)",
            "namespace": "",
            "file": "src/panels/PanelFooter.js",
            "line": 5,
            "description": "PanelFooter定义底部区域\n<div><a target=\"_blank\" href=\"http://future-team.github.io/eagle-ui/examples/index.html#/panel\">demo展示</a></div>\n<div><a target=\"_blank\" href=\"https://github.com/future-team/eagle-ui/blob/master/src/panels/PanelFooter.js\">查看源码</a></div>",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\t\n\timport {Row,Col,Grid,\n\t    Panel,PanelHeader,PanelFooter,PanelContent,\n\t    Input,Label,LabelGroup,\n\t    FormGroup,RadioGroup,CheckboxGroup,Select} from 'eagle-ui';\n\t\n\t\n\tlet Demo = class Demo extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t    }\n\t\n\t    show(){\n\t        console.debug(1);\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid fluid>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>无嵌套panel</h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col end>\n\t                        <Panel>\n\t                            <PanelHeader>title</PanelHeader>\n\t                            <PanelContent>\n\t                                <Row>\n\t                                    <Col sm={1}>\n\t                                        <Input label=''  type=\"checkbox\"  />\n\t                                    </Col>\n\t                                    <Col sm={10}>\n\t                                        <div className='shop-card'>\n\t                                            <h1 className='shop-card-title inline-block'>\n\t                                                西贝莜面村（中山公园店）\n\t\n\t                                            </h1>\n\t                                            <Label error radius>运营下线</Label>\n\t                                            <div>\n\t                                                <span className='row-key'>方案ID：</span><span className='row-value'>21355</span>\n\t                                                <span className='row-key'>负责人：</span><span className='row-value'>张三丰</span>\n\t                                                <span className='row-key'>城市：</span><span className='row-value'>上海</span>\n\t                                                <span className='row-key'>售卖时间：</span><span className='row-value'>2014-2015</span>\n\t                                                <span className='row-key'>售卖量：</span><span className='row-value'>0</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <span className='row-key'>客户：</span><span className='row-value'></span>\n\t                                                <span className='row-key'>已分配（王卓轩 2015-02-01 14:22）</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <LabelGroup simple clickCallback={this.show} >\n\t                                                    <Label>流程历史</Label>\n\t                                                    <Label>编辑</Label>\n\t                                                    <Label>删除</Label>\n\t                                                    <Label>复制</Label>\n\t                                                </LabelGroup>\n\t                                            </div>\n\t                                        </div>\n\t                                    </Col>\n\t                                    <Col sm={1}>审批通过</Col>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col sm={1}>\n\t                                        <Input label=''  type=\"checkbox\" checked  />\n\t                                    </Col>\n\t                                    <Col sm={10}>\n\t                                        <div className='shop-card'>\n\t                                            <h1 className='shop-card-title inline-block'>\n\t                                                西贝莜面村（中山公园店）\n\t\n\t                                            </h1>\n\t                                            <Label success radius>售卖中</Label>\n\t                                            <div>\n\t                                                <span className='row-key'>方案ID：</span><span className='row-value'>21355</span>\n\t                                                <span className='row-key'>负责人：</span><span className='row-value'>张三丰</span>\n\t                                                <span className='row-key'>城市：</span><span className='row-value'>上海</span>\n\t                                                <span className='row-key'>售卖时间：</span><span className='row-value'>2014-2015</span>\n\t                                                <span className='row-key'>售卖量：</span><span className='row-value'>0</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <span className='row-key'>客户：</span><span className='row-value'></span>\n\t                                                <span className='row-key'>已分配（王卓轩 2015-02-01 14:22）</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <LabelGroup simple clickCallback={this.show} >\n\t                                                    <Label>流程历史</Label>\n\t                                                    <Label>编辑</Label>\n\t                                                    <Label>删除</Label>\n\t                                                    <Label>复制</Label>\n\t                                                </LabelGroup>\n\t                                            </div>\n\t                                        </div>\n\t                                    </Col>\n\t                                    <Col sm={1}>审批通过</Col>\n\t                                </Row>\n\t\n\t                            </PanelContent>\n\t                            <PanelFooter>heiheihei</PanelFooter>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>panel嵌套<small>通过设置PanelHeader的leftFlag属性达到此效果</small></h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel>\n\t                            <PanelHeader leftFlag>我是标题</PanelHeader>\n\t                            <PanelContent>\n\t                                <Row>\n\t                                    <Col>\n\t                                        <FormGroup>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>性别</Col>\n\t                                                <Col sm={10}>\n\t                                                    <RadioGroup defaultChecked=\"男\" name=\"radio-sex\">\n\t                                                        <Input  type=\"radio\"  label=\"男\" value=\"男\" />\n\t                                                        <Input  type=\"radio\"  label=\"女\" value=\"女\"  />\n\t                                                    </RadioGroup>\n\t                                                </Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>体育爱好</Col>\n\t                                                <Col sm={10}>\n\t                                                    <CheckboxGroup>\n\t                                                        <Input  type=\"checkbox\" label=\"足球\" checked   />\n\t                                                        <Input  type=\"checkbox\" label=\"篮球\"    />\n\t                                                        <Input  type=\"checkbox\" label=\"羽毛球\" checked   />\n\t                                                        <Input  type=\"checkbox\" label=\"乒乓球\"    />\n\t                                                    </CheckboxGroup>\n\t                                                </Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={13}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                                <FormGroup>\n\t                                                    <Col sm={13}>出生日期</Col>\n\t                                                    <Col sm={13} end><Input name=\"test\" id=\"test\" placeholder=\"请输入出生日期\"   /></Col>\n\t                                                </FormGroup>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>所在城市</Col>\n\t                                                <Col sm={10} layer>\n\t                                                    <Row style={{margin:0}}>\n\t                                                        <Col sm={4} end>\n\t                                                            <Select placeholder=\"请选择城市\" >\n\t                                                                <item value='bei'>北京</item>\n\t                                                                <item value='shang'>上海</item>\n\t                                                                <item value='nan'>南京</item>\n\t                                                            </Select>\n\t                                                        </Col>\n\t                                                    </Row>\n\t                                                </Col>\n\t                                            </Row>\n\t                                        </FormGroup>\n\t                                    </Col>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col padding={0}>\n\t                                        <Panel>\n\t                                            <PanelHeader leftFlag>我是标题二</PanelHeader>\n\t                                            <PanelContent padding={true}>\n\t                                                我是下一个内容区\n\t                                            </PanelContent>\n\t                                        </Panel>\n\t                                    </Col>\n\t\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col padding={0}>\n\t                                        <Panel>\n\t                                            <PanelHeader leftFlag>我是标题三</PanelHeader>\n\t                                            <PanelContent padding={true}>\n\t                                                我是下一个内容区\n\t                                            </PanelContent>\n\t                                        </Panel>\n\t                                    </Col>\n\t\n\t                                </Row>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>默认嵌套</h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel>\n\t                            <PanelHeader>另一种形式的嵌套</PanelHeader>\n\t                            <PanelContent>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                <Panel>\n\t                                                    <PanelHeader>另一种形式的嵌套3</PanelHeader>\n\t                                                    <PanelContent>\n\t                                                        <Row>\n\t                                                            <Col>\n\t                                                                我是内容区\n\t                                                            </Col>\n\t                                                        </Row>\n\t                                                    </PanelContent>\n\t                                                </Panel>\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>设置<span className=\"color-primary\">egType=\"normal\"</span>后的嵌套效果</h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel egType=\"normal\">\n\t                            <PanelHeader>另一种形式的嵌套</PanelHeader>\n\t                            <PanelContent>\n\t                                <Panel egType=\"normal\">\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                <Panel  margin={0}>\n\t                                                    <PanelHeader>另一种形式的嵌套3</PanelHeader>\n\t                                                    <PanelContent>\n\t                                                        <Row>\n\t                                                            <Col>\n\t                                                                我是内容区\n\t                                                            </Col>\n\t                                                        </Row>\n\t                                                    </PanelContent>\n\t                                                </Panel>\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                                <Panel margin={0}>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t            </Grid>\n\t\n\t\n\t        );\n\t    }\n\t};\n\t\n\texport default Demo;\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "panel"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/panel"
            ],
            "show": true
        },
        "PanelHeader": {
            "name": "PanelHeader",
            "shortname": "PanelHeader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panel(面板)",
            "namespace": "",
            "file": "src/panels/PanelHeader.js",
            "line": 5,
            "description": "PanelHeader定义头部区域\n<div><a target=\"_blank\" href=\"http://future-team.github.io/eagle-ui/examples/index.html#/panel\">demo展示</a></div>\n<div><a target=\"_blank\" href=\"https://github.com/future-team/eagle-ui/blob/master/src/panels/PanelHeader.js\">查看源码</a></div>",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\t\n\timport {Row,Col,Grid,\n\t    Panel,PanelHeader,PanelFooter,PanelContent,\n\t    Input,Label,LabelGroup,\n\t    FormGroup,RadioGroup,CheckboxGroup,Select} from 'eagle-ui';\n\t\n\t\n\tlet Demo = class Demo extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t    }\n\t\n\t    show(){\n\t        console.debug(1);\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid fluid>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>无嵌套panel</h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col end>\n\t                        <Panel>\n\t                            <PanelHeader>title</PanelHeader>\n\t                            <PanelContent>\n\t                                <Row>\n\t                                    <Col sm={1}>\n\t                                        <Input label=''  type=\"checkbox\"  />\n\t                                    </Col>\n\t                                    <Col sm={10}>\n\t                                        <div className='shop-card'>\n\t                                            <h1 className='shop-card-title inline-block'>\n\t                                                西贝莜面村（中山公园店）\n\t\n\t                                            </h1>\n\t                                            <Label error radius>运营下线</Label>\n\t                                            <div>\n\t                                                <span className='row-key'>方案ID：</span><span className='row-value'>21355</span>\n\t                                                <span className='row-key'>负责人：</span><span className='row-value'>张三丰</span>\n\t                                                <span className='row-key'>城市：</span><span className='row-value'>上海</span>\n\t                                                <span className='row-key'>售卖时间：</span><span className='row-value'>2014-2015</span>\n\t                                                <span className='row-key'>售卖量：</span><span className='row-value'>0</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <span className='row-key'>客户：</span><span className='row-value'></span>\n\t                                                <span className='row-key'>已分配（王卓轩 2015-02-01 14:22）</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <LabelGroup simple clickCallback={this.show} >\n\t                                                    <Label>流程历史</Label>\n\t                                                    <Label>编辑</Label>\n\t                                                    <Label>删除</Label>\n\t                                                    <Label>复制</Label>\n\t                                                </LabelGroup>\n\t                                            </div>\n\t                                        </div>\n\t                                    </Col>\n\t                                    <Col sm={1}>审批通过</Col>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col sm={1}>\n\t                                        <Input label=''  type=\"checkbox\" checked  />\n\t                                    </Col>\n\t                                    <Col sm={10}>\n\t                                        <div className='shop-card'>\n\t                                            <h1 className='shop-card-title inline-block'>\n\t                                                西贝莜面村（中山公园店）\n\t\n\t                                            </h1>\n\t                                            <Label success radius>售卖中</Label>\n\t                                            <div>\n\t                                                <span className='row-key'>方案ID：</span><span className='row-value'>21355</span>\n\t                                                <span className='row-key'>负责人：</span><span className='row-value'>张三丰</span>\n\t                                                <span className='row-key'>城市：</span><span className='row-value'>上海</span>\n\t                                                <span className='row-key'>售卖时间：</span><span className='row-value'>2014-2015</span>\n\t                                                <span className='row-key'>售卖量：</span><span className='row-value'>0</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <span className='row-key'>客户：</span><span className='row-value'></span>\n\t                                                <span className='row-key'>已分配（王卓轩 2015-02-01 14:22）</span>\n\t                                            </div>\n\t                                            <div>\n\t                                                <LabelGroup simple clickCallback={this.show} >\n\t                                                    <Label>流程历史</Label>\n\t                                                    <Label>编辑</Label>\n\t                                                    <Label>删除</Label>\n\t                                                    <Label>复制</Label>\n\t                                                </LabelGroup>\n\t                                            </div>\n\t                                        </div>\n\t                                    </Col>\n\t                                    <Col sm={1}>审批通过</Col>\n\t                                </Row>\n\t\n\t                            </PanelContent>\n\t                            <PanelFooter>heiheihei</PanelFooter>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>panel嵌套<small>通过设置PanelHeader的leftFlag属性达到此效果</small></h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel>\n\t                            <PanelHeader leftFlag>我是标题</PanelHeader>\n\t                            <PanelContent>\n\t                                <Row>\n\t                                    <Col>\n\t                                        <FormGroup>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>性别</Col>\n\t                                                <Col sm={10}>\n\t                                                    <RadioGroup defaultChecked=\"男\" name=\"radio-sex\">\n\t                                                        <Input  type=\"radio\"  label=\"男\" value=\"男\" />\n\t                                                        <Input  type=\"radio\"  label=\"女\" value=\"女\"  />\n\t                                                    </RadioGroup>\n\t                                                </Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>体育爱好</Col>\n\t                                                <Col sm={10}>\n\t                                                    <CheckboxGroup>\n\t                                                        <Input  type=\"checkbox\" label=\"足球\" checked   />\n\t                                                        <Input  type=\"checkbox\" label=\"篮球\"    />\n\t                                                        <Input  type=\"checkbox\" label=\"羽毛球\" checked   />\n\t                                                        <Input  type=\"checkbox\" label=\"乒乓球\"    />\n\t                                                    </CheckboxGroup>\n\t                                                </Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={13}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                                <FormGroup>\n\t                                                    <Col sm={13}>出生日期</Col>\n\t                                                    <Col sm={13} end><Input name=\"test\" id=\"test\" placeholder=\"请输入出生日期\"   /></Col>\n\t                                                </FormGroup>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>所在城市</Col>\n\t                                                <Col sm={10} layer>\n\t                                                    <Row style={{margin:0}}>\n\t                                                        <Col sm={4} end>\n\t                                                            <Select placeholder=\"请选择城市\" >\n\t                                                                <item value='bei'>北京</item>\n\t                                                                <item value='shang'>上海</item>\n\t                                                                <item value='nan'>南京</item>\n\t                                                            </Select>\n\t                                                        </Col>\n\t                                                    </Row>\n\t                                                </Col>\n\t                                            </Row>\n\t                                        </FormGroup>\n\t                                    </Col>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col padding={0}>\n\t                                        <Panel>\n\t                                            <PanelHeader leftFlag>我是标题二</PanelHeader>\n\t                                            <PanelContent padding={true}>\n\t                                                我是下一个内容区\n\t                                            </PanelContent>\n\t                                        </Panel>\n\t                                    </Col>\n\t\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col padding={0}>\n\t                                        <Panel>\n\t                                            <PanelHeader leftFlag>我是标题三</PanelHeader>\n\t                                            <PanelContent padding={true}>\n\t                                                我是下一个内容区\n\t                                            </PanelContent>\n\t                                        </Panel>\n\t                                    </Col>\n\t\n\t                                </Row>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>默认嵌套</h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel>\n\t                            <PanelHeader>另一种形式的嵌套</PanelHeader>\n\t                            <PanelContent>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                <Panel>\n\t                                                    <PanelHeader>另一种形式的嵌套3</PanelHeader>\n\t                                                    <PanelContent>\n\t                                                        <Row>\n\t                                                            <Col>\n\t                                                                我是内容区\n\t                                                            </Col>\n\t                                                        </Row>\n\t                                                    </PanelContent>\n\t                                                </Panel>\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>设置<span className=\"color-primary\">egType=\"normal\"</span>后的嵌套效果</h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel egType=\"normal\">\n\t                            <PanelHeader>另一种形式的嵌套</PanelHeader>\n\t                            <PanelContent>\n\t                                <Panel egType=\"normal\">\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                <Panel  margin={0}>\n\t                                                    <PanelHeader>另一种形式的嵌套3</PanelHeader>\n\t                                                    <PanelContent>\n\t                                                        <Row>\n\t                                                            <Col>\n\t                                                                我是内容区\n\t                                                            </Col>\n\t                                                        </Row>\n\t                                                    </PanelContent>\n\t                                                </Panel>\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                                <Panel margin={0}>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t            </Grid>\n\t\n\t\n\t        );\n\t    }\n\t};\n\t\n\texport default Demo;\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "panel"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/panel"
            ],
            "show": true
        },
        "Column": {
            "name": "Column",
            "shortname": "Column",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "table(表格)",
            "namespace": "",
            "file": "src/tables/Column.js",
            "line": 5,
            "description": "封装Tr,Td组件，直接配合设置data属性的Table使用",
            "is_constructor": 1,
            "content": "{string} type 内容",
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {Col,Row,Column,Th,Table,Tr,Td} from 'eagle-ui';\n\t\n\t\n\texport default class TableCls extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state={\n\t            tableData:[\n\t                {name: 'Rylan', email: 'Angelita_Weimann42@gmail.com',score:2},\n\t                {name: 'Amelia', email: 'Dexter.Trantow57@hotmail.com',score:3},\n\t                {name: 'Estevan', email: 'Aimee7@hotmail.com',score:4},\n\t                {name: 'Florence', email: 'Jarrod.Bernier13@yahoo.com',score:5},\n\t                {name: 'Tressa', email: 'Yadira1@hotmail.com',score:6},\n\t            ]\n\t        };\n\t    }\n\t    componentDidMount(){\n\t        let _this=this;\n\t        setTimeout(()=>{\n\t            _this.setState({\n\t                tableData:[\n\t                    {name: 'Amelia2', email: 'Dexter.Trantow57@hotmail.com',score:200},\n\t                    {name: 'Rylan2', email: 'Angelita_Weimann42@gmail.com',score:100},\n\t                    {name: 'Estevan2', email: 'Aimee7@hotmail.com',score:106},\n\t                    {name: 'Florence2', email: 'Jarrod.Bernier13@yahoo.com',score:233},\n\t                    {name: 'Tressa2', email: 'Yadira1@hotmail.com',score:900},\n\t                ]\n\t            })\n\t        },5000);\n\t    }\n\t    render(){\n\t        let tableData=this.state.tableData;\n\t        return (\n\t             <div>\n\t                <Row>\n\t                    <Col>\n\t                        <Table data={tableData}>\n\t                            <Column\n\t                                header=\"Name\"\n\t                                field='name'\n\t                                cell={\n\t                                    <Td data={tableData}></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"red\"}}>Email</span>}\n\t                                field='email'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"green\"}}>Score</span>}\n\t                                field='score'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                        </Table>\n\t                     </Col>\n\t                 </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Table>\n\t                            <thead>\n\t                            <Tr>\n\t                                <Th>数据类型</Th>\n\t                                <Th>数据项</Th>\n\t                                <Th>昨日</Th>\n\t                                <Th>本月</Th>\n\t                                <Th>上月</Th>\n\t                                <Th>本月城市排名</Th>\n\t                            </Tr>\n\t                            </thead>\n\t                            <tbody>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">过程指标</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td arrow-up>消费交易额</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr split>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">业绩</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            </tbody>\n\t                        </Table>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "table"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/table"
            ],
            "show": true
        },
        "Table": {
            "name": "Table",
            "shortname": "Table",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "table(表格)",
            "namespace": "",
            "file": "src/tables/Table.js",
            "line": 17,
            "description": "表格组件",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {Col,Row,Column,Th,Table,Tr,Td} from 'eagle-ui';\n\t\n\t\n\texport default class TableCls extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state={\n\t            tableData:[\n\t                {name: 'Rylan', email: 'Angelita_Weimann42@gmail.com',score:2},\n\t                {name: 'Amelia', email: 'Dexter.Trantow57@hotmail.com',score:3},\n\t                {name: 'Estevan', email: 'Aimee7@hotmail.com',score:4},\n\t                {name: 'Florence', email: 'Jarrod.Bernier13@yahoo.com',score:5},\n\t                {name: 'Tressa', email: 'Yadira1@hotmail.com',score:6},\n\t            ]\n\t        };\n\t    }\n\t    componentDidMount(){\n\t        let _this=this;\n\t        setTimeout(()=>{\n\t            _this.setState({\n\t                tableData:[\n\t                    {name: 'Amelia2', email: 'Dexter.Trantow57@hotmail.com',score:200},\n\t                    {name: 'Rylan2', email: 'Angelita_Weimann42@gmail.com',score:100},\n\t                    {name: 'Estevan2', email: 'Aimee7@hotmail.com',score:106},\n\t                    {name: 'Florence2', email: 'Jarrod.Bernier13@yahoo.com',score:233},\n\t                    {name: 'Tressa2', email: 'Yadira1@hotmail.com',score:900},\n\t                ]\n\t            })\n\t        },5000);\n\t    }\n\t    render(){\n\t        let tableData=this.state.tableData;\n\t        return (\n\t             <div>\n\t                <Row>\n\t                    <Col>\n\t                        <Table data={tableData}>\n\t                            <Column\n\t                                header=\"Name\"\n\t                                field='name'\n\t                                cell={\n\t                                    <Td data={tableData}></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"red\"}}>Email</span>}\n\t                                field='email'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"green\"}}>Score</span>}\n\t                                field='score'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                        </Table>\n\t                     </Col>\n\t                 </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Table>\n\t                            <thead>\n\t                            <Tr>\n\t                                <Th>数据类型</Th>\n\t                                <Th>数据项</Th>\n\t                                <Th>昨日</Th>\n\t                                <Th>本月</Th>\n\t                                <Th>上月</Th>\n\t                                <Th>本月城市排名</Th>\n\t                            </Tr>\n\t                            </thead>\n\t                            <tbody>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">过程指标</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td arrow-up>消费交易额</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr split>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">业绩</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            </tbody>\n\t                        </Table>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "table"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/table"
            ],
            "show": true
        },
        "Td": {
            "name": "Td",
            "shortname": "Td",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "table(表格)",
            "namespace": "",
            "file": "src/tables/Td.js",
            "line": 5,
            "description": "表格单元格组件",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {Col,Row,Column,Th,Table,Tr,Td} from 'eagle-ui';\n\t\n\t\n\texport default class TableCls extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state={\n\t            tableData:[\n\t                {name: 'Rylan', email: 'Angelita_Weimann42@gmail.com',score:2},\n\t                {name: 'Amelia', email: 'Dexter.Trantow57@hotmail.com',score:3},\n\t                {name: 'Estevan', email: 'Aimee7@hotmail.com',score:4},\n\t                {name: 'Florence', email: 'Jarrod.Bernier13@yahoo.com',score:5},\n\t                {name: 'Tressa', email: 'Yadira1@hotmail.com',score:6},\n\t            ]\n\t        };\n\t    }\n\t    componentDidMount(){\n\t        let _this=this;\n\t        setTimeout(()=>{\n\t            _this.setState({\n\t                tableData:[\n\t                    {name: 'Amelia2', email: 'Dexter.Trantow57@hotmail.com',score:200},\n\t                    {name: 'Rylan2', email: 'Angelita_Weimann42@gmail.com',score:100},\n\t                    {name: 'Estevan2', email: 'Aimee7@hotmail.com',score:106},\n\t                    {name: 'Florence2', email: 'Jarrod.Bernier13@yahoo.com',score:233},\n\t                    {name: 'Tressa2', email: 'Yadira1@hotmail.com',score:900},\n\t                ]\n\t            })\n\t        },5000);\n\t    }\n\t    render(){\n\t        let tableData=this.state.tableData;\n\t        return (\n\t             <div>\n\t                <Row>\n\t                    <Col>\n\t                        <Table data={tableData}>\n\t                            <Column\n\t                                header=\"Name\"\n\t                                field='name'\n\t                                cell={\n\t                                    <Td data={tableData}></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"red\"}}>Email</span>}\n\t                                field='email'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"green\"}}>Score</span>}\n\t                                field='score'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                        </Table>\n\t                     </Col>\n\t                 </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Table>\n\t                            <thead>\n\t                            <Tr>\n\t                                <Th>数据类型</Th>\n\t                                <Th>数据项</Th>\n\t                                <Th>昨日</Th>\n\t                                <Th>本月</Th>\n\t                                <Th>上月</Th>\n\t                                <Th>本月城市排名</Th>\n\t                            </Tr>\n\t                            </thead>\n\t                            <tbody>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">过程指标</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td arrow-up>消费交易额</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr split>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">业绩</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            </tbody>\n\t                        </Table>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "table"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/table"
            ],
            "show": true
        },
        "Th": {
            "name": "Th",
            "shortname": "Th",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "table(表格)",
            "namespace": "",
            "file": "src/tables/Th.js",
            "line": 5,
            "description": "表头单元格组件",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {Col,Row,Column,Th,Table,Tr,Td} from 'eagle-ui';\n\t\n\t\n\texport default class TableCls extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state={\n\t            tableData:[\n\t                {name: 'Rylan', email: 'Angelita_Weimann42@gmail.com',score:2},\n\t                {name: 'Amelia', email: 'Dexter.Trantow57@hotmail.com',score:3},\n\t                {name: 'Estevan', email: 'Aimee7@hotmail.com',score:4},\n\t                {name: 'Florence', email: 'Jarrod.Bernier13@yahoo.com',score:5},\n\t                {name: 'Tressa', email: 'Yadira1@hotmail.com',score:6},\n\t            ]\n\t        };\n\t    }\n\t    componentDidMount(){\n\t        let _this=this;\n\t        setTimeout(()=>{\n\t            _this.setState({\n\t                tableData:[\n\t                    {name: 'Amelia2', email: 'Dexter.Trantow57@hotmail.com',score:200},\n\t                    {name: 'Rylan2', email: 'Angelita_Weimann42@gmail.com',score:100},\n\t                    {name: 'Estevan2', email: 'Aimee7@hotmail.com',score:106},\n\t                    {name: 'Florence2', email: 'Jarrod.Bernier13@yahoo.com',score:233},\n\t                    {name: 'Tressa2', email: 'Yadira1@hotmail.com',score:900},\n\t                ]\n\t            })\n\t        },5000);\n\t    }\n\t    render(){\n\t        let tableData=this.state.tableData;\n\t        return (\n\t             <div>\n\t                <Row>\n\t                    <Col>\n\t                        <Table data={tableData}>\n\t                            <Column\n\t                                header=\"Name\"\n\t                                field='name'\n\t                                cell={\n\t                                    <Td data={tableData}></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"red\"}}>Email</span>}\n\t                                field='email'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"green\"}}>Score</span>}\n\t                                field='score'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                        </Table>\n\t                     </Col>\n\t                 </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Table>\n\t                            <thead>\n\t                            <Tr>\n\t                                <Th>数据类型</Th>\n\t                                <Th>数据项</Th>\n\t                                <Th>昨日</Th>\n\t                                <Th>本月</Th>\n\t                                <Th>上月</Th>\n\t                                <Th>本月城市排名</Th>\n\t                            </Tr>\n\t                            </thead>\n\t                            <tbody>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">过程指标</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td arrow-up>消费交易额</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr split>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">业绩</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            </tbody>\n\t                        </Table>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "table"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/table"
            ],
            "show": true
        },
        "Tr": {
            "name": "Tr",
            "shortname": "Tr",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "table(表格)",
            "namespace": "",
            "file": "src/tables/Tr.js",
            "line": 5,
            "description": "表格行组件",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {Col,Row,Column,Th,Table,Tr,Td} from 'eagle-ui';\n\t\n\t\n\texport default class TableCls extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state={\n\t            tableData:[\n\t                {name: 'Rylan', email: 'Angelita_Weimann42@gmail.com',score:2},\n\t                {name: 'Amelia', email: 'Dexter.Trantow57@hotmail.com',score:3},\n\t                {name: 'Estevan', email: 'Aimee7@hotmail.com',score:4},\n\t                {name: 'Florence', email: 'Jarrod.Bernier13@yahoo.com',score:5},\n\t                {name: 'Tressa', email: 'Yadira1@hotmail.com',score:6},\n\t            ]\n\t        };\n\t    }\n\t    componentDidMount(){\n\t        let _this=this;\n\t        setTimeout(()=>{\n\t            _this.setState({\n\t                tableData:[\n\t                    {name: 'Amelia2', email: 'Dexter.Trantow57@hotmail.com',score:200},\n\t                    {name: 'Rylan2', email: 'Angelita_Weimann42@gmail.com',score:100},\n\t                    {name: 'Estevan2', email: 'Aimee7@hotmail.com',score:106},\n\t                    {name: 'Florence2', email: 'Jarrod.Bernier13@yahoo.com',score:233},\n\t                    {name: 'Tressa2', email: 'Yadira1@hotmail.com',score:900},\n\t                ]\n\t            })\n\t        },5000);\n\t    }\n\t    render(){\n\t        let tableData=this.state.tableData;\n\t        return (\n\t             <div>\n\t                <Row>\n\t                    <Col>\n\t                        <Table data={tableData}>\n\t                            <Column\n\t                                header=\"Name\"\n\t                                field='name'\n\t                                cell={\n\t                                    <Td data={tableData}></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"red\"}}>Email</span>}\n\t                                field='email'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"green\"}}>Score</span>}\n\t                                field='score'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                        </Table>\n\t                     </Col>\n\t                 </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Table>\n\t                            <thead>\n\t                            <Tr>\n\t                                <Th>数据类型</Th>\n\t                                <Th>数据项</Th>\n\t                                <Th>昨日</Th>\n\t                                <Th>本月</Th>\n\t                                <Th>上月</Th>\n\t                                <Th>本月城市排名</Th>\n\t                            </Tr>\n\t                            </thead>\n\t                            <tbody>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">过程指标</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td arrow-up>消费交易额</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr split>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">业绩</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            </tbody>\n\t                        </Table>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "table"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/table"
            ],
            "show": true
        },
        "Button": {
            "name": "Button",
            "shortname": "Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form(表单)",
            "namespace": "",
            "file": "src/Button.js",
            "line": 8,
            "description": "- 按钮组件提供内置样式<br/>\n- 也可以自定义行内样式和className<br/>\n- 支持disabled, active等属性定义<br/>\n- 可以通过egSize 设置大小，可选xs、sm、lg。<br/>\n- 通过egStyle选择按钮颜色，可选'success','error','warning','danger','default','link','white'",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React, { Component ,PropTypes} from 'react';\n\timport {ButtonGroup,Button,Row,Col,Grid} from 'eagle-ui';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout';\n\timport Code, {getFile} from '../libs/Code';\n\t\n\texport default class ButtonCls extends Component{\n\t    onActive(target,html){\n\t        console.dir(html);\n\t        alert('测试');\n\t    }\n\t    render(){\n\t        return (\n\t            <DemoLayout title=\"按钮组件\">\n\t                <DemoItem title=\"按钮样式\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('button-demo1')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button egStyle=\"warning\">警告</Button>&nbsp;\n\t                        <Button egStyle=\"success\">成功</Button>&nbsp;\n\t                        <Button egStyle=\"danger\">危险</Button>&nbsp;\n\t                        <Button egStyle=\"error\">错误</Button>&nbsp;\n\t                        <Button egStyle=\"info\">info</Button>&nbsp;\n\t                        <Button >默认</Button>&nbsp;\n\t                        <Button egStyle=\"white\">白色</Button>&nbsp;\n\t                        <Button egStyle=\"link\" >链接</Button>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"按钮大小\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('button-demo2')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button egSize=\"xs\" >小号</Button>&nbsp;\n\t                        <Button>默认</Button>&nbsp;\n\t                        <Button egSize=\"lg\" >大号</Button>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"按钮组排列\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('button-demo3')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <ButtonGroup egType=\"justify\" activeCallback={this.onActive}>\n\t                            <Button egStyle=\"warning\">水平按钮组1</Button><Button egStyle=\"warning\">水平按钮组2</Button><Button egStyle=\"warning\">水平按钮组3</Button>\n\t                        </ButtonGroup>\n\t                        <br/>\n\t                        <ButtonGroup egType=\"tacked\">\n\t                            <Button>垂直按钮组1</Button><Button>垂直按钮组2</Button><Button>垂直按钮组3</Button>\n\t                        </ButtonGroup>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"空心按钮\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('button-demo4')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button egStyle=\"warning\" hollow>警告</Button>&nbsp;\n\t                        <Button egStyle=\"success\" hollow>成功</Button>&nbsp;\n\t                        <Button egStyle=\"danger\" hollow>危险</Button>&nbsp;\n\t                        <Button egStyle=\"error\" hollow>错误</Button>&nbsp;\n\t                        <Button egStyle=\"white\" hollow>white</Button>&nbsp;\n\t                        <Button egStyle=\"link\" hollow>link</Button>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"默认／禁用\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('button-demo5')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button radius egSize=\"sm\">默认</Button>&nbsp;\n\t                        <Button radius egSize=\"sm\" disabled>默认不可点</Button>\n\t                        <br/><br/>\n\t                        <Button egStyle=\"white\">白色</Button>&nbsp;\n\t                        <Button egStyle=\"white\" disabled>白色不可点</Button>\n\t                        <br/><br/>\n\t                        <Button egStyle=\"success\">成功</Button>&nbsp;\n\t                        <Button egStyle=\"success\" disabled>成功不可点</Button>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t            </DemoLayout>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "button"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/button"
            ],
            "show": true
        },
        "ButtonGroup": {
            "name": "ButtonGroup",
            "shortname": "ButtonGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form(表单)",
            "namespace": "",
            "file": "src/ButtonGroup.js",
            "line": 8,
            "description": "ButtonGroup组件配合Button组件,提供横、竖两种排列方式（它的作用是将Button成组展示）<br/>\n设置justify属性时可以将按钮组水平排列<br/>\n设置tacked属性时可以将按钮组竖直排列",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React, { Component ,PropTypes} from 'react';\n\timport {ButtonGroup,Button,Row,Col,Grid} from 'eagle-ui';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout';\n\timport Code, {getFile} from '../libs/Code';\n\t\n\texport default class ButtonCls extends Component{\n\t    onActive(target,html){\n\t        console.dir(html);\n\t        alert('测试');\n\t    }\n\t    render(){\n\t        return (\n\t            <DemoLayout title=\"按钮组件\">\n\t                <DemoItem title=\"按钮样式\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('button-demo1')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button egStyle=\"warning\">警告</Button>&nbsp;\n\t                        <Button egStyle=\"success\">成功</Button>&nbsp;\n\t                        <Button egStyle=\"danger\">危险</Button>&nbsp;\n\t                        <Button egStyle=\"error\">错误</Button>&nbsp;\n\t                        <Button egStyle=\"info\">info</Button>&nbsp;\n\t                        <Button >默认</Button>&nbsp;\n\t                        <Button egStyle=\"white\">白色</Button>&nbsp;\n\t                        <Button egStyle=\"link\" >链接</Button>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"按钮大小\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('button-demo2')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button egSize=\"xs\" >小号</Button>&nbsp;\n\t                        <Button>默认</Button>&nbsp;\n\t                        <Button egSize=\"lg\" >大号</Button>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"按钮组排列\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('button-demo3')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <ButtonGroup egType=\"justify\" activeCallback={this.onActive}>\n\t                            <Button egStyle=\"warning\">水平按钮组1</Button><Button egStyle=\"warning\">水平按钮组2</Button><Button egStyle=\"warning\">水平按钮组3</Button>\n\t                        </ButtonGroup>\n\t                        <br/>\n\t                        <ButtonGroup egType=\"tacked\">\n\t                            <Button>垂直按钮组1</Button><Button>垂直按钮组2</Button><Button>垂直按钮组3</Button>\n\t                        </ButtonGroup>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"空心按钮\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('button-demo4')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button egStyle=\"warning\" hollow>警告</Button>&nbsp;\n\t                        <Button egStyle=\"success\" hollow>成功</Button>&nbsp;\n\t                        <Button egStyle=\"danger\" hollow>危险</Button>&nbsp;\n\t                        <Button egStyle=\"error\" hollow>错误</Button>&nbsp;\n\t                        <Button egStyle=\"white\" hollow>white</Button>&nbsp;\n\t                        <Button egStyle=\"link\" hollow>link</Button>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"默认／禁用\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('button-demo5')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button radius egSize=\"sm\">默认</Button>&nbsp;\n\t                        <Button radius egSize=\"sm\" disabled>默认不可点</Button>\n\t                        <br/><br/>\n\t                        <Button egStyle=\"white\">白色</Button>&nbsp;\n\t                        <Button egStyle=\"white\" disabled>白色不可点</Button>\n\t                        <br/><br/>\n\t                        <Button egStyle=\"success\">成功</Button>&nbsp;\n\t                        <Button egStyle=\"success\" disabled>成功不可点</Button>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t            </DemoLayout>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "button"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/button"
            ],
            "show": true
        },
        "Calendar": {
            "name": "Calendar",
            "shortname": "Calendar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/Calendar.js",
            "line": 6,
            "description": "日历组件<br />\n需要和CalendarPanel组合使用<br/>\n主要UI属性接口:\n<ul>\n    <li>startDate:定义起始日期<br>\n        例如<code>\n                startDate=\"2015-11-11\"\n        </code>\n    </li>\n    <li>endDate:定义结束日期<br>\n        例如<code>\n           endDate=\"2015-12-1\"\n        </code>\n    </li>\n    <li>defaultDate:默认今天<br>\n        默认<code>\n           defaultDate=new Date()\n        </code>\n    </li>\n     <li>format:日期格式<br>\n        默认<code>\n         format='yyyy-MM-dd'\n        </code>\n    </li>\n     <li>selectCallback:选择某个具体日期后执行的回调函数<strong style='color:blue'>&nbsp;&nbsp;&nbsp;配合CalendarPanel使用时,不需要定义</strong><br>\n        例如<code>\n        selectCallback(dateString);参数为经过format处理后的日期\n        </code>\n    </li>\n</ul>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component,PropTypes} from 'react';\n\timport {Input, CalendarPanel, Button, Grid, Row, Col} from 'eagle-ui';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout';\n\timport Code, {getFile} from '../libs/Code';\n\t\n\texport default class Calendar extends Component{\n\t    constructor(props, context) {\n\t        super(props, context);\n\t        this.state = {\n\t            show:false,\n\t            defaultDate:'2016-12-1'\n\t        };\n\t        setTimeout(function(){\n\t            this.setState({\n\t                defaultDate:'2017-2-12'\n\t            });\n\t        }.bind(this),2000);\n\t    };\n\t\n\t    focus(){\n\t        this.setState({\n\t            show:true\n\t        });\n\t    }\n\t    blur(){\n\t        this.setState({\n\t            show:false\n\t        });\n\t    }\n\t    changeDate(){\n\t      this.refs.cp.dateChange('2015-03-02');\n\t    }\n\t    getvalue(val){\n\t        this.setState({\n\t            defaultDate: val\n\t        });\n\t    }\n\t    render(){\n\t        return (\n\t            <div style={{paddingBottom: '250px'}}>\n\t                <DemoLayout title=\"日历组件\">\n\t                    <DemoItem title=\"默认样式\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('calendar-demo1')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <CalendarPanel>\n\t                                <Input placeholder=\"请选择日期\"  icon=\"calendar\" />\n\t                            </CalendarPanel>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                    <DemoItem title=\"选择年月\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('calendar-demo2')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <CalendarPanel calendarType=\"yearMonth\" format=\"yyyy年MM月\">\n\t                                <Input placeholder=\"请选择日期\"  icon=\"calendar\" />\n\t                            </CalendarPanel>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                    <DemoItem title=\"起止日期限制\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('button-demo3')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <CalendarPanel defaultDate={this.state.defaultDate} startDate=\"2017-02-05\" endDate=\"2017-10-01\" getValueCallback={::this.getvalue}>\n\t                                <Input placeholder=\"请选择日期\"/>\n\t                            </CalendarPanel>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                    <DemoItem title=\"日期格式化\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('calendar-demo4')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <CalendarPanel format=\"yyyy年MM月dd日\">\n\t                                <Input placeholder=\"请选择日期\"  icon=\"calendar\" />\n\t                            </CalendarPanel>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                    <DemoItem title=\"改变时间\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('calendar-demo5')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <Button onClick={::this.changeDate} >改变时间</Button>\n\t                            <br/>\n\t                            <br/>\n\t                            <CalendarPanel ref='cp' format=\"yyyy年MM月dd日\">\n\t                                <Input placeholder=\"请选择日期\"  icon=\"calendar\"/>\n\t                            </CalendarPanel>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                    <DemoItem title=\"自定义定位\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('calendar-demo6')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <Grid>\n\t                                <Row>\n\t                                    <Col sm={3}>\n\t                                        <CalendarPanel ref='cp-top' format=\"yyyy年MM月dd日\" direction='top'>\n\t                                            <Input placeholder=\"上部\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                    <Col sm={3}>\n\t                                        <CalendarPanel ref='cp-right' format=\"yyyy年MM月dd日\" direction='right'>\n\t                                            <Input placeholder=\"右边\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                    <Col sm={3}>\n\t                                        <CalendarPanel ref='cp-down' format=\"yyyy年MM月dd日\" direction='down'>\n\t                                            <Input placeholder=\"底部\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                    <Col sm={3}>\n\t                                        <CalendarPanel ref='cp-left' format=\"yyyy年MM月dd日\" direction='left'>\n\t                                            <Input placeholder=\"左边\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col sm={3}/>\n\t                                    <Col sm={6}>\n\t                                        <CalendarPanel ref='cp-auto-1' format=\"yyyy年MM月dd日\">\n\t                                            <Input placeholder=\"自动定位\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                    <Col sm={3}/>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col sm={4}>\n\t                                        <CalendarPanel ref='cp-left-1' format=\"yyyy年MM月dd日\" direction='left'>\n\t                                            <Input placeholder=\"定位到左边，但是左边位置不足\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                    <Col sm={4}/>\n\t                                    <Col sm={4}>\n\t                                        <CalendarPanel ref='cp-right-1' format=\"yyyy年MM月dd日\" direction='right'>\n\t                                            <Input placeholder=\"定位到右边，但是右边位置不足\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col sm={3}>\n\t                                        <CalendarPanel ref='cp-auto-2' format=\"yyyy年MM月dd日\">\n\t                                            <Input placeholder=\"自动定位，区别左右\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                    <Col sm={6}/>\n\t                                    <Col sm={3}>\n\t                                        <CalendarPanel ref='cp-auto-3' format=\"yyyy年MM月dd日\">\n\t                                            <Input placeholder=\"自动定位，区别左右\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col sm={6}>\n\t                                        <CalendarPanel ref='cp-auto-4' format=\"yyyy年MM月dd日\">\n\t                                            <Input placeholder=\"自动定位，区别左右\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                    <Col sm={6}>\n\t                                        <CalendarPanel ref='cp-auto-5' format=\"yyyy年MM月dd日\">\n\t                                            <Input placeholder=\"自动定位，区别左右\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                </Row>\n\t                            </Grid>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                </DemoLayout>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "calendar"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/calendar"
            ],
            "show": true
        },
        "CalendarPanel": {
            "name": "CalendarPanel",
            "shortname": "CalendarPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/CalendarPanel.js",
            "line": 10,
            "description": "CalendarPanel组件<br>\n接受Calendar的所有属性接口，额外增加一个getValueCallback方法\n\n主要属性接口:\n<ul>\n    <li>getValueCallback参数为<code>格式化后的string</code></li>\n    <li style='color:red'><a href='./Calendar.html'>其他属性定义请参照Calendar组件</a></li>\n</ul>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component,PropTypes} from 'react';\n\timport {Input, CalendarPanel, Button, Grid, Row, Col} from 'eagle-ui';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout';\n\timport Code, {getFile} from '../libs/Code';\n\t\n\texport default class Calendar extends Component{\n\t    constructor(props, context) {\n\t        super(props, context);\n\t        this.state = {\n\t            show:false,\n\t            defaultDate:'2016-12-1'\n\t        };\n\t        setTimeout(function(){\n\t            this.setState({\n\t                defaultDate:'2017-2-12'\n\t            });\n\t        }.bind(this),2000);\n\t    };\n\t\n\t    focus(){\n\t        this.setState({\n\t            show:true\n\t        });\n\t    }\n\t    blur(){\n\t        this.setState({\n\t            show:false\n\t        });\n\t    }\n\t    changeDate(){\n\t      this.refs.cp.dateChange('2015-03-02');\n\t    }\n\t    getvalue(val){\n\t        this.setState({\n\t            defaultDate: val\n\t        });\n\t    }\n\t    render(){\n\t        return (\n\t            <div style={{paddingBottom: '250px'}}>\n\t                <DemoLayout title=\"日历组件\">\n\t                    <DemoItem title=\"默认样式\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('calendar-demo1')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <CalendarPanel>\n\t                                <Input placeholder=\"请选择日期\"  icon=\"calendar\" />\n\t                            </CalendarPanel>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                    <DemoItem title=\"选择年月\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('calendar-demo2')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <CalendarPanel calendarType=\"yearMonth\" format=\"yyyy年MM月\">\n\t                                <Input placeholder=\"请选择日期\"  icon=\"calendar\" />\n\t                            </CalendarPanel>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                    <DemoItem title=\"起止日期限制\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('button-demo3')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <CalendarPanel defaultDate={this.state.defaultDate} startDate=\"2017-02-05\" endDate=\"2017-10-01\" getValueCallback={::this.getvalue}>\n\t                                <Input placeholder=\"请选择日期\"/>\n\t                            </CalendarPanel>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                    <DemoItem title=\"日期格式化\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('calendar-demo4')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <CalendarPanel format=\"yyyy年MM月dd日\">\n\t                                <Input placeholder=\"请选择日期\"  icon=\"calendar\" />\n\t                            </CalendarPanel>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                    <DemoItem title=\"改变时间\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('calendar-demo5')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <Button onClick={::this.changeDate} >改变时间</Button>\n\t                            <br/>\n\t                            <br/>\n\t                            <CalendarPanel ref='cp' format=\"yyyy年MM月dd日\">\n\t                                <Input placeholder=\"请选择日期\"  icon=\"calendar\"/>\n\t                            </CalendarPanel>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                    <DemoItem title=\"自定义定位\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('calendar-demo6')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <Grid>\n\t                                <Row>\n\t                                    <Col sm={3}>\n\t                                        <CalendarPanel ref='cp-top' format=\"yyyy年MM月dd日\" direction='top'>\n\t                                            <Input placeholder=\"上部\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                    <Col sm={3}>\n\t                                        <CalendarPanel ref='cp-right' format=\"yyyy年MM月dd日\" direction='right'>\n\t                                            <Input placeholder=\"右边\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                    <Col sm={3}>\n\t                                        <CalendarPanel ref='cp-down' format=\"yyyy年MM月dd日\" direction='down'>\n\t                                            <Input placeholder=\"底部\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                    <Col sm={3}>\n\t                                        <CalendarPanel ref='cp-left' format=\"yyyy年MM月dd日\" direction='left'>\n\t                                            <Input placeholder=\"左边\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col sm={3}/>\n\t                                    <Col sm={6}>\n\t                                        <CalendarPanel ref='cp-auto-1' format=\"yyyy年MM月dd日\">\n\t                                            <Input placeholder=\"自动定位\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                    <Col sm={3}/>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col sm={4}>\n\t                                        <CalendarPanel ref='cp-left-1' format=\"yyyy年MM月dd日\" direction='left'>\n\t                                            <Input placeholder=\"定位到左边，但是左边位置不足\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                    <Col sm={4}/>\n\t                                    <Col sm={4}>\n\t                                        <CalendarPanel ref='cp-right-1' format=\"yyyy年MM月dd日\" direction='right'>\n\t                                            <Input placeholder=\"定位到右边，但是右边位置不足\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col sm={3}>\n\t                                        <CalendarPanel ref='cp-auto-2' format=\"yyyy年MM月dd日\">\n\t                                            <Input placeholder=\"自动定位，区别左右\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                    <Col sm={6}/>\n\t                                    <Col sm={3}>\n\t                                        <CalendarPanel ref='cp-auto-3' format=\"yyyy年MM月dd日\">\n\t                                            <Input placeholder=\"自动定位，区别左右\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                </Row>\n\t                                <Row>\n\t                                    <Col sm={6}>\n\t                                        <CalendarPanel ref='cp-auto-4' format=\"yyyy年MM月dd日\">\n\t                                            <Input placeholder=\"自动定位，区别左右\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                    <Col sm={6}>\n\t                                        <CalendarPanel ref='cp-auto-5' format=\"yyyy年MM月dd日\">\n\t                                            <Input placeholder=\"自动定位，区别左右\"  icon=\"calendar\"/>\n\t                                        </CalendarPanel>\n\t                                    </Col>\n\t                                </Row>\n\t                            </Grid>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                </DemoLayout>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "calendar"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/calendar"
            ],
            "show": true
        },
        "CheckboxGroup": {
            "name": "CheckboxGroup",
            "shortname": "CheckboxGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form(表单)",
            "namespace": "",
            "file": "src/CheckboxGroup.js",
            "line": 11,
            "description": "CheckboxGroup需与Input组件配合使用<br/>\n它的作用是将type=checkbox的Input组件在UI上成组的展示。只起到包装作用没有逻辑功能",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component,PropTypes} from 'react';\n\t\n\timport querystring from 'querystring';\n\t\n\timport {FormGroup,CheckboxGroup,RadioGroup,Grid,Row,Col,Input} from 'eagle-ui';\n\t\n\timport Code from '../libs/Code.js';\n\timport {getFile} from '../libs/Code.js';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout'\n\t\n\t\n\texport default class Demo extends Component{\n\t    constructor(props, context) {\n\t        super(props, context);\n\t\n\t        this.state = {\n\t            show:false,\n\t            radioValue:'橘子',\n\t            checkBoxValue:false\n\t        }\n\t    };\n\t\n\t    focus(){\n\t        this.setState({\n\t            show:true\n\t        });\n\t    }\n\t    blur(){\n\t        this.setState({\n\t            show:false\n\t        });\n\t    }\n\t    radioCallback(val){\n\t        this.setState({\n\t            radioValue:val\n\t        })\n\t    }\n\t    checkboxCallback(){\n\t        this.setState({\n\t            checkBoxValue:!this.state.checkBoxValue\n\t        })\n\t    }\n\t    render(){\n\t        let {radioValue,checkBoxValue}=this.state;\n\t        return (\n\t            <DemoLayout title=\"输入控件\">\n\t                <DemoItem title=\"radio类型\" desc={'一般结合RadioGroup组件来用'}>\n\t                    <CodeShow>\n\t                        <Code code={getFile('input-radio')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Grid>\n\t                            <Row>\n\t                                <Col sm={6}>\n\t                                    <RadioGroup defaultChecked={radioValue}\n\t                                                name=\"radio-test\"\n\t                                                getValueCallback={::this.radioCallback}>\n\t                                        <Input  type=\"radio\"  label=\"石榴\" value=\"石榴\" />\n\t                                        <Input  type=\"radio\"  label=\"橘子\" value=\"橘子\"  />\n\t                                        <Input  type=\"radio\"  label=\"苹果\" value=\"苹果\" />\n\t                                    </RadioGroup>\n\t                                </Col>\n\t                                <Col sm={6}>\n\t                                    已选择了：{this.state.radioValue}\n\t                                </Col>\n\t                            </Row>\n\t                        </Grid>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"chechbox类型\" desc={'一般结合CheckboxGroup组件来用'}>\n\t                    <CodeShow>\n\t                        <Code code={getFile('input-checkbox')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Grid>\n\t                            <Row>\n\t                                <Col sm={12}>\n\t                                    <CheckboxGroup>\n\t                                        <Input label=\"石榴\" type=\"checkbox\" checked />\n\t                                        <Input label=\"橘子\" type=\"checkbox\" disabled={true}   />\n\t                                        <Input label=\"苹果\"  type=\"checkbox\" getValueCallback={function(val,dom){console.log(val,dom)}}  value=\"apple\"  />\n\t                                        <Input label=\"香蕉\"  type=\"checkbox\" onChange={::this.checkboxCallback} checked={checkBoxValue} value=\"banana\"  />\n\t                                    </CheckboxGroup>\n\t                                </Col>\n\t                            </Row>\n\t                        </Grid>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"表单组合示例\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('input-combine')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <FormGroup>\n\t                            <Row>\n\t                                <Col sm={2}>姓名</Col>\n\t                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col sm={2}>姓名</Col>\n\t                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col sm={2}>性别</Col>\n\t                                <Col sm={10}>\n\t                                    <RadioGroup defaultChecked=\"男\" name=\"radio-sex\">\n\t                                        <Input  type=\"radio\"  label=\"男\" value=\"男\" />\n\t                                        <Input  type=\"radio\"  label=\"女\" value=\"女\"  />\n\t                                    </RadioGroup>\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col sm={2}>体育爱好</Col>\n\t                                <Col sm={10}>\n\t                                    <CheckboxGroup>\n\t                                        <Input  type=\"checkbox\" label=\"足球\" checked   />\n\t                                        <Input  type=\"checkbox\" label=\"篮球\"    />\n\t                                        <Input  type=\"checkbox\" label=\"羽毛球\" checked   />\n\t                                        <Input  type=\"checkbox\" label=\"乒乓球\"    />\n\t                                    </CheckboxGroup>\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col sm={2}>姓名</Col>\n\t                                <Col sm={13}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                <FormGroup>\n\t                                    <Col sm={13}>出生日期</Col>\n\t                                    <Col sm={13} end><Input name=\"test\" id=\"test\" placeholder=\"请输入出生日期\"   /></Col>\n\t                                </FormGroup>\n\t                                <FormGroup>\n\t                                    <Col sm={13}>省份证</Col>\n\t                                    <Col sm={13} end><Input name=\"test\" id=\"test\" placeholder=\"请输入省份证\"   /></Col>\n\t                                </FormGroup>\n\t                            </Row>\n\t                        </FormGroup>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t            </DemoLayout>\n\t        );\n\t    }\n\t};\n\t"
            ],
            "exampleTitles": [
                "input"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/input"
            ],
            "show": true
        },
        "Col": {
            "name": "Col",
            "shortname": "Col",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "grid(布局)",
            "namespace": "",
            "file": "src/Col.js",
            "line": 5,
            "description": "定义栅格中的一列，配合Row组件使用\n<h5>主要的UI属性接口包括:</h5>\n<ul>\n    <li>sm:一行Row的宽度为100%(12份)，sm的值表示当前Col的宽度占了12份中的几份</li>\n</ul><br>\n使用方式:\n<pre><code>&#60;Col sm={5} &#62;&#60;/Col&#62;</code>\n</pre>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {Search,Select, Input,Label,LabelGroup,Grid,Row,Col,Panel,PanelHeader,PanelFooter,PanelContent,Paging,CheckboxGroup,List,Item} from 'eagle-ui';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout';\n\timport Code, {getFile} from '../libs/Code';\n\t\n\texport class SearchSec extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid>\n\t                <Row>\n\t                    <Col sm={5}>\n\t                        <Select callback={function(val){alert(val)}}>\n\t                            <item>北京</item>\n\t                            <item>上海</item>\n\t                            <item>南京</item>\n\t                        </Select>\n\t                    </Col>\n\t                    <Col sm={5}>\n\t                        <Search placeholder='shopId/门店名称' callBack={function(val){alert(val)}}/>\n\t                    </Col>\n\t                    <Col sm={2}/>\n\t                </Row>\n\t            </Grid>\n\t\n\t        )\n\t    }\n\t}\n\texport class FilterSec extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    render(){\n\t        return (\n\t            <div>\n\t                <LabelGroup title='频道' defaultChecked='全部' clickCallback={this.show} >\n\t                    <Label>全部</Label>\n\t                    <Label>美</Label>\n\t                    <Label>休闲娱乐</Label>\n\t                    <Label>景点</Label>\n\t                    <Label>购物</Label>\n\t                    <Label>丽人</Label>\n\t                    <Label>结婚</Label>\n\t                    <Label>亲子</Label>\n\t                    <Label>教育培训</Label>\n\t                    <Label>运动健身</Label>\n\t                    <Label>酒店</Label>\n\t                    <Label>家装</Label>\n\t                    <Label>酒店</Label>\n\t                    <Label>爱车</Label>\n\t                    <Label>酒店</Label>\n\t                    <Label>医疗健康</Label>\n\t                </LabelGroup>\n\t                <LabelGroup title='行政区' defaultChecked='全部' clickCallback={this.show} >\n\t                    <Label>全部</Label>\n\t                    <Label>卢湾区</Label>\n\t                    <Label>徐汇区</Label>\n\t                    <Label>静安区</Label>\n\t                    <Label>长宁区</Label>\n\t                    <Label>闵行区</Label>\n\t                    <Label>浦东新区</Label>\n\t                    <Label>黄浦区</Label>\n\t                    <Label>普陀区</Label>\n\t                    <Label>闸北区</Label>\n\t                    <Label>虹口区</Label>\n\t                    <Label>杨浦区</Label>\n\t                    <Label>宝山区</Label>\n\t                </LabelGroup>\n\t            </div>\n\t        )\n\t    }\n\t};\n\texport class CardListPanel extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.state = {\n\t            page: 1\n\t        }\n\t    }\n\t    show(){\n\t        console.debug(1);\n\t    }\n\t    render(){\n\t        return (\n\t            <Panel>\n\t                <PanelHeader>\n\t                    <CheckboxGroup>\n\t                        <Input label=\"仅公海\"  type=\"checkbox\" checked />\n\t                        <Input lebal=\"冻结中\"  type=\"checkbox\"/>\n\t                        <Input label=\"团购在线\" type=\"checkbox\"/>\n\t                        <Input label=\"闪惠在线\" type=\"checkbox\"/>\n\t                        <Input label=\"预订在线\" type=\"checkbox\"/>\n\t                    </CheckboxGroup>\n\t                </PanelHeader>\n\t                <PanelContent padding={false}>\n\t                    <List>\n\t                        <Item className=\"shop-info-item\">\n\t                            <h1 className='shop-card-title inline-block'>宴遇 (晶品店)</h1>\n\t                            <Label error radius>团</Label>\n\t                            <div className=\"shop-info-item-text\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={6}>shopid: 22936478 rotateid: 107126470</Col>\n\t                                        <Col sm={6}>月佣金基数: 3000.00</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col sm={6}>浏览量：151195</Col>\n\t                                        <Col sm={6}>门店市场份额:100.00%          战区市场份额: 94.63%</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col end sm={6}>美食其他 | 静安区 愚园路68号晶品中心4楼</Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                            <div className=\"shop-info-item-footer\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={10}>\n\t                                            <LabelGroup simple clickCallback={this.show} >\n\t                                                <Label>POI报错</Label>\n\t                                                <Label>查看所有分店</Label>\n\t                                            </LabelGroup>\n\t                                        </Col>\n\t                                        <Col sm={2}>\n\t                                            <Label>想要这家店？</Label>\n\t                                        </Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                        </Item>\n\t                        <Item className=\"shop-info-item\">\n\t                            <h1 className='shop-card-title inline-block'>宴遇 (晶品店)</h1>\n\t                            <Label error radius> 团</Label>\n\t                            <div className=\"shop-info-item-text\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={6}>shopid: 22936478 rotateid: 107126470</Col>\n\t                                        <Col sm={6}>月佣金基数: 3000.00</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col sm={6}>浏览量：151195</Col>\n\t                                        <Col sm={6}>门店市场份额:100.00%          战区市场份额: 94.63%</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col sm={6}>美食其他 | 静安区 愚园路68号晶品中心4楼</Col>\n\t                                        <Col sm={6}></Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                            <div className=\"shop-info-item-footer\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={10}>\n\t                                            <LabelGroup simple clickCallback={this.show} >\n\t                                                <Label>POI报错</Label>\n\t                                                <Label>查看所有分店</Label>\n\t                                            </LabelGroup>\n\t                                        </Col>\n\t                                        <Col sm={2}>\n\t                                            <Label>想要这家店？</Label>\n\t                                        </Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                        </Item>\n\t                        <Item className=\"shop-info-item\">\n\t                            <h1 className='shop-card-title inline-block'>宴遇 (晶品店)</h1>\n\t                            <Label error radius>团</Label>\n\t                            <div className=\"shop-info-item-text\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={6}>shopid: 22936478 rotateid: 107126470</Col>\n\t                                        <Col sm={6}>月佣金基数: 3000.00</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col sm={6}>浏览量：151195</Col>\n\t                                        <Col sm={6}>门店市场份额:100.00%          战区市场份额: 94.63%</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col sm={6}>美食其他 | 静安区 愚园路68号晶品中心4楼</Col>\n\t                                        <Col sm={6}></Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                            <div className=\"shop-info-item-footer\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={10}>\n\t                                            <LabelGroup simple clickCallback={this.show} >\n\t                                                <Label>POI报错</Label>\n\t                                                <Label>查看所有分店</Label>\n\t                                            </LabelGroup>\n\t                                        </Col>\n\t                                        <Col sm={2}>\n\t                                            <Label>想要这家店？</Label>\n\t                                        </Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                        </Item>\n\t                    </List>\n\t                </PanelContent>\n\t                <PanelFooter>\n\t                    <Paging currentPage={this.state.page} total={1024} />\n\t                </PanelFooter>\n\t            </Panel>\n\t        );\n\t    }\n\t};\n\t\n\texport default class Layout extends Component{\n\t    render(){\n\t        return (\n\t            <DemoLayout title=\"布局样式\">\n\t                <DemoItem title=\"搜索\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('layout-search')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <SearchSec />\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"过滤\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('layout-filter')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <FilterSec />\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"卡片列表\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('layout-card')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <CardListPanel />\n\t                    </DemoShow>\n\t                </DemoItem>\n\t            </DemoLayout>\n\t        );\n\t    }\n\t}\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "layout"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/Layout"
            ],
            "show": true
        },
        "Crumb": {
            "name": "Crumb",
            "shortname": "Crumb",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/Crumb.js",
            "line": 27,
            "description": "面包屑组件",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by panqianjin on 15/11/4.\n\t */\n\timport React, { Component ,PropTypes} from 'react';\n\timport {Crumb} from 'eagle-ui';\n\timport Code from '../libs/Code.js';\n\timport {getFile} from '../libs/Code.js';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout'\n\t\n\texport default class CrumbCls extends Component {\n\t    render() {\n\t        return (\n\t        <DemoLayout title=\"面包屑\">\n\t            <DemoItem title=\"\">\n\t                <CodeShow>\n\t                    <Code code={getFile('crumb')}>\n\t                    </Code>\n\t                </CodeShow>\n\t                <DemoShow>\n\t                    <Crumb>\n\t                        <item url=\"dddd.html\">菜单</item>\n\t                        <item url=\"dddd.html\">菜单</item>\n\t                        <item url=\"dddd.html\">菜单</item>\n\t                        <item url=\"dddd.html\">菜单</item>\n\t                        <item url=\"dddd.html\">菜单</item>\n\t                        <item url='baidu.html'>菜单</item>\n\t                    </Crumb>\n\t                </DemoShow>\n\t            </DemoItem>\n\t        </DemoLayout>\n\t        );\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "crumb"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/crumb"
            ],
            "show": true
        },
        "DateTimePicker": {
            "name": "DateTimePicker",
            "shortname": "DateTimePicker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/DateTimePicker.js",
            "line": 9,
            "description": "日期时间选择器<br />\n<strong style=\"color:red\">可使用Calendar类所有API</strong>",
            "extends": "TimePicker",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component,PropTypes} from 'react';\n\timport {Input, CalendarPanel, Button, Grid, Row, Col,TimePicker,DateTimePicker} from 'eagle-ui';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout';\n\timport Code, {getFile} from '../libs/Code';\n\t\n\texport default class Calendar extends Component{\n\t    constructor(props, context) {\n\t        super(props, context);\n\t        this.state = {\n\t            dateTime:''\n\t        };\n\t\n\t    };\n\t    render(){\n\t        return (\n\t            <div style={{paddingBottom: '250px'}}>\n\t                <DemoLayout title=\"日期时间选择器\">\n\t                    <DemoItem title=\"默认\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('datetimepicker-demo1')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <DateTimePicker>\n\t                                <Input placeholder=\"请选择日期时间\"  icon=\"calendar\" />\n\t                            </DateTimePicker>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                    <DemoItem title=\"日期选择器\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('datetimepicker-demo2')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <DateTimePicker format=\"yyyy年MM月dd日\">\n\t                                <Input placeholder=\"请选择日期时间\"  icon=\"calendar\" />\n\t                            </DateTimePicker>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                    <DemoItem title=\"时间选择器\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('datetimepicker-demo3')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <DateTimePicker format=\"hh:mm\">\n\t                                <Input placeholder=\"请选择日期时间\"  icon=\"clock\" />\n\t                            </DateTimePicker>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                    <DemoItem title=\"默认值更改\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('datetimepicker-demo4')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <DateTimePicker defaultValue={this.state.dateTime} getValueCallback={(val)=>{\n\t                                this.setState({\n\t                                    dateTime:val\n\t                                });\n\t                            }}>\n\t                                <Input placeholder=\"请选择日期时间\"  icon=\"clock\" />\n\t                            </DateTimePicker>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t\n\t                </DemoLayout>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "datetimepicker"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/datetimepicker"
            ],
            "show": true
        },
        "Dialog": {
            "name": "Dialog",
            "shortname": "Dialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/Dialog.js",
            "line": 3,
            "description": "弹出层组件",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by min.xiao\n\t */\n\timport React,{Component} from 'react';\n\timport {Col,Row,Grid,Button,Dialog,Panel,PanelHeader,PanelContent,PanelFooter,FormGroup,Input,RadioGroup,CheckboxGroup,Select} from 'eagle-ui';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout';\n\timport Code, {getFile} from '../libs/Code';\n\t\n\texport default class DialogCls extends Component{\n\t    static defaultProps = {\n\t    };\n\t    constructor(props, context) {\n\t        super(props, context);\n\t        this.state = {\n\t            inputVal: 123124,\n\t            dialogAlign: 'center',\n\t            alertContent: '哈哈，你好苍老师'\n\t        }\n\t    }\n\t    getScope(dialog){\n\t        this.dialog = dialog;\n\t    }\n\t    show(name){\n\t        Dialog.mask(name).then(function(){\n\t            console.log('success');\n\t            Dialog.close();\n\t        },function(type){\n\t            console.log('cancel');\n\t        });\n\t    }\n\t    showAlert(){\n\t        Dialog.alert('哈哈，我是alert');\n\t    }\n\t    nomask(){\n\t        Dialog.alert('哈哈，我是alert',{\n\t            isMask:false\n\t        });\n\t    }\n\t    inputChangeHandler(evt) {\n\t        const value = evt.target.value\n\t        this.setState({\n\t            inputVal: value\n\t        })\n\t    }\n\t    dialogAlignChangeHandler(evt) {\n\t        const value = evt.target.value\n\t        this.setState({\n\t            dialogAlign: value\n\t        })\n\t    }\n\t    showConfirm(){\n\t        Dialog.confirm('确定你已经打开了么？').then(()=>{\n\t            alert('确定');\n\t        },()=>{\n\t            alert('取消');\n\t        });\n\t    }\n\t    showPrompt(){\n\t        Dialog.prompt('这是个prompt',{\n\t            inputWidth:'50%'\n\t        }).then((value)=>{\n\t            console.log(value)\n\t        },()=>{\n\t            console.log('取消回调')\n\t        })\n\t    }\n\t    render(){\n\t        return (\n\t            <DemoLayout title=\"弹出框组件\">\n\t                <DemoItem title=\"默认样式\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('dialog-demo1')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button onClick={::this.show.bind(this,'demo1')} className=\"mg-right-15\">点击我mask</Button>\n\t                        <Dialog id=\"demo1\" egSize=\"xs\" className=\"xxx\" buttonAlign=\"right\" title=\"苍老师你好\"  buttons={[\n\t                            {\n\t                                type: 'success',\n\t                                name: '确认'\n\t\n\t                            },\n\t                            {\n\t                                type:'cancel',\n\t                                egStyle:'white',\n\t                                name:'取消'\n\t                            }\n\t                        ]}>\n\t                            <div>\n\t                                {this.state.alertContent}\n\t                            </div>\n\t                        </Dialog>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"改变内部文本\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('dialog-demo2')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button onClick={::this.show.bind(this,'demo2')} className=\"mg-right-15\">点击我mask</Button>\n\t                        <Dialog id=\"demo2\" egSize=\"xs\" className=\"xxx\" buttonAlign=\"right\" title=\"苍老师你好\"  buttons={[\n\t                            {\n\t                                egStyle:'warning',\n\t                                name:'改变文案',\n\t                                callback:()=>{\n\t                                    {/*alert('自定义按钮');*/}\n\t                                    this.setState({\n\t                                        alertContent: '哈哈哈，改成波多。。。。'\n\t                                    })\n\t                                }\n\t                            }\n\t                        ]}>\n\t                            <div>\n\t                                {this.state.alertContent}\n\t                            </div>\n\t                        </Dialog>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"内嵌表单\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('dialog-demo3')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button onClick={::this.show.bind(this,'demo3')} className=\"mg-right-15\">点击我mask2表单秀</Button>\n\t                        <Dialog id=\"demo3\" egSize=\"sm\" title=\"表单验证\" contentAlign={this.state.dialogAlign} buttons={[\n\t                            {\n\t                                type: 'success',\n\t                                name: '提交',\n\t                                callback:()=>{}\n\t                            },\n\t                            {\n\t                                type:'cancel',\n\t                                egStyle:'white',\n\t                                name:'取消',\n\t                                callback:()=>{}\n\t                            }\n\t                        ]}>\n\t                            <Panel heading=\"我是标题\">\n\t                                <PanelContent>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            <FormGroup>\n\t                                                <Row>\n\t                                                    <Col sm={2}>姓名</Col>\n\t                                                    <Col sm={10}><Input name=\"test1231\" id=\"test\" placeholder=\"请输入姓名\" value={this.state.inputVal} onChange={::this.inputChangeHandler}/></Col>\n\t                                                </Row>\n\t                                                <Row>\n\t                                                    <Col sm={2}>姓名</Col>\n\t                                                    <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                                </Row>\n\t                                                <Row>\n\t                                                    <Col sm={2}>改变对齐方式</Col>\n\t                                                    <Col sm={10}><Input name=\"test222\" id=\"test222\" placeholder=\"left|right|center\" value={this.state.dialogAlign} onChange={::this.dialogAlignChangeHandler}/></Col>\n\t                                                </Row>\n\t                                                <Row>\n\t                                                    <Col sm={2}>性别</Col>\n\t                                                    <Col sm={10}>\n\t                                                        <RadioGroup defaultChecked=\"男\" name=\"radio-sex\">\n\t                                                            <Input  type=\"radio\"  label=\"男\" value=\"男\" />\n\t                                                            <Input  type=\"radio\"  label=\"女\" value=\"女\"  />\n\t                                                        </RadioGroup>\n\t                                                    </Col>\n\t                                                </Row>\n\t                                                <Row>\n\t                                                    <Col sm={2}>体育爱好</Col>\n\t                                                    <Col sm={10}>\n\t                                                        <CheckboxGroup>\n\t                                                            <Input  type=\"checkbox\" label=\"足球\" checked   />\n\t                                                            <Input  type=\"checkbox\" label=\"篮球\"    />\n\t                                                            <Input  type=\"checkbox\" label=\"羽毛球\" checked   />\n\t                                                            <Input  type=\"checkbox\" label=\"乒乓球\"    />\n\t                                                        </CheckboxGroup>\n\t                                                    </Col>\n\t                                                </Row>\n\t                                                <Row>\n\t                                                    <Col sm={2}>姓名</Col>\n\t                                                    <Col sm={13}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                                    <FormGroup>\n\t                                                        <Col sm={13}>出生日期</Col>\n\t                                                        <Col sm={13} end><Input name=\"test\" id=\"test\" placeholder=\"请输入出生日期\"   /></Col>\n\t                                                    </FormGroup>\n\t                                                </Row>\n\t                                                <Row>\n\t                                                    <Col sm={2}>所在城市</Col>\n\t                                                    <Col sm={10} layer>\n\t                                                        <Row style={{margin:0}}>\n\t                                                            <Col sm={4} end>\n\t                                                                <Select placeholder=\"请选择城市\" >\n\t                                                                    <item value='bei'>北京</item>\n\t                                                                    <item value='shang'>上海</item>\n\t                                                                    <item value='nan'>南京</item>\n\t                                                                </Select>\n\t                                                            </Col>\n\t                                                        </Row>\n\t                                                    </Col>\n\t                                                </Row>\n\t                                            </FormGroup>\n\t                                        </Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col padding={'0'}>\n\t                                            <Panel heading=\"我是标题二\">\n\t                                                <PanelContent padding={true}>\n\t                                                    我是下一个内容区\n\t                                                </PanelContent>\n\t                                            </Panel>\n\t                                        </Col>\n\t\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col padding={'0'}>\n\t                                            <Panel heading=\"我是标题三\" >\n\t                                                <PanelContent padding={true}>\n\t                                                    我是下一个内容区\n\t                                                </PanelContent>\n\t                                            </Panel>\n\t                                        </Col>\n\t                                    </Row>\n\t                                </PanelContent>\n\t                            </Panel>\n\t                        </Dialog>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"内容不在content之内\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('dialog-demo4')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button onClick={::this.show.bind(this,'demo4')} className=\"mg-right-15\">点击我mask3 outside</Button>\n\t                        <Dialog id=\"demo4\" title=\"panel\" outside egSize=\"lg\">\n\t                            <Panel egType=\"normal\" margin=\"0\">\n\t                                <PanelHeader>另一种形式的嵌套</PanelHeader>\n\t                                <PanelContent>\n\t                                    <Panel egType=\"normal\">\n\t                                        <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                        <PanelContent>\n\t                                            <Row>\n\t                                                <Col>\n\t                                                    我是内容区\n\t                                                </Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col>\n\t                                                    <Panel  margin={'0'}>\n\t                                                        <PanelHeader>另一种形式的嵌套3</PanelHeader>\n\t                                                        <PanelContent>\n\t                                                            <Row>\n\t                                                                <Col>\n\t                                                                    我是内容区\n\t                                                                </Col>\n\t                                                            </Row>\n\t                                                        </PanelContent>\n\t                                                    </Panel>\n\t                                                </Col>\n\t                                            </Row>\n\t                                        </PanelContent>\n\t                                    </Panel>\n\t                                    <Panel margin={'0'}>\n\t                                        <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                        <PanelContent>\n\t                                            <Row>\n\t                                                <Col>\n\t                                                    我是内容区\n\t                                                </Col>\n\t                                            </Row>\n\t                                        </PanelContent>\n\t                                    </Panel>\n\t                                </PanelContent>\n\t                            </Panel>\n\t                        </Dialog>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"alert展示\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('dialog-demo5')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button onClick={::this.showAlert} className=\"mg-right-15\">点击我alert</Button>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"无遮罩展示\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('dialog-demo6')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button onClick={::this.nomask} className=\"mg-right-15\">无遮罩显示</Button>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"confirm展示\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('dialog-demo7')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button onClick={::this.showConfirm}>点击我Confirm</Button>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"prompt展示\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('dialog-demo8')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button onClick={::this.showPrompt} className=\"mg-right-15\">点击我prompt</Button>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t            </DemoLayout>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "dialog"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/dialog"
            ],
            "show": true
        },
        "Grid": {
            "name": "Grid",
            "shortname": "Grid",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "grid(布局)",
            "namespace": "",
            "file": "src/Grid.js",
            "line": 28,
            "description": "定义栅格容器,配合Col和Row使用",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {Search,Select, Input,Label,LabelGroup,Grid,Row,Col,Panel,PanelHeader,PanelFooter,PanelContent,Paging,CheckboxGroup,List,Item} from 'eagle-ui';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout';\n\timport Code, {getFile} from '../libs/Code';\n\t\n\texport class SearchSec extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid>\n\t                <Row>\n\t                    <Col sm={5}>\n\t                        <Select callback={function(val){alert(val)}}>\n\t                            <item>北京</item>\n\t                            <item>上海</item>\n\t                            <item>南京</item>\n\t                        </Select>\n\t                    </Col>\n\t                    <Col sm={5}>\n\t                        <Search placeholder='shopId/门店名称' callBack={function(val){alert(val)}}/>\n\t                    </Col>\n\t                    <Col sm={2}/>\n\t                </Row>\n\t            </Grid>\n\t\n\t        )\n\t    }\n\t}\n\texport class FilterSec extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    render(){\n\t        return (\n\t            <div>\n\t                <LabelGroup title='频道' defaultChecked='全部' clickCallback={this.show} >\n\t                    <Label>全部</Label>\n\t                    <Label>美</Label>\n\t                    <Label>休闲娱乐</Label>\n\t                    <Label>景点</Label>\n\t                    <Label>购物</Label>\n\t                    <Label>丽人</Label>\n\t                    <Label>结婚</Label>\n\t                    <Label>亲子</Label>\n\t                    <Label>教育培训</Label>\n\t                    <Label>运动健身</Label>\n\t                    <Label>酒店</Label>\n\t                    <Label>家装</Label>\n\t                    <Label>酒店</Label>\n\t                    <Label>爱车</Label>\n\t                    <Label>酒店</Label>\n\t                    <Label>医疗健康</Label>\n\t                </LabelGroup>\n\t                <LabelGroup title='行政区' defaultChecked='全部' clickCallback={this.show} >\n\t                    <Label>全部</Label>\n\t                    <Label>卢湾区</Label>\n\t                    <Label>徐汇区</Label>\n\t                    <Label>静安区</Label>\n\t                    <Label>长宁区</Label>\n\t                    <Label>闵行区</Label>\n\t                    <Label>浦东新区</Label>\n\t                    <Label>黄浦区</Label>\n\t                    <Label>普陀区</Label>\n\t                    <Label>闸北区</Label>\n\t                    <Label>虹口区</Label>\n\t                    <Label>杨浦区</Label>\n\t                    <Label>宝山区</Label>\n\t                </LabelGroup>\n\t            </div>\n\t        )\n\t    }\n\t};\n\texport class CardListPanel extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.state = {\n\t            page: 1\n\t        }\n\t    }\n\t    show(){\n\t        console.debug(1);\n\t    }\n\t    render(){\n\t        return (\n\t            <Panel>\n\t                <PanelHeader>\n\t                    <CheckboxGroup>\n\t                        <Input label=\"仅公海\"  type=\"checkbox\" checked />\n\t                        <Input lebal=\"冻结中\"  type=\"checkbox\"/>\n\t                        <Input label=\"团购在线\" type=\"checkbox\"/>\n\t                        <Input label=\"闪惠在线\" type=\"checkbox\"/>\n\t                        <Input label=\"预订在线\" type=\"checkbox\"/>\n\t                    </CheckboxGroup>\n\t                </PanelHeader>\n\t                <PanelContent padding={false}>\n\t                    <List>\n\t                        <Item className=\"shop-info-item\">\n\t                            <h1 className='shop-card-title inline-block'>宴遇 (晶品店)</h1>\n\t                            <Label error radius>团</Label>\n\t                            <div className=\"shop-info-item-text\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={6}>shopid: 22936478 rotateid: 107126470</Col>\n\t                                        <Col sm={6}>月佣金基数: 3000.00</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col sm={6}>浏览量：151195</Col>\n\t                                        <Col sm={6}>门店市场份额:100.00%          战区市场份额: 94.63%</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col end sm={6}>美食其他 | 静安区 愚园路68号晶品中心4楼</Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                            <div className=\"shop-info-item-footer\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={10}>\n\t                                            <LabelGroup simple clickCallback={this.show} >\n\t                                                <Label>POI报错</Label>\n\t                                                <Label>查看所有分店</Label>\n\t                                            </LabelGroup>\n\t                                        </Col>\n\t                                        <Col sm={2}>\n\t                                            <Label>想要这家店？</Label>\n\t                                        </Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                        </Item>\n\t                        <Item className=\"shop-info-item\">\n\t                            <h1 className='shop-card-title inline-block'>宴遇 (晶品店)</h1>\n\t                            <Label error radius> 团</Label>\n\t                            <div className=\"shop-info-item-text\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={6}>shopid: 22936478 rotateid: 107126470</Col>\n\t                                        <Col sm={6}>月佣金基数: 3000.00</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col sm={6}>浏览量：151195</Col>\n\t                                        <Col sm={6}>门店市场份额:100.00%          战区市场份额: 94.63%</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col sm={6}>美食其他 | 静安区 愚园路68号晶品中心4楼</Col>\n\t                                        <Col sm={6}></Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                            <div className=\"shop-info-item-footer\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={10}>\n\t                                            <LabelGroup simple clickCallback={this.show} >\n\t                                                <Label>POI报错</Label>\n\t                                                <Label>查看所有分店</Label>\n\t                                            </LabelGroup>\n\t                                        </Col>\n\t                                        <Col sm={2}>\n\t                                            <Label>想要这家店？</Label>\n\t                                        </Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                        </Item>\n\t                        <Item className=\"shop-info-item\">\n\t                            <h1 className='shop-card-title inline-block'>宴遇 (晶品店)</h1>\n\t                            <Label error radius>团</Label>\n\t                            <div className=\"shop-info-item-text\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={6}>shopid: 22936478 rotateid: 107126470</Col>\n\t                                        <Col sm={6}>月佣金基数: 3000.00</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col sm={6}>浏览量：151195</Col>\n\t                                        <Col sm={6}>门店市场份额:100.00%          战区市场份额: 94.63%</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col sm={6}>美食其他 | 静安区 愚园路68号晶品中心4楼</Col>\n\t                                        <Col sm={6}></Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                            <div className=\"shop-info-item-footer\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={10}>\n\t                                            <LabelGroup simple clickCallback={this.show} >\n\t                                                <Label>POI报错</Label>\n\t                                                <Label>查看所有分店</Label>\n\t                                            </LabelGroup>\n\t                                        </Col>\n\t                                        <Col sm={2}>\n\t                                            <Label>想要这家店？</Label>\n\t                                        </Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                        </Item>\n\t                    </List>\n\t                </PanelContent>\n\t                <PanelFooter>\n\t                    <Paging currentPage={this.state.page} total={1024} />\n\t                </PanelFooter>\n\t            </Panel>\n\t        );\n\t    }\n\t};\n\t\n\texport default class Layout extends Component{\n\t    render(){\n\t        return (\n\t            <DemoLayout title=\"布局样式\">\n\t                <DemoItem title=\"搜索\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('layout-search')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <SearchSec />\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"过滤\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('layout-filter')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <FilterSec />\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"卡片列表\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('layout-card')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <CardListPanel />\n\t                    </DemoShow>\n\t                </DemoItem>\n\t            </DemoLayout>\n\t        );\n\t    }\n\t}\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "layout"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/Layout"
            ],
            "show": true
        },
        "imgSlider": {
            "name": "imgSlider",
            "shortname": "imgSlider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/ImgSlider.js",
            "line": 10,
            "description": "照片浏览组件<br />\n提供的UI展示属性接口如下<br/>\n <ul>\n   <li>imgList:需要展示的图片数组，每个图片用一个对象来表示<br>\n       例如\n       <pre><code>\n                [{\n                      profile:'1叔2015上传',\n                      url:'http://img5.imgtn.bdimg.com/it/u=1478257864,2882073929&fm=21&gp=0.jpg',\n                      description:'闪惠商户培训资料',\n                      thumbnail:'http://img0.imgtn.bdimg.com/it/u=1649172259,4185796887&fm=21&gp=0.jpg'\n                   }]\n       </code></pre>\n   </li>\n   <li>show:是否显示照片浏览组件，默认隐藏，需要手动设置为true才可以显示照片浏览组件\n       <code>\n           <strong>默认</strong>false\n       </code>\n   </li>\n   <li>\n       urlKey:定义大图的‘图片路径’应该取自图像object的哪一个属性。<br/>\n       在上述imgList中，图像object的url属性就是大图路径，所以urlKey='url'\n   </li>\n   <li>\n       titleKey:定义大图‘左下方文字描述’应该取自图像object的哪一个属性。<br/>\n       在上述imgList中，图像object的description属性就是图片描述，所以titleKey='description'\n   </li>\n   <li>\n       profileKey:定义大图‘正下方profile描述’应该取自图像object的哪一个属性。<br/>\n       在上述imgList中，图像object的profile属性就是图片profile，所以profileKey='profile'\n   </li>\n   <li>thumbnailKey:定义缩略图对应imgList数组的key\n       <code>\n           <strong>默认</strong>和urlKey保持一致,本例中就是thumbnail\n       </code>\n   </li>\n   <li>showThumbnail:定义是否展示缩略图\n       <code>\n           <strong>默认</strong>true\n       </code>\n   </li>\n    <li>pageNum:定义每页缩略图的个数\n       <code>\n           <strong>默认</strong>为5\n       </code>\n   </li>\n   <li>imgModify:是否对图片进行放大缩小等操作\n       <code>\n           <strong>默认</strong>为false\n       </code>\n   </li>\n </ul>\n 使用方式:\n <pre><code>&#60;imgSlider show={true} showThumbnail={true}\n imgList={imgList}\n profileKey={'profile'}\n urlKey={'url'}\n titleKey={'description'}\n thumbnailKey={thumbnailKey} /&#62;</code>\n </pre>\n <div><a target=\"_blank\" href=\"http://future-team.github.io/eagle-ui/examples/index.html#/slider\">demo展示</a></div>\n <div><a target=\"_blank\" href=\"https://github.com/future-team/eagle-ui/blob/master/src/ImgSlider.js\">查看源码</a></div>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport {Button,ImgSlider,Grid,Row,Col} from 'eagle-ui';\n\timport Code from '../libs/Code.js';\n\timport {getFile} from '../libs/Code.js';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout'\n\t\n\texport default class SliderDemo extends Component {\n\t    constructor(props,context) {\n\t        super(props,context);\n\t        this.state={\n\t            showThumbnail:true,\n\t            imgModify:true\n\t        }\n\t    }\n\t    toggleThumbnail(){\n\t        this.setState({\n\t            showThumbnail:!this.state.showThumbnail\n\t        });\n\t    }\n\t    toggleModifier(){\n\t        this.setState({\n\t            imgModify:!this.state.imgModify\n\t        });\n\t    }\n\t    render() {\n\t        let imgList=[\n\t            {\n\t                profile:'1叔2015上传',\n\t                url:'http://img5.imgtn.bdimg.com/it/u=1478257864,2882073929&fm=21&gp=0.jpg',\n\t                description:'闪惠商户培训资料',\n\t                thumbnail:'http://img0.imgtn.bdimg.com/it/u=1649172259,4185796887&fm=21&gp=0.jpg'\n\t            },\n\t            {\n\t                profile:'1哥2015上传',\n\t                url:'http://img5.imgtn.bdimg.com/it/u=1478257864,2882073929&fm=21&gp=0.jpg',\n\t                description:'闪惠商户培训资料',\n\t                thumbnail:'http://img0.imgtn.bdimg.com/it/u=2544720638,729810412&fm=21&gp=0.jpg'\n\t            },\n\t            {\n\t                profile:'2哥2015上传',\n\t                url:'http://img2.zol.com.cn/product/95/20/ceSFw3e3TqLNM.jpg',\n\t                description:'闪惠商户培训资料',\n\t                thumbnail:'http://img0.imgtn.bdimg.com/it/u=1649172259,4185796887&fm=21&gp=0.jpg'\n\t            },\n\t            {\n\t                profile:'3哥2015上传',\n\t                url:'http://www.bz55.com/uploads/allimg/150309/139-150309101F2.jpg',\n\t                description:'闪惠商户培训资料',\n\t                thumbnail:'http://img0.imgtn.bdimg.com/it/u=1649172259,4185796887&fm=21&gp=0.jpg'\n\t            },\n\t            {\n\t                profile:'4哥2015上传',\n\t                url: 'http://www.bz55.com/uploads/allimg/150309/139-150309101F7.jpg',\n\t                description:'闪惠商户培训资料',\n\t                thumbnail:'http://img0.imgtn.bdimg.com/it/u=2926840907,3192872789&fm=21&gp=0.jpg'\n\t            },\n\t            {\n\t                profile:'5哥2015上传',\n\t                url: 'http://www.bz55.com/uploads/allimg/150309/139-150309101A8.jpg',\n\t                description:'闪惠商户培训资料',\n\t                thumbnail:'http://img5.imgtn.bdimg.com/it/u=4207978144,3154923917&fm=21&gp=0.jpg'\n\t            },\n\t            {\n\t                profile:'5哥2015上传',\n\t                url: 'http://img3.imgtn.bdimg.com/it/u=227823385,2843041802&fm=21&gp=0.jpg',\n\t                description:'闪惠商户培训资料',\n\t                thumbnail:'http://img2.imgtn.bdimg.com/it/u=1813764503,1895922603&fm=21&gp=0.jpg'\n\t            },\n\t            {\n\t                profile:'5叔2015上传',\n\t                url:'http://img0.imgtn.bdimg.com/it/u=1649172259,4185796887&fm=21&gp=0.jpg',\n\t                description:'熊猫野外生存',\n\t                thumbnail:'http://img5.imgtn.bdimg.com/it/u=1432870041,1164599966&fm=21&gp=0.jpg'\n\t            }\n\t        ],\n\t            pageNum=5,\n\t            {showThumbnail,imgModify}=this.state;\n\t        return (\n\t            <div>\n\t                <DemoLayout title=\"照片浏览插件\">\n\t                    <DemoItem title=\"\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('slider')}>\n\t                            </Code>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <Grid>\n\t                                <Row>\n\t                                    <Col sm={6}>\n\t                                        <ImgSlider  show={true}\n\t                                                    showThumbnail={showThumbnail}\n\t                                                    imgList={imgList}\n\t                                                    profileKey={'profile'}\n\t                                                    urlKey={'url'}\n\t                                                    titleKey={'description'}\n\t                                                    thumbnailKey={'thumbnail'}\n\t                                                    pageNum={pageNum}\n\t                                                    imgModify={imgModify}\n\t                                            />\n\t                                    </Col>\n\t                                    <Col sm={6}>\n\t                                        <Button block success\n\t                                                onClick={::this.toggleThumbnail} >\n\t                                            {(showThumbnail?'隐藏':'显示')+'缩略图'}\n\t                                        </Button>\n\t                                        <Button block style={{marginTop:'10px'}} success\n\t                                                onClick={::this.toggleModifier} >\n\t                                            {(imgModify?'隐藏':'显示')+'缩放控件'}\n\t                                        </Button>\n\t                                    </Col>\n\t                                </Row>\n\t                            </Grid>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t                </DemoLayout>\n\t            </div>\n\t\n\t        );\n\t    }\n\t};\n\t"
            ],
            "exampleTitles": [
                "imgSlider"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/imgslider"
            ],
            "show": true
        },
        "Input": {
            "name": "Input",
            "shortname": "Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form(表单)",
            "namespace": "",
            "file": "src/Input.js",
            "line": 20,
            "description": "input表单组件<br />\n设置type属性可以生成radio、checkbox、input等元素标签，并包裹初始化样式.<br/>\n提供自动补全功能，autoComplete为true即可。\n\n主要属性和接口：\n<ul>\n    <li>type:input的不同类型，可选'text,radio..'等，默认text<br>\n        如：<code>\n           Input  type=\"radio\"\n        </code>\n    </li>\n    <li>autoComplete:是否自动补全，默认false<br>\n        如：<code>\n           Button radius egSize=\"sm\" egStyle=\"warning\"\n        </code>\n    </li>\n    <li>label:type为radio,checkbox时，需要显示的标签信息。默认''<br>\n        如：<code>\n           Input  type=\"radio\"  label=\"大白菜\"\n        </code>\n    </li>\n    <li>onChange:状态改变时的回调方法，默认null<br>\n        如：<code>\n           Input  type=\"checkbox\" checked onChange={::this.change} value=\"bbb\"\n        </code>\n    </li>\n</ul>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component,PropTypes} from 'react';\n\t\n\timport querystring from 'querystring';\n\t\n\timport {FormGroup,CheckboxGroup,RadioGroup,Grid,Row,Col,Input} from 'eagle-ui';\n\t\n\timport Code from '../libs/Code.js';\n\timport {getFile} from '../libs/Code.js';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout'\n\t\n\t\n\texport default class Demo extends Component{\n\t    constructor(props, context) {\n\t        super(props, context);\n\t\n\t        this.state = {\n\t            show:false,\n\t            radioValue:'橘子',\n\t            checkBoxValue:false\n\t        }\n\t    };\n\t\n\t    focus(){\n\t        this.setState({\n\t            show:true\n\t        });\n\t    }\n\t    blur(){\n\t        this.setState({\n\t            show:false\n\t        });\n\t    }\n\t    radioCallback(val){\n\t        this.setState({\n\t            radioValue:val\n\t        })\n\t    }\n\t    checkboxCallback(){\n\t        this.setState({\n\t            checkBoxValue:!this.state.checkBoxValue\n\t        })\n\t    }\n\t    render(){\n\t        let {radioValue,checkBoxValue}=this.state;\n\t        return (\n\t            <DemoLayout title=\"输入控件\">\n\t                <DemoItem title=\"radio类型\" desc={'一般结合RadioGroup组件来用'}>\n\t                    <CodeShow>\n\t                        <Code code={getFile('input-radio')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Grid>\n\t                            <Row>\n\t                                <Col sm={6}>\n\t                                    <RadioGroup defaultChecked={radioValue}\n\t                                                name=\"radio-test\"\n\t                                                getValueCallback={::this.radioCallback}>\n\t                                        <Input  type=\"radio\"  label=\"石榴\" value=\"石榴\" />\n\t                                        <Input  type=\"radio\"  label=\"橘子\" value=\"橘子\"  />\n\t                                        <Input  type=\"radio\"  label=\"苹果\" value=\"苹果\" />\n\t                                    </RadioGroup>\n\t                                </Col>\n\t                                <Col sm={6}>\n\t                                    已选择了：{this.state.radioValue}\n\t                                </Col>\n\t                            </Row>\n\t                        </Grid>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"chechbox类型\" desc={'一般结合CheckboxGroup组件来用'}>\n\t                    <CodeShow>\n\t                        <Code code={getFile('input-checkbox')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Grid>\n\t                            <Row>\n\t                                <Col sm={12}>\n\t                                    <CheckboxGroup>\n\t                                        <Input label=\"石榴\" type=\"checkbox\" checked />\n\t                                        <Input label=\"橘子\" type=\"checkbox\" disabled={true}   />\n\t                                        <Input label=\"苹果\"  type=\"checkbox\" getValueCallback={function(val,dom){console.log(val,dom)}}  value=\"apple\"  />\n\t                                        <Input label=\"香蕉\"  type=\"checkbox\" onChange={::this.checkboxCallback} checked={checkBoxValue} value=\"banana\"  />\n\t                                    </CheckboxGroup>\n\t                                </Col>\n\t                            </Row>\n\t                        </Grid>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"表单组合示例\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('input-combine')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <FormGroup>\n\t                            <Row>\n\t                                <Col sm={2}>姓名</Col>\n\t                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col sm={2}>姓名</Col>\n\t                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col sm={2}>性别</Col>\n\t                                <Col sm={10}>\n\t                                    <RadioGroup defaultChecked=\"男\" name=\"radio-sex\">\n\t                                        <Input  type=\"radio\"  label=\"男\" value=\"男\" />\n\t                                        <Input  type=\"radio\"  label=\"女\" value=\"女\"  />\n\t                                    </RadioGroup>\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col sm={2}>体育爱好</Col>\n\t                                <Col sm={10}>\n\t                                    <CheckboxGroup>\n\t                                        <Input  type=\"checkbox\" label=\"足球\" checked   />\n\t                                        <Input  type=\"checkbox\" label=\"篮球\"    />\n\t                                        <Input  type=\"checkbox\" label=\"羽毛球\" checked   />\n\t                                        <Input  type=\"checkbox\" label=\"乒乓球\"    />\n\t                                    </CheckboxGroup>\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col sm={2}>姓名</Col>\n\t                                <Col sm={13}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                <FormGroup>\n\t                                    <Col sm={13}>出生日期</Col>\n\t                                    <Col sm={13} end><Input name=\"test\" id=\"test\" placeholder=\"请输入出生日期\"   /></Col>\n\t                                </FormGroup>\n\t                                <FormGroup>\n\t                                    <Col sm={13}>省份证</Col>\n\t                                    <Col sm={13} end><Input name=\"test\" id=\"test\" placeholder=\"请输入省份证\"   /></Col>\n\t                                </FormGroup>\n\t                            </Row>\n\t                        </FormGroup>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t            </DemoLayout>\n\t        );\n\t    }\n\t};\n\t"
            ],
            "exampleTitles": [
                "input"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/input"
            ],
            "show": true
        },
        "Label": {
            "name": "Label",
            "shortname": "Label",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/Label.js",
            "line": 8,
            "description": "标签组件<br />\n提供基本的标签样式，通常结合LabelGroup组件一起使用\n<div><a target=\"_blank\" href=\"http://future-team.github.io/eagle-ui/examples/index.html#/label\">demo展示</a></div>\n<div><a target=\"_blank\" href=\"https://github.com/future-team/eagle-ui/blob/master/src/Label.js\">查看源码</a></div>",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {Label,LabelGroup,Panel,Grid,Row,Col,PanelContent} from 'eagle-ui';\n\timport Code from '../libs/Code.js';\n\timport {getFile} from '../libs/Code.js';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout'\n\texport default class Demo extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    render(){\n\t        return (\n\t            <DemoLayout title=\"标签\">\n\t                <DemoItem title=\"标签样式\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('label-demo1')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Grid>\n\t                            <Row>\n\t                                <Col sm={2}>\n\t                                    <Label egStyle=\"error\">error</Label>\n\t                                </Col>\n\t                                <Col sm={2}>\n\t                                    <Label egStyle=\"success\">success</Label>\n\t                                </Col>\n\t                                <Col sm={2}>\n\t                                    <Label egStyle=\"warning\">warning</Label>\n\t                                </Col>\n\t                                <Col sm={2}>\n\t                                    <Label egStyle=\"danger\">danger</Label>\n\t                                </Col>\n\t                                <Col sm={2}>\n\t                                    <Label>default</Label>\n\t                                </Col>\n\t                                <Col sm={2}>\n\t                                    <Label disabled>disabled</Label>\n\t                                </Col>\n\t                            </Row>\n\t                        </Grid>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"标签尺寸\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('label-demo2')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Grid>\n\t                            <Row>\n\t                                <Col sm={4}>\n\t                                    <Label egStyle=\"success\" egSize=\"xs\">small</Label>\n\t                                </Col>\n\t                                <Col sm={4}>\n\t                                    <Label egStyle=\"success\" egSize=\"sm\">middle</Label>\n\t                                </Col>\n\t                                <Col sm={4}>\n\t                                    <Label egStyle=\"success\" egSize=\"lg\">large</Label>\n\t                                </Col>\n\t                            </Row>\n\t                        </Grid>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"egType设置为simple的标签组\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('label-demo3')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <LabelGroup egType=\"simple\"\n\t                                    activeCallback={\n\t                                            function(value,text,target,active){\n\t                                                console.log(value,text,target,active);\n\t                                            }}>\n\t                            <Label value=\"all\">全部</Label>\n\t                            <Label value=\"luwan\">卢湾区</Label>\n\t                            <Label value=\"xuhui\">徐汇区</Label>\n\t                            <Label value=\"jinan\">静安区</Label>\n\t                            <Label value=\"changning\">长宁区</Label>\n\t                            <Label value=\"minhang\">闵行区</Label>\n\t                        </LabelGroup>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"egType设置为default的标签组\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('label-demo4')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <LabelGroup spacing={94}\n\t                                    title='行政区'\n\t                                    egType='default'\n\t                                    defaultChecked='卢湾区'\n\t                                    activeCallback={\n\t                                            function(value,text,target,active){\n\t                                                console.log(value,text,target,active);\n\t                                            }}\n\t                            >\n\t                            <Label value=\"0\" className=\"all\">全部</Label>\n\t                            <Label value=\"1\">卢湾区</Label>\n\t                            <Label value=\"10\">徐汇区</Label>\n\t                            <Label>静安区</Label>\n\t                            <Label>长宁区</Label>\n\t                            <Label>闵行区</Label>\n\t                            <Label>浦东新区</Label>\n\t                            <Label>黄浦区</Label>\n\t                            <Label>普陀区</Label>\n\t                            <Label>闸北区</Label>\n\t                            <Label>虹口区</Label>\n\t                            <Label>杨浦区</Label>\n\t                            <Label>宝山区</Label>\n\t                        </LabelGroup>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"egType设置为form的标签组\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('label-demo5')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Row>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\"><h1 className=\"color-error\">9112</h1></Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\"><h1 className=\"color-error\">9112</h1></Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\">121212121</Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\"><h1 className=\"color-error\">9112</h1></Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t\n\t            </DemoLayout>\n\t\n\t        );\n\t    }\n\t};\n\t"
            ],
            "exampleTitles": [
                "label"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/label"
            ],
            "show": true
        },
        "LabelGroup": {
            "name": "LabelGroup",
            "shortname": "LabelGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/LabelGroup.js",
            "line": 11,
            "description": "标签组<br />\n<div><a target=\"_blank\" href=\"http://future-team.github.io/eagle-ui/examples/index.html#/label\">demo展示</a></div>\n<div><a target=\"_blank\" href=\"https://github.com/future-team/eagle-ui/blob/master/src/Label.js\">查看源码</a></div>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {Label,LabelGroup,Panel,Grid,Row,Col,PanelContent} from 'eagle-ui';\n\timport Code from '../libs/Code.js';\n\timport {getFile} from '../libs/Code.js';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout'\n\texport default class Demo extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    render(){\n\t        return (\n\t            <DemoLayout title=\"标签\">\n\t                <DemoItem title=\"标签样式\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('label-demo1')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Grid>\n\t                            <Row>\n\t                                <Col sm={2}>\n\t                                    <Label egStyle=\"error\">error</Label>\n\t                                </Col>\n\t                                <Col sm={2}>\n\t                                    <Label egStyle=\"success\">success</Label>\n\t                                </Col>\n\t                                <Col sm={2}>\n\t                                    <Label egStyle=\"warning\">warning</Label>\n\t                                </Col>\n\t                                <Col sm={2}>\n\t                                    <Label egStyle=\"danger\">danger</Label>\n\t                                </Col>\n\t                                <Col sm={2}>\n\t                                    <Label>default</Label>\n\t                                </Col>\n\t                                <Col sm={2}>\n\t                                    <Label disabled>disabled</Label>\n\t                                </Col>\n\t                            </Row>\n\t                        </Grid>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"标签尺寸\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('label-demo2')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Grid>\n\t                            <Row>\n\t                                <Col sm={4}>\n\t                                    <Label egStyle=\"success\" egSize=\"xs\">small</Label>\n\t                                </Col>\n\t                                <Col sm={4}>\n\t                                    <Label egStyle=\"success\" egSize=\"sm\">middle</Label>\n\t                                </Col>\n\t                                <Col sm={4}>\n\t                                    <Label egStyle=\"success\" egSize=\"lg\">large</Label>\n\t                                </Col>\n\t                            </Row>\n\t                        </Grid>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"egType设置为simple的标签组\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('label-demo3')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <LabelGroup egType=\"simple\"\n\t                                    activeCallback={\n\t                                            function(value,text,target,active){\n\t                                                console.log(value,text,target,active);\n\t                                            }}>\n\t                            <Label value=\"all\">全部</Label>\n\t                            <Label value=\"luwan\">卢湾区</Label>\n\t                            <Label value=\"xuhui\">徐汇区</Label>\n\t                            <Label value=\"jinan\">静安区</Label>\n\t                            <Label value=\"changning\">长宁区</Label>\n\t                            <Label value=\"minhang\">闵行区</Label>\n\t                        </LabelGroup>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"egType设置为default的标签组\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('label-demo4')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <LabelGroup spacing={94}\n\t                                    title='行政区'\n\t                                    egType='default'\n\t                                    defaultChecked='卢湾区'\n\t                                    activeCallback={\n\t                                            function(value,text,target,active){\n\t                                                console.log(value,text,target,active);\n\t                                            }}\n\t                            >\n\t                            <Label value=\"0\" className=\"all\">全部</Label>\n\t                            <Label value=\"1\">卢湾区</Label>\n\t                            <Label value=\"10\">徐汇区</Label>\n\t                            <Label>静安区</Label>\n\t                            <Label>长宁区</Label>\n\t                            <Label>闵行区</Label>\n\t                            <Label>浦东新区</Label>\n\t                            <Label>黄浦区</Label>\n\t                            <Label>普陀区</Label>\n\t                            <Label>闸北区</Label>\n\t                            <Label>虹口区</Label>\n\t                            <Label>杨浦区</Label>\n\t                            <Label>宝山区</Label>\n\t                        </LabelGroup>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"egType设置为form的标签组\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('label-demo5')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Row>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\"><h1 className=\"color-error\">9112</h1></Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\"><h1 className=\"color-error\">9112</h1></Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\">121212121</Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\"><h1 className=\"color-error\">9112</h1></Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t\n\t            </DemoLayout>\n\t\n\t        );\n\t    }\n\t};\n\t"
            ],
            "exampleTitles": [
                "label"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/label"
            ],
            "show": true
        },
        "Paging": {
            "name": "Paging",
            "shortname": "Paging",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/Paging.js",
            "line": 5,
            "description": "分页组件",
            "is_constructor": 1,
            "extends": "Component",
            "requires": [
                "React classnames"
            ],
            "example": [
                "\timport React, { Component ,PropTypes} from 'react';\n\timport {Col,Row,Paging,Button} from 'eagle-ui';\n\timport Code from '../libs/Code.js';\n\timport {getFile} from '../libs/Code.js';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout'\n\t\n\t\n\tlet page = 1;\n\tfunction callback(page){\n\t    page = page;\n\t    window.location = location.href.replace(/\\?.*/,'')+'?page='+page+'&pageSize='+pageSize;\n\t}\n\t\n\tfunction loadPageCallback(pageSize){\n\t    window.location = location.href.replace(/\\?.*/,'')+'?page='+page+'&pageSize='+pageSize;\n\t}\n\tvar pageSize = 20;\n\tlet arrs = [10,15,23,35,40],\n\t    arr1 = '1';\n\t\n\texport default class PagingCls extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state={\n\t            showItemsNumber:0\n\t        };\n\t    }\n\t    toggleItemNumber(){\n\t        this.setState({\n\t            showItemsNumber:!this.state.showItemsNumber\n\t        });\n\t    }\n\t    render(){\n\t        let query = this.props.location.query,\n\t            page = query.page*1 ||0,\n\t            pageSize = query.pageSize*1 || 20,\n\t            {showItemsNumber}=this.state;\n\t        return (\n\t            <DemoLayout title=\"分页\">\n\t                <DemoItem title=\"\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('paging')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button onClick={::this.toggleItemNumber}>\n\t                            {(showItemsNumber?'隐藏':'显示')+'条数设置工具'}\n\t                        </Button>\n\t                        <Paging showItemsNumber={showItemsNumber} visiblePages={5} theme='theme2' chooseMaxPageSize={50} loadPageCallback={loadPageCallback} currentPage={page} pageSize={pageSize}\n\t                                pageCallback={callback} total={5024} choosePageSize={arr1}/>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t            </DemoLayout>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "paging"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/paging"
            ],
            "show": true,
            "author": "min.xiao@dianping.com"
        },
        "RadioGroup": {
            "name": "RadioGroup",
            "shortname": "RadioGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form(表单)",
            "namespace": "",
            "file": "src/RadioGroup.js",
            "line": 11,
            "description": "RadioGroup需与Input组件配合使用<br/>\n它的作用是将type=radio的Input组件在UI上展示在一起\n主要属性接口：\n<ul>\n    <li>name:radio组的name值<br>\n        如：<code>\n            name='fruits'\n        </code>\n    </li>\n    <li>defaultChecked:默认选中值<br>\n        如：<code>defaultChecked=\"石榴\"</code>\n    </li>\n    <li>getValueCallback:获取选中值的回调函数<br>\n        如：<code>getValueCallback={function(val){alert(val)}}</code>\n    </li>\n\n</ul>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component,PropTypes} from 'react';\n\t\n\timport querystring from 'querystring';\n\t\n\timport {FormGroup,CheckboxGroup,RadioGroup,Grid,Row,Col,Input} from 'eagle-ui';\n\t\n\timport Code from '../libs/Code.js';\n\timport {getFile} from '../libs/Code.js';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout'\n\t\n\t\n\texport default class Demo extends Component{\n\t    constructor(props, context) {\n\t        super(props, context);\n\t\n\t        this.state = {\n\t            show:false,\n\t            radioValue:'橘子',\n\t            checkBoxValue:false\n\t        }\n\t    };\n\t\n\t    focus(){\n\t        this.setState({\n\t            show:true\n\t        });\n\t    }\n\t    blur(){\n\t        this.setState({\n\t            show:false\n\t        });\n\t    }\n\t    radioCallback(val){\n\t        this.setState({\n\t            radioValue:val\n\t        })\n\t    }\n\t    checkboxCallback(){\n\t        this.setState({\n\t            checkBoxValue:!this.state.checkBoxValue\n\t        })\n\t    }\n\t    render(){\n\t        let {radioValue,checkBoxValue}=this.state;\n\t        return (\n\t            <DemoLayout title=\"输入控件\">\n\t                <DemoItem title=\"radio类型\" desc={'一般结合RadioGroup组件来用'}>\n\t                    <CodeShow>\n\t                        <Code code={getFile('input-radio')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Grid>\n\t                            <Row>\n\t                                <Col sm={6}>\n\t                                    <RadioGroup defaultChecked={radioValue}\n\t                                                name=\"radio-test\"\n\t                                                getValueCallback={::this.radioCallback}>\n\t                                        <Input  type=\"radio\"  label=\"石榴\" value=\"石榴\" />\n\t                                        <Input  type=\"radio\"  label=\"橘子\" value=\"橘子\"  />\n\t                                        <Input  type=\"radio\"  label=\"苹果\" value=\"苹果\" />\n\t                                    </RadioGroup>\n\t                                </Col>\n\t                                <Col sm={6}>\n\t                                    已选择了：{this.state.radioValue}\n\t                                </Col>\n\t                            </Row>\n\t                        </Grid>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"chechbox类型\" desc={'一般结合CheckboxGroup组件来用'}>\n\t                    <CodeShow>\n\t                        <Code code={getFile('input-checkbox')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Grid>\n\t                            <Row>\n\t                                <Col sm={12}>\n\t                                    <CheckboxGroup>\n\t                                        <Input label=\"石榴\" type=\"checkbox\" checked />\n\t                                        <Input label=\"橘子\" type=\"checkbox\" disabled={true}   />\n\t                                        <Input label=\"苹果\"  type=\"checkbox\" getValueCallback={function(val,dom){console.log(val,dom)}}  value=\"apple\"  />\n\t                                        <Input label=\"香蕉\"  type=\"checkbox\" onChange={::this.checkboxCallback} checked={checkBoxValue} value=\"banana\"  />\n\t                                    </CheckboxGroup>\n\t                                </Col>\n\t                            </Row>\n\t                        </Grid>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"表单组合示例\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('input-combine')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <FormGroup>\n\t                            <Row>\n\t                                <Col sm={2}>姓名</Col>\n\t                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col sm={2}>姓名</Col>\n\t                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col sm={2}>性别</Col>\n\t                                <Col sm={10}>\n\t                                    <RadioGroup defaultChecked=\"男\" name=\"radio-sex\">\n\t                                        <Input  type=\"radio\"  label=\"男\" value=\"男\" />\n\t                                        <Input  type=\"radio\"  label=\"女\" value=\"女\"  />\n\t                                    </RadioGroup>\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col sm={2}>体育爱好</Col>\n\t                                <Col sm={10}>\n\t                                    <CheckboxGroup>\n\t                                        <Input  type=\"checkbox\" label=\"足球\" checked   />\n\t                                        <Input  type=\"checkbox\" label=\"篮球\"    />\n\t                                        <Input  type=\"checkbox\" label=\"羽毛球\" checked   />\n\t                                        <Input  type=\"checkbox\" label=\"乒乓球\"    />\n\t                                    </CheckboxGroup>\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col sm={2}>姓名</Col>\n\t                                <Col sm={13}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                <FormGroup>\n\t                                    <Col sm={13}>出生日期</Col>\n\t                                    <Col sm={13} end><Input name=\"test\" id=\"test\" placeholder=\"请输入出生日期\"   /></Col>\n\t                                </FormGroup>\n\t                                <FormGroup>\n\t                                    <Col sm={13}>省份证</Col>\n\t                                    <Col sm={13} end><Input name=\"test\" id=\"test\" placeholder=\"请输入省份证\"   /></Col>\n\t                                </FormGroup>\n\t                            </Row>\n\t                        </FormGroup>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t            </DemoLayout>\n\t        );\n\t    }\n\t};\n\t"
            ],
            "exampleTitles": [
                "input"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/input"
            ],
            "show": true
        },
        "Row": {
            "name": "Row",
            "shortname": "Row",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "grid(布局)",
            "namespace": "",
            "file": "src/Row.js",
            "line": 6,
            "description": "定义栅格中的一行，配合Col组件使用",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {Search,Select, Input,Label,LabelGroup,Grid,Row,Col,Panel,PanelHeader,PanelFooter,PanelContent,Paging,CheckboxGroup,List,Item} from 'eagle-ui';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout';\n\timport Code, {getFile} from '../libs/Code';\n\t\n\texport class SearchSec extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid>\n\t                <Row>\n\t                    <Col sm={5}>\n\t                        <Select callback={function(val){alert(val)}}>\n\t                            <item>北京</item>\n\t                            <item>上海</item>\n\t                            <item>南京</item>\n\t                        </Select>\n\t                    </Col>\n\t                    <Col sm={5}>\n\t                        <Search placeholder='shopId/门店名称' callBack={function(val){alert(val)}}/>\n\t                    </Col>\n\t                    <Col sm={2}/>\n\t                </Row>\n\t            </Grid>\n\t\n\t        )\n\t    }\n\t}\n\texport class FilterSec extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    render(){\n\t        return (\n\t            <div>\n\t                <LabelGroup title='频道' defaultChecked='全部' clickCallback={this.show} >\n\t                    <Label>全部</Label>\n\t                    <Label>美</Label>\n\t                    <Label>休闲娱乐</Label>\n\t                    <Label>景点</Label>\n\t                    <Label>购物</Label>\n\t                    <Label>丽人</Label>\n\t                    <Label>结婚</Label>\n\t                    <Label>亲子</Label>\n\t                    <Label>教育培训</Label>\n\t                    <Label>运动健身</Label>\n\t                    <Label>酒店</Label>\n\t                    <Label>家装</Label>\n\t                    <Label>酒店</Label>\n\t                    <Label>爱车</Label>\n\t                    <Label>酒店</Label>\n\t                    <Label>医疗健康</Label>\n\t                </LabelGroup>\n\t                <LabelGroup title='行政区' defaultChecked='全部' clickCallback={this.show} >\n\t                    <Label>全部</Label>\n\t                    <Label>卢湾区</Label>\n\t                    <Label>徐汇区</Label>\n\t                    <Label>静安区</Label>\n\t                    <Label>长宁区</Label>\n\t                    <Label>闵行区</Label>\n\t                    <Label>浦东新区</Label>\n\t                    <Label>黄浦区</Label>\n\t                    <Label>普陀区</Label>\n\t                    <Label>闸北区</Label>\n\t                    <Label>虹口区</Label>\n\t                    <Label>杨浦区</Label>\n\t                    <Label>宝山区</Label>\n\t                </LabelGroup>\n\t            </div>\n\t        )\n\t    }\n\t};\n\texport class CardListPanel extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.state = {\n\t            page: 1\n\t        }\n\t    }\n\t    show(){\n\t        console.debug(1);\n\t    }\n\t    render(){\n\t        return (\n\t            <Panel>\n\t                <PanelHeader>\n\t                    <CheckboxGroup>\n\t                        <Input label=\"仅公海\"  type=\"checkbox\" checked />\n\t                        <Input lebal=\"冻结中\"  type=\"checkbox\"/>\n\t                        <Input label=\"团购在线\" type=\"checkbox\"/>\n\t                        <Input label=\"闪惠在线\" type=\"checkbox\"/>\n\t                        <Input label=\"预订在线\" type=\"checkbox\"/>\n\t                    </CheckboxGroup>\n\t                </PanelHeader>\n\t                <PanelContent padding={false}>\n\t                    <List>\n\t                        <Item className=\"shop-info-item\">\n\t                            <h1 className='shop-card-title inline-block'>宴遇 (晶品店)</h1>\n\t                            <Label error radius>团</Label>\n\t                            <div className=\"shop-info-item-text\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={6}>shopid: 22936478 rotateid: 107126470</Col>\n\t                                        <Col sm={6}>月佣金基数: 3000.00</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col sm={6}>浏览量：151195</Col>\n\t                                        <Col sm={6}>门店市场份额:100.00%          战区市场份额: 94.63%</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col end sm={6}>美食其他 | 静安区 愚园路68号晶品中心4楼</Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                            <div className=\"shop-info-item-footer\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={10}>\n\t                                            <LabelGroup simple clickCallback={this.show} >\n\t                                                <Label>POI报错</Label>\n\t                                                <Label>查看所有分店</Label>\n\t                                            </LabelGroup>\n\t                                        </Col>\n\t                                        <Col sm={2}>\n\t                                            <Label>想要这家店？</Label>\n\t                                        </Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                        </Item>\n\t                        <Item className=\"shop-info-item\">\n\t                            <h1 className='shop-card-title inline-block'>宴遇 (晶品店)</h1>\n\t                            <Label error radius> 团</Label>\n\t                            <div className=\"shop-info-item-text\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={6}>shopid: 22936478 rotateid: 107126470</Col>\n\t                                        <Col sm={6}>月佣金基数: 3000.00</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col sm={6}>浏览量：151195</Col>\n\t                                        <Col sm={6}>门店市场份额:100.00%          战区市场份额: 94.63%</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col sm={6}>美食其他 | 静安区 愚园路68号晶品中心4楼</Col>\n\t                                        <Col sm={6}></Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                            <div className=\"shop-info-item-footer\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={10}>\n\t                                            <LabelGroup simple clickCallback={this.show} >\n\t                                                <Label>POI报错</Label>\n\t                                                <Label>查看所有分店</Label>\n\t                                            </LabelGroup>\n\t                                        </Col>\n\t                                        <Col sm={2}>\n\t                                            <Label>想要这家店？</Label>\n\t                                        </Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                        </Item>\n\t                        <Item className=\"shop-info-item\">\n\t                            <h1 className='shop-card-title inline-block'>宴遇 (晶品店)</h1>\n\t                            <Label error radius>团</Label>\n\t                            <div className=\"shop-info-item-text\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={6}>shopid: 22936478 rotateid: 107126470</Col>\n\t                                        <Col sm={6}>月佣金基数: 3000.00</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col sm={6}>浏览量：151195</Col>\n\t                                        <Col sm={6}>门店市场份额:100.00%          战区市场份额: 94.63%</Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col sm={6}>美食其他 | 静安区 愚园路68号晶品中心4楼</Col>\n\t                                        <Col sm={6}></Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                            <div className=\"shop-info-item-footer\">\n\t                                <Grid>\n\t                                    <Row>\n\t                                        <Col sm={10}>\n\t                                            <LabelGroup simple clickCallback={this.show} >\n\t                                                <Label>POI报错</Label>\n\t                                                <Label>查看所有分店</Label>\n\t                                            </LabelGroup>\n\t                                        </Col>\n\t                                        <Col sm={2}>\n\t                                            <Label>想要这家店？</Label>\n\t                                        </Col>\n\t                                    </Row>\n\t                                </Grid>\n\t                            </div>\n\t                        </Item>\n\t                    </List>\n\t                </PanelContent>\n\t                <PanelFooter>\n\t                    <Paging currentPage={this.state.page} total={1024} />\n\t                </PanelFooter>\n\t            </Panel>\n\t        );\n\t    }\n\t};\n\t\n\texport default class Layout extends Component{\n\t    render(){\n\t        return (\n\t            <DemoLayout title=\"布局样式\">\n\t                <DemoItem title=\"搜索\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('layout-search')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <SearchSec />\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"过滤\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('layout-filter')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <FilterSec />\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"卡片列表\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('layout-card')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <CardListPanel />\n\t                    </DemoShow>\n\t                </DemoItem>\n\t            </DemoLayout>\n\t        );\n\t    }\n\t}\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "layout"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/Layout"
            ],
            "show": true
        },
        "Select": {
            "name": "Select",
            "shortname": "Select",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form(表单)",
            "namespace": "",
            "file": "src/Select.js",
            "line": 12,
            "description": "下拉选择框组件<br>\n    支持在input框中输入文字或者点击下拉菜单中的选项进行查询,同时支持上下方向键进行选择。\n主要属性接口：\n<ul>\n    <li>defaultChecked:默认显示的选项即选中的选项<br>\n        如：<code>\n            defaultChecked=\"上海\"\n        </code>\n    </li>\n    <li>getValueCallback:获取元素之后的回调方法，主要将选中值传递给父级元素<br>\n        如：<code>getValueCallback={::this.getValue}</code>\n    </li>\n    <li>placeholder:提示框的内容<br>\n        如：<code>placeholder=\"请选择\"</code>\n    </li>\n\n</ul>",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\timport React,{Component,PropTypes}  from 'react';\n\timport {Col,Row,Grid,Button,Select} from 'eagle-ui';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout';\n\timport Code, {getFile} from '../libs/Code'\n\t\n\texport default class Demo extends Component{\n\t    static defaultProps = {\n\t        input: true,\n\t        keys:'bei'\n\t    }\n\t    constructor(props, context) {\n\t        super(props, context);\n\t        this.state = {\n\t            input: this.props.input,\n\t            options:[],\n\t            defaultCity:''\n\t        };\n\t        setTimeout(()=>{\n\t            this.setState({options: this.getOptions()})\n\t        });\n\t        setTimeout(function(){\n\t            this.setState({\n\t                defaultCity:'上海'\n\t            });\n\t        }.bind(this),2000);\n\t    }\n\t    getValue(value,key,type){\n\t        let stype = {\n\t            'init':'加载时调用',\n\t            'enter':'回车时调用',\n\t            'click':'点击每一项元素时调用'\n\t        };\n\t        document.getElementById('showtip').innerHTML = `<strong>${stype[type]}</strong>的值为：<b>\"key\":<span class=\"color-error\">${key}</span></b>,<b>\"value\":<span class=\"color-error\">${value}</span></b>`;\n\t    }\n\t    getOptions(){\n\t        return [\n\t            <option value='bei' key=\"bei\">北京</option>,\n\t            <option value='shang' key=\"上海\">上海</option>,\n\t            <option value='nan' key=\"南京\">南京</option>,\n\t            <option value='3' key=\"杭州\">杭州</option>,\n\t            <option value='4' key=\"杭州西\">杭州西</option>,\n\t            <option value='5' key=\"杭州北站\">杭州北站</option>,\n\t            <option value='6' key=\"广州\">广州</option>,\n\t            <option value='7' key=\"深圳\">深圳</option>,\n\t            <option value='8' key=\"澳门\">澳门</option>,\n\t            <option value='10' key=\"太原\">太原</option>,\n\t            <option value='11' key=\"台湾\">台湾</option>,\n\t            <option value='12' key=\"香港\">香港</option>\n\t        ];\n\t    }\n\t    render(){\n\t        return (\n\t            <DemoLayout title=\"下拉框组件\">\n\t                <DemoItem title=\"默认使用\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('select-demo')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Select defaultChecked={this.state.defaultCity} getValueCallback={::this.getValue} placeholder=\"请选择\" >\n\t                            {this.state.options}\n\t                        </Select>\n\t                        <div id=\"showtip\" className=\"color-info\"></div>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t            </DemoLayout>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "select"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/select"
            ],
            "show": true
        },
        "Slider": {
            "name": "Slider",
            "shortname": "Slider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/Slider.js",
            "line": 7,
            "description": "滑块组件<br>\n目前支持水平滑动",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React, { Component ,PropTypes} from 'react';\n\timport {Slider} from 'eagle-ui';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout';\n\timport Code, {getFile} from '../libs/Code';\n\t\n\texport default class SliderDemo extends Component{\n\t\n\t    constructor(props, context) {\n\t        super(props, context);\n\t        this.state = {\n\t            val:''\n\t        };\n\t\n\t    }\n\t    getValueCallback(val){\n\t        this.setState({\n\t            val:val\n\t        });\n\t    }\n\t    render(){\n\t        return (\n\t            <DemoLayout title=\"滑块\">\n\t                <DemoItem title=\"基本使用\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('slider-demo1')} />\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Slider getValueCallback={::this.getValueCallback} initCallback={(val)=>{console.dir(val);}} />\n\t                        <div>滑动输出的值：<strong style={{color:'red'}}>{this.state.val}</strong></div>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t\n\t            </DemoLayout>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "slider"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/slider"
            ],
            "show": true
        },
        "Star": {
            "name": "Star",
            "shortname": "Star",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/Star.js",
            "line": 4,
            "description": "星级评价(Star)组件<br />\n提供的UI展示属性接口包括<br/>\n<ul>\n    <li>rate：星级评价的分数(满分为100)<code>默认为0</code></li>\n    <li>size：星星的大小(默认单位为px)<code>默认13*13px</code></li>\n    <li>disable：是否可以手动设置星星比率<code>默认为true[不可以]</code></li>\n</ul><br>\n使用方式:\n<pre><code>&#60;Star rate={50} size={10}/&#62;</code>\n</pre>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by slashhuang on 15/12/21.\n\t */\n\timport React, { Component ,PropTypes} from 'react';\n\timport {Star, Button} from 'eagle-ui';\n\t\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout';\n\timport Code, {getFile} from '../libs/Code';\n\texport default class StarDemo extends Component {\n\t    getValue() {\n\t        alert('rate is'+this.refs['test'].Rate)\n\t    }\n\t    render(){\n\t        return(\n\t            <DemoLayout title=\"Star\">\n\t                <DemoItem title=\"不可修改数据\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('star-demo1')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Star/><br/>\n\t                        <Star rate={50} size={15}/>\n\t                        <br/>\n\t                        <Star rate={60} size={16} />\n\t                        <br/>\n\t                        <Star rate={70} size={17}/>\n\t                        <br/>\n\t                        <Star rate={80} size={18} />\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"可鼠标浮动修改数据\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('star-demo2')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Star rate={90} size={18}  disable={false}/>\n\t                        <br/>\n\t                        <Star rate={10} size={19}  disable={false}/>\n\t                        <br/>\n\t                        <Star rate={20} size={20} disable={false}/>\n\t                        <br/>\n\t                        <Star rate={30} size={21} disable={false}/>\n\t                        <br/>\n\t                        <Star rate={40} size={22} disable={false}/>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"获取star的比率数据\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('star-demo3')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Star rate={50} size={23} disable={false} ref='test'/>\n\t                        <br/>\n\t                        <br/>\n\t                        <Button onClick={this.getValue.bind(this)}>点击获取星星的红色比率数据</Button>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t            </DemoLayout>\n\t        )\n\t    }\n\t}\n\t\n\t"
            ],
            "exampleTitles": [
                "star"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/star"
            ],
            "show": true
        },
        "Suggestion": {
            "name": "Suggestion",
            "shortname": "Suggestion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/Suggestion.js",
            "line": 3,
            "description": "搜索联想组件。",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\timport React,{Component,PropTypes}  from 'react';\n\timport {Col,Item,Row,Grid,Button,Suggestion} from 'eagle-ui';\n\timport Code from '../libs/Code.js';\n\timport {getFile} from '../libs/Code.js';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout'\n\t\n\texport default class Demo extends Component{\n\t\n\t    static defaultProps = {\n\t        input: true,\n\t        keys:'bei'\n\t    }\n\t\n\t    constructor(props, context) {\n\t        super(props, context);\n\t        this.state = {\n\t            input: this.props.input\n\t        }\n\t    }\n\t\n\t    query(){\n\t        //可以返回ajax\n\t        return [\n\t            {\n\t                key:'上海',\n\t                value:'shanghai',\n\t                subKey:'10个区'\n\t            },\n\t            {\n\t                key:'北京',\n\t                value:'beijing',\n\t                subKey:'10个区'\n\t            },\n\t            {\n\t                key:'哈尔滨',\n\t                value:'haerbin',\n\t                subKey:'5010个区'\n\t            },\n\t            {\n\t                key:'南京',\n\t                value:'nanjing',\n\t                subKey:'10个区'\n\t            },\n\t            {\n\t                key:'南宁',\n\t                value:'nanning',\n\t                subKey:'120个区'\n\t            },\n\t            {\n\t                key:'天津',\n\t                value:'tianjing',\n\t                subKey:'312310个区'\n\t            },\n\t            {\n\t                key:'深圳',\n\t                value:'shenzhen',\n\t                subKey:'101个区'\n\t            }\n\t        ];\n\t    }\n\t\n\t    getValue(value,key,type){\n\t        let stype = {\n\t            'init':'加载时调用',\n\t            'enter':'回车时调用',\n\t            'click':'点击每一项元素时调用'\n\t        };\n\t        document.getElementById('showtip').innerHTML = `<strong>${stype[type]}</strong>的值为：<b>\"key\":<span class=\"color-error\">${key}</span></b>,<b>\"value\":<span class=\"color-error\">${value}</span></b>`;\n\t    }\n\t\n\t    render(){\n\t        return (\n\t        <DemoLayout title=\"联想词\">\n\t            <DemoItem title=\"\" desc={'queryCallback的形式传入数据'}>\n\t                <CodeShow>\n\t                    <Code code={getFile('suggestion-demo1')}>\n\t                    </Code>\n\t                </CodeShow>\n\t                <DemoShow>\n\t                    <Grid fluid>\n\t                        <Row>\n\t                            <Col>\n\t                                <div id=\"showtip\" className=\"color-info\"></div>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col sm={10} layer padding={0}>\n\t                                <Suggestion\n\t                                    getValueCallback={::this.getValue}\n\t                                    queryCallback={::this.query}\n\t                                    icon=\"search\"\n\t                                    iconDirection=\"left\"\n\t                                    placeholder=\"请输入key搜索\" />\n\t                            </Col>\n\t                            <Col sm={2} end padding={0}>\n\t                                <Button type=\"submit\">查询</Button>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </DemoShow>\n\t            </DemoItem>\n\t            <DemoItem title=\"子标签的形式传入数据\" desc={''}>\n\t                <CodeShow>\n\t                    <Code code={getFile('suggestion-demo2')}>\n\t                    </Code>\n\t                </CodeShow>\n\t                <DemoShow>\n\t                    <Grid fluid>\n\t                        <Row>\n\t                            <Col>\n\t                                <div id=\"showtip\" className=\"color-info\"></div>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col sm={10} layer>\n\t                                <Row>\n\t                                    <Col sm={10} end>\n\t                                        <Suggestion\n\t                                            icon=\"search\"\n\t                                            iconDirection=\"left\"\n\t                                            placeholder=\"请输入测、测试、试进行搜索\">\n\t                                            <Item value=\"测试测试\" subKey=\"222222\">\n\t                                                测试测试\n\t                                            </Item>\n\t                                            <Item value=\"测试\" subKey=\"达到\">\n\t                                                测试\n\t                                            </Item>\n\t                                            <Item value=\"试验\" subKey=\"dsadsad\">\n\t                                                试验\n\t                                            </Item>\n\t                                            <Item value=\"测验\">\n\t                                                测验\n\t                                            </Item>\n\t                                            <Item value=\"检测\" >\n\t                                                检测\n\t                                            </Item>\n\t                                        </Suggestion>\n\t                                    </Col>\n\t                                </Row>\n\t                            </Col>\n\t                            <Col sm={2}>请输入测、测试、试进行搜索</Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </DemoShow>\n\t            </DemoItem>\n\t\n\t        </DemoLayout>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "suggestion"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/suggestion"
            ],
            "show": true
        },
        "Tab": {
            "name": "Tab",
            "shortname": "Tab",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/Tab.js",
            "line": 8,
            "description": "导航标签组件，用户可以在不同的tab之间进行切换<br/>\n需要和Tabset组件配合使用,Tabset相当于是Tab的容器",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {Tab,Tabset} from 'eagle-ui';\n\timport Code from '../libs/Code.js';\n\timport {getFile} from '../libs/Code.js';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout'\n\t\n\tlet Demo = class Demo extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state={\n\t            tabIndex:0\n\t        };\n\t    }\n\t    componentDidMount(){\n\t        let _this=this;\n\t        setTimeout(()=>{\n\t            _this.setState({\n\t                tabIndex:3\n\t            })\n\t        },2000)\n\t    }\n\t    callback(index){\n\t        console.log('i',index);\n\t        if(this.state.tabIndex!==index){\n\t            this.setState({\n\t                tabIndex:index\n\t            });\n\t        }\n\t    }\n\t\n\t    tab3(){\n\t        if(this.state.tabIndex==2){\n\t            return (<div>tab3</div>);\n\t        }\n\t    }\n\t    tab2(){\n\t        if(this.state.tabIndex==1){\n\t            return (<div>tab2</div>);\n\t        }\n\t    }\n\t    tab1(){\n\t        if(this.state.tabIndex==0){\n\t            return (<div>tab1</div>);\n\t        }\n\t    }\n\t\n\t\n\t    render(){\n\t        return (\n\t            <DemoLayout title=\"Tab\">\n\t                <DemoItem title=\"\" desc={'activeTab属性从0开始计'}>\n\t                    <CodeShow>\n\t                        <Code code={getFile('tab')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Tabset  activeTab={this.state.tabIndex} tabCallback={::this.callback}>\n\t                            <Tab>\n\t                                {::this.tab1()}\n\t                            </Tab>\n\t                            <Tab heading='tab2'>\n\t                                {::this.tab2()}\n\t                            </Tab>\n\t                            <Tab heading='tab3'>\n\t                                {::this.tab3()}\n\t                            </Tab>\n\t                            <Tab heading='tab4'>\n\t                                tab4\n\t                            </Tab>\n\t                            <Tab heading='tab5'>\n\t                                tab5\n\t                            </Tab>\n\t                        </Tabset>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t            </DemoLayout>\n\t        );\n\t    }\n\t}\n\t\n\texport default Demo;"
            ],
            "exampleTitles": [
                "tab"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/tab"
            ],
            "show": true
        },
        "Tabset": {
            "name": "Tabset",
            "shortname": "Tabset",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/Tabset.js",
            "line": 9,
            "description": "导航标签组件，用户可以在不同的tab之间进行切换<br/>\n需要和Tab组件配合使用,Tabset相当于是Tab的容器",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {Tab,Tabset} from 'eagle-ui';\n\timport Code from '../libs/Code.js';\n\timport {getFile} from '../libs/Code.js';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout'\n\t\n\tlet Demo = class Demo extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state={\n\t            tabIndex:0\n\t        };\n\t    }\n\t    componentDidMount(){\n\t        let _this=this;\n\t        setTimeout(()=>{\n\t            _this.setState({\n\t                tabIndex:3\n\t            })\n\t        },2000)\n\t    }\n\t    callback(index){\n\t        console.log('i',index);\n\t        if(this.state.tabIndex!==index){\n\t            this.setState({\n\t                tabIndex:index\n\t            });\n\t        }\n\t    }\n\t\n\t    tab3(){\n\t        if(this.state.tabIndex==2){\n\t            return (<div>tab3</div>);\n\t        }\n\t    }\n\t    tab2(){\n\t        if(this.state.tabIndex==1){\n\t            return (<div>tab2</div>);\n\t        }\n\t    }\n\t    tab1(){\n\t        if(this.state.tabIndex==0){\n\t            return (<div>tab1</div>);\n\t        }\n\t    }\n\t\n\t\n\t    render(){\n\t        return (\n\t            <DemoLayout title=\"Tab\">\n\t                <DemoItem title=\"\" desc={'activeTab属性从0开始计'}>\n\t                    <CodeShow>\n\t                        <Code code={getFile('tab')}>\n\t                        </Code>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Tabset  activeTab={this.state.tabIndex} tabCallback={::this.callback}>\n\t                            <Tab>\n\t                                {::this.tab1()}\n\t                            </Tab>\n\t                            <Tab heading='tab2'>\n\t                                {::this.tab2()}\n\t                            </Tab>\n\t                            <Tab heading='tab3'>\n\t                                {::this.tab3()}\n\t                            </Tab>\n\t                            <Tab heading='tab4'>\n\t                                tab4\n\t                            </Tab>\n\t                            <Tab heading='tab5'>\n\t                                tab5\n\t                            </Tab>\n\t                        </Tabset>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t            </DemoLayout>\n\t        );\n\t    }\n\t}\n\t\n\texport default Demo;"
            ],
            "exampleTitles": [
                "tab"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/tab"
            ],
            "show": true
        },
        "TimePicker": {
            "name": "TimePicker",
            "shortname": "TimePicker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/TimePicker.js",
            "line": 9,
            "description": "时间选择器",
            "extends": "CalendarPanel",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component,PropTypes} from 'react';\n\timport {Input,  Button, Grid, Row, Col,TimePicker} from 'eagle-ui';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout';\n\timport Code, {getFile} from '../libs/Code';\n\t\n\texport default class Calendar extends Component{\n\t    constructor(props, context) {\n\t        super(props, context);\n\t        this.state = {\n\t            time:''\n\t        };\n\t\n\t    }\n\t    render(){\n\t        return (\n\t            <div style={{paddingBottom: '250px'}}>\n\t                <DemoLayout title=\"时间选择器\">\n\t                    <DemoItem title=\"默认\">\n\t                        <CodeShow>\n\t                            <Code code={getFile('timepicker-demo1')}/>\n\t                        </CodeShow>\n\t                        <DemoShow>\n\t                            <TimePicker getValueCallback={(val)=>{this.setState({time:val}); }} defaultValue={this.state.time ||''} format=\"HH:mm\">\n\t                                <Input placeholder=\"请选择时间\"  icon=\"clock\" />\n\t                            </TimePicker>\n\t                        </DemoShow>\n\t                    </DemoItem>\n\t\n\t\n\t                </DemoLayout>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "timepicker"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/timepicker"
            ],
            "show": true
        },
        "Toast": {
            "name": "Toast",
            "shortname": "Toast",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/Toast.js",
            "line": 11,
            "description": "提示组件\n类型：分为success,error,loading 三种。默认success\noveralay是否显示遮罩，默认false不显示",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by panqianjin on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {ButtonGroup,Toast,Col,Row,Grid,Button,Dialog,Panel,PanelHeader,PanelContent,PanelFooter,FormGroup,Input,RadioGroup,CheckboxGroup,Select} from 'eagle-ui';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout';\n\timport Code, {getFile} from '../libs/Code';\n\t\n\texport default class Demo extends Component{\n\t    static defaultProps = {\n\t        show: false,\n\t        type: \"success\"\n\t    }\n\t    constructor(props, context) {\n\t        super(props, context);\n\t        this.state = {\n\t            isMask:true\n\t        }\n\t    }\n\t    showToast(){\n\t        let msg = arguments[0].getAttribute('data-message');\n\t        this.setState({\n\t            type:arguments[0].getAttribute('data-value'),\n\t            message:msg,\n\t            isMask:msg=='无遮罩加载成功' ?false:true\n\t        });\n\t        Dialog.mask('toast');\n\t    }\n\t    render(){\n\t        return (\n\t            <DemoLayout title=\"Toast\">\n\t                <DemoItem title=\"不同类别\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('toast')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <ButtonGroup activeCallback={::this.showToast}>\n\t                            <Button data-value=\"success\" data-message=\"数据载入成功\">显示success</Button>\n\t                            <Button data-value=\"error\"  data-message=\"数据加载失败\">显示error</Button>\n\t                            <Button data-value=\"loading\"  data-message=\"加载中...\">显示loading</Button>\n\t                            <Button data-value=\"success\"  data-message=\"无遮罩加载成功\">无遮罩toast</Button>\n\t                        </ButtonGroup>\n\t                        <Dialog id=\"toast\" isClose={false} isMask={this.state.isMask} isMaskClose={false}>\n\t                            <Toast type={this.state.type}>{this.state.message}</Toast>\n\t                        </Dialog>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t            </DemoLayout>\n\t        );\n\t    }\n\t};"
            ],
            "exampleTitles": [
                "toast"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/toast"
            ],
            "show": true
        },
        "Tooltip": {
            "name": "Tooltip",
            "shortname": "Tooltip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/Tooltip.js",
            "line": 8,
            "description": "tips组件\n只是从tooltipPanel获得props渲染，其他操作均在tooltipPanel中",
            "is_constructor": 1,
            "example": [
                "\timport React,{Component} from 'react';\n\timport {TooltipPanel,Tooltip,Button,Grid,Col,Row} from 'eagle-ui';\n\timport Code from '../libs/Code.js';\n\timport {getFile} from '../libs/Code.js';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout'\n\t\n\tlet Demo = class Demo extends Component {\n\t    render() {\n\t        let test1 = <div className='sds' style={{'color':'red'}}>Holy guacamole!</div>;\n\t        return (\n\t        <DemoLayout title=\"Tooltip\">\n\t            <DemoItem title=\"基本场景\">\n\t                <CodeShow>\n\t                    <Code code={getFile('tooltip-demo1')}>\n\t                    </Code>\n\t                </CodeShow>\n\t                <DemoShow>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col sm={3}>\n\t                                <TooltipPanel direction='top'>\n\t                                    <Button radius egSize=\"sm\" egStyle=\"warning\">上边</Button>\n\t                                    <Tooltip padding={20}>\n\t                                        <div className='tooltip' style={{width:'150px',color:'#f00'}}>tooltip的children</div>\n\t                                    </Tooltip>\n\t                                </TooltipPanel>\n\t                            </Col>\n\t                            <Col sm={3}>\n\t                                <TooltipPanel direction='right'\n\t                                              msg='我是在右方的tooltip哦' padding={10} trigger='click'>\n\t                                    <Button radius egSize=\"sm\" egStyle=\"warning\">右边</Button>\n\t                                </TooltipPanel>\n\t                            </Col>\n\t                            <Col sm={3}>\n\t                                <TooltipPanel direction='bottom'\n\t                                              msg='我是在下方的tooltip哦'>\n\t                                    <Button radius egSize=\"sm\" egStyle=\"warning\">下边</Button>\n\t                                </TooltipPanel>\n\t                            </Col>\n\t                            <Col sm={3}>\n\t                                <TooltipPanel direction='left'\n\t                                              msg='我是在左方的tooltip哦'>\n\t                                    <Button radius egSize=\"sm\" egStyle=\"warning\">左边</Button>\n\t\n\t                                </TooltipPanel>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </DemoShow>\n\t            </DemoItem>\n\t\n\t            <DemoItem title=\"通过设置wrapper属性来限定边界\" desc={'wrapper为边界容器的的id值，当tooltip设置的方向超出容器的边界时，会被自动改变方向'}>\n\t                <CodeShow>\n\t                    <Code code={getFile('tooltip-demo2')}>\n\t                    </Code>\n\t                </CodeShow>\n\t                <DemoShow>\n\t                    <div id='a' style={{width:'500px',height:'200px',border:'1px solid #f00',position:'relative'}}>\n\t                        <div style={{margin:'10px'}}>\n\t                            <TooltipPanel direction='top' wrapper='a' msg={'sddssdds'}>\n\t                                <Button radius egSize=\"sm\" egStyle=\"warning\">红色边框为边界，设置的方向是top.实际展示为bottom</Button>\n\t                            </TooltipPanel>\n\t                        </div>\n\t                    </div>\n\t                </DemoShow>\n\t            </DemoItem>\n\t        </DemoLayout>\n\t        )\n\t    }\n\t};\n\texport default Demo;"
            ],
            "exampleTitles": [
                "tooltip"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/toolTip"
            ],
            "show": true
        },
        "TooltipPanel": {
            "name": "TooltipPanel",
            "shortname": "TooltipPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "src/TooltipPanel.js",
            "line": 10,
            "description": "tipsPanel组件\n方向可选：top,down,left,right.默认down\n存在边界判断，若指定方向容纳不了提示，会转为默认\n可以指定边界，即将边界的id值，赋给wrapper属性。则提示超出该元素范围则取反方向。\n主要属性和接口：\n<ul>\n    <li>direction:提示的方向，取值范围［top,bottom,left,right］默认down<br>\n        如：<code>\n          TooltipPanel direction='top' wapper='a'\n        </code>\n    </li>\n    <li>msg:提示文字，必须要写，不然默认的没什么用吧<br>\n        如：<code>\n          TooltipPanel direction='top' wapper='a' msg='this is msg'\n        </code>\n    </li>\n    <li>wrapper:指定边界元素，默认为可视窗口，如下则id为a的div为边界元素<br>\n        如：<code>\n           TooltipPanel direction='top' wapper='a'\n        </code>\n    </li>\n</ul>",
            "is_constructor": 1,
            "example": [
                "\timport React,{Component} from 'react';\n\timport {TooltipPanel,Tooltip,Button,Grid,Col,Row} from 'eagle-ui';\n\timport Code from '../libs/Code.js';\n\timport {getFile} from '../libs/Code.js';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout'\n\t\n\tlet Demo = class Demo extends Component {\n\t    render() {\n\t        let test1 = <div className='sds' style={{'color':'red'}}>Holy guacamole!</div>;\n\t        return (\n\t        <DemoLayout title=\"Tooltip\">\n\t            <DemoItem title=\"基本场景\">\n\t                <CodeShow>\n\t                    <Code code={getFile('tooltip-demo1')}>\n\t                    </Code>\n\t                </CodeShow>\n\t                <DemoShow>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col sm={3}>\n\t                                <TooltipPanel direction='top'>\n\t                                    <Button radius egSize=\"sm\" egStyle=\"warning\">上边</Button>\n\t                                    <Tooltip padding={20}>\n\t                                        <div className='tooltip' style={{width:'150px',color:'#f00'}}>tooltip的children</div>\n\t                                    </Tooltip>\n\t                                </TooltipPanel>\n\t                            </Col>\n\t                            <Col sm={3}>\n\t                                <TooltipPanel direction='right'\n\t                                              msg='我是在右方的tooltip哦' padding={10} trigger='click'>\n\t                                    <Button radius egSize=\"sm\" egStyle=\"warning\">右边</Button>\n\t                                </TooltipPanel>\n\t                            </Col>\n\t                            <Col sm={3}>\n\t                                <TooltipPanel direction='bottom'\n\t                                              msg='我是在下方的tooltip哦'>\n\t                                    <Button radius egSize=\"sm\" egStyle=\"warning\">下边</Button>\n\t                                </TooltipPanel>\n\t                            </Col>\n\t                            <Col sm={3}>\n\t                                <TooltipPanel direction='left'\n\t                                              msg='我是在左方的tooltip哦'>\n\t                                    <Button radius egSize=\"sm\" egStyle=\"warning\">左边</Button>\n\t\n\t                                </TooltipPanel>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </DemoShow>\n\t            </DemoItem>\n\t\n\t            <DemoItem title=\"通过设置wrapper属性来限定边界\" desc={'wrapper为边界容器的的id值，当tooltip设置的方向超出容器的边界时，会被自动改变方向'}>\n\t                <CodeShow>\n\t                    <Code code={getFile('tooltip-demo2')}>\n\t                    </Code>\n\t                </CodeShow>\n\t                <DemoShow>\n\t                    <div id='a' style={{width:'500px',height:'200px',border:'1px solid #f00',position:'relative'}}>\n\t                        <div style={{margin:'10px'}}>\n\t                            <TooltipPanel direction='top' wrapper='a' msg={'sddssdds'}>\n\t                                <Button radius egSize=\"sm\" egStyle=\"warning\">红色边框为边界，设置的方向是top.实际展示为bottom</Button>\n\t                            </TooltipPanel>\n\t                        </div>\n\t                    </div>\n\t                </DemoShow>\n\t            </DemoItem>\n\t        </DemoLayout>\n\t        )\n\t    }\n\t};\n\texport default Demo;"
            ],
            "exampleTitles": [
                "tooltip"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/toolTip"
            ],
            "show": true
        },
        "ValidatorPanel": {
            "name": "ValidatorPanel",
            "shortname": "ValidatorPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form(表单)",
            "namespace": "",
            "file": "src/ValidatorBase.js",
            "line": 5,
            "description": "表单验证组件对所有带有data-validate属性的子元素input输入框进行验证<br />\n<!--表单元素初始化值请绑定上data-field=“fieldName”,fieldName对应数据字段名称-->\nrules属性提供的规则有<br/>\n<pre>\n    required：是否必填\n    date：日期格式验证\n    number：是否是有效的号码\n    url：url规则验证\n    dateISO：日期ISO验证\n    digits：是否是数字\n    equalTo：值对比\n    minlength：最少输入\n    maxlength：最大输入\n    email：邮箱验证\n    rangelength：字符大小需在某个区间之内\n    min：输入的值需要大于等于此规则定义的值\n    max：输入的值需要小于等于此规则定义的值\n    range：一个区间取值范围\n    自定义，比如rules:{\n         checkbox:{\n               required:true,\n               //自定义规则\n               isValueToNumber:{\n                   text:'value值不是数字',\n                   rule:function(value){\n                       return !isNaN(value-0);\n                   }\n               }\n           }\n      }\n    会验证name为checkbox的输入控件。\n    自定义的规则作为key、value配置，validator会依据rule方法返回的true或者false来决定是否提示text中的文案\n</pre>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {Tabset,Tab,CalendarPanel,ValidatorPanel,ValidatorWrapper,Col,Row,Grid,Button,Dialog,Panel,PanelHeader,PanelContent,PanelFooter,FormGroup,Input,RadioGroup,CheckboxGroup,Select} from 'eagle-ui';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout'\n\timport Code, {getFile} from '../libs/Code';\n\tlet Demo = class Demo extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.rules = {\n\t            //key对应的是表单元素的name\n\t            calendar:{\n\t                //组件默认规则\n\t                required:true\n\t            },\n\t            userName:{\n\t                required:true\n\t            },\n\t            checkbox:{\n\t                required:true,\n\t                //自定义规则\n\t                isValueToNumber:{\n\t                    text:'value值不是数字',\n\t                    rule:function(value){\n\t                        return !isNaN(value-0);\n\t                    }\n\t                }\n\t            },\n\t            date:{\n\t                date:true\n\t            },\n\t            number:{\n\t                number:true,\n\t                digits:true\n\t            },\n\t            equalTo:{\n\t                digits:true,\n\t                equalTo:{\n\t                    params:'[name=\"number\"]'\n\t                }\n\t            },\n\t            minlength:{\n\t                minlength:{\n\t                    params:10\n\t                },\n\t                maxlength:{\n\t                    params:15\n\t                }\n\t            },\n\t            email:{\n\t                email:true\n\t            }\n\t        };\n\t        this.state={\n\t            showTab:0,\n\t            update:'uid',\n\t            show:false\n\t        };\n\t    }\n\t\n\t    show(value,text,target,active){\n\t        console.dir(value);\n\t    }\n\t    getDialog(d){\n\t        //this.dialog = d;\n\t    }\n\t    change(value){\n\t       this.setState({\n\t           showTab:value,\n\t           update:'uid'+(+new Date())\n\t       });\n\t\n\t    }\n\t    submit(vals){\n\t        alert('验证成功'+JSON.stringify(vals));\n\t    }\n\t    showMask(){\n\t        Dialog.mask('demo2');\n\t    }\n\t    render(){\n\t        return (\n\t            <DemoLayout title=\"验证控件\">\n\t                <DemoItem title=\"非必填项\">\n\t                    <CodeShow><Code code={getFile('validate-demo1')}/></CodeShow>\n\t                    <DemoShow>\n\t                        <ValidatorPanel rules={this.rules} submitElement=\"#submit1\" direction=\"right\" id=\"testFrom\" update={this.state.update} submitCallback={::this.submit}>\n\t                            <CheckboxGroup>\n\t                                <Input  type=\"checkbox\" label='1'  name=\"checkbox\" value=\"1\"  data-validate />\n\t                                <Input  type=\"checkbox\" label='2'  name=\"checkbox\" value=\"2\" data-validate  />\n\t                                <Input  type=\"checkbox\" label='3'  name=\"checkbox\" value=\"3\" data-validate  />\n\t                                <Input  type=\"checkbox\" label='4a'  name=\"checkbox\" value=\"4a\" data-validate  />\n\t                            </CheckboxGroup>\n\t                            <Row>\n\t                                <Col>\n\t                                    <CalendarPanel>\n\t                                        <Input placeholder=\"请选择日期\" icon=\"calendar\" name=\"date\" data-validate />\n\t                                    </CalendarPanel>\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Input placeholder=\"请输入手机号码\" name=\"number\" data-validate />\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Input placeholder=\"请再次确认手机号码\" name=\"equalTo\" data-validate />\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Button radius egSize=\"xs\" id=\"submit1\" >点我提交表单</Button>\n\t                                </Col>\n\t                            </Row>\n\t                        </ValidatorPanel>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"必填项\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('validate-demo2')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <ValidatorPanel rules={this.rules} submitElement=\"#submit2\" direction=\"right\" id=\"testFrom\" update={this.state.update} submitCallback={::this.submit}>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Input placeholder=\"请输入姓名\"  name=\"userName\" data-validate />\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Input placeholder=\"最大最小字符10-15\" name=\"minlength\" data-validate />\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Input placeholder=\"请输入您的email\" name=\"email\" data-validate />\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Button radius egSize=\"xs\" id=\"submit2\" >点我提交表单</Button>\n\t                                </Col>\n\t                            </Row>\n\t                        </ValidatorPanel>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"弹出验证表单\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('validate-demo3')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button onClick={::this.showMask}>弹出验证表单</Button>\n\t                        <Dialog id=\"demo2\" egSize=\"sm\" title=\"表单验证\">\n\t                            <Grid>\n\t                                <ValidatorPanel rules={this.rules} submitElement=\"#ssubmit\" direction=\"top\" id=\"testDialogFrom\" submitCallback={::this.submit}>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            <Input placeholder=\"请输入姓名\"  name=\"userName\" data-validate />\n\t\n\t                                        </Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            <Input placeholder=\"请输入有效的号码\" name=\"number\" data-validate />\n\t                                        </Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            <Input placeholder=\"请输入有效的号码\" name=\"equalTo\" data-validate />\n\t                                        </Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            <Input placeholder=\"最大最小字符10-15\" name=\"minlength\" data-validate />\n\t                                        </Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            <Input placeholder=\"请输入您的email\" name=\"email\" data-validate />\n\t                                        </Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            <Button radius egSize=\"xs\" id=\"ssubmit\" >点我提交表单</Button>\n\t                                        </Col>\n\t                                    </Row>\n\t                                </ValidatorPanel>\n\t                            </Grid>\n\t                        </Dialog>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t\n\t\n\t                <DemoItem title=\"ValidatorWrapper\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('validate-demo4')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <ValidatorWrapper\n\t                            rules={{\n\t                                userName:{\n\t                                    required:true\n\t                                }}} >\n\t                            <Input placeholder=\"请输入姓名\"  name=\"userName\" data-validate />\n\t                        </ValidatorWrapper>\n\t                        <br />\n\t                        <ValidatorWrapper\n\t                            rules={{\n\t                                minlength:{\n\t                                    minlength:{\n\t                                    params:10\n\t                                 },\n\t                                 maxlength:{\n\t                                     params:15\n\t                                 }\n\t                             }   }} >\n\t                            <Input placeholder=\"最大最小字符10-15\" name=\"minlength\" data-validate />\n\t                        </ValidatorWrapper>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t\n\t            </DemoLayout>\n\t        );\n\t    }\n\t};\n\texport default Demo;"
            ],
            "exampleTitles": [
                "validate"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/validate"
            ],
            "show": true
        },
        "ValidatorWrapper": {
            "name": "ValidatorWrapper",
            "shortname": "ValidatorWrapper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form(表单)",
            "namespace": "",
            "file": "src/ValidatorWrapper.js",
            "line": 5,
            "description": "表单验证组件对所有带有data-validate属性的子元素input输入框进行验证。<br/>\n<strong>rules配置对象的key值必须和子元素Input的name值保持一致</strong><br />\n<strong>区别于ValidatorPanel：ValidatorWrapper用于包裹单个输入组件，不像ValidatorPanel包裹一系列输入组件。\nValidatorWrapper的错误信息会出现在输入框下方，直到验证通过后错误信息才会消失。\n</strong>\n<br/>\n<!--表单元素初始化值请绑定上data-field=“fieldName”,fieldName对应数据字段名称-->\nrules属性提供的规则有<br/>\n<pre>\n    required：是否必填\n    date：日期格式验证\n    number：是否是有效的号码\n    url：url规则验证\n    dateISO：日期ISO验证\n    digits：是否是数字\n    equalTo：值对比\n    minlength：最少输入\n    maxlength：最大输入\n    email：邮箱验证\n    rangelength：字符大小需在某个区间之内\n    min：输入的值需要大于等于此规则定义的值\n    max：输入的值需要小于等于此规则定义的值\n    range：一个区间取值范围\n    自定义，比如rules:{\n         checkbox:{\n               required:true,\n               //自定义规则\n               isValueToNumber:{\n                   text:'value值不是数字',\n                   rule:function(value){\n                       return !isNaN(value-0);\n                   }\n               }\n           }\n       }\n    会验证name为checkbox的输入控件。\n    自定义的规则作为key、value配置，validator会依据rule方法返回的true或者false来决定是否提示text中的文案\n</pre>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {Tabset,Tab,CalendarPanel,ValidatorPanel,ValidatorWrapper,Col,Row,Grid,Button,Dialog,Panel,PanelHeader,PanelContent,PanelFooter,FormGroup,Input,RadioGroup,CheckboxGroup,Select} from 'eagle-ui';\n\timport {DemoLayout, DemoItem, DemoShow, CodeShow} from '../libs/Layout'\n\timport Code, {getFile} from '../libs/Code';\n\tlet Demo = class Demo extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.rules = {\n\t            //key对应的是表单元素的name\n\t            calendar:{\n\t                //组件默认规则\n\t                required:true\n\t            },\n\t            userName:{\n\t                required:true\n\t            },\n\t            checkbox:{\n\t                required:true,\n\t                //自定义规则\n\t                isValueToNumber:{\n\t                    text:'value值不是数字',\n\t                    rule:function(value){\n\t                        return !isNaN(value-0);\n\t                    }\n\t                }\n\t            },\n\t            date:{\n\t                date:true\n\t            },\n\t            number:{\n\t                number:true,\n\t                digits:true\n\t            },\n\t            equalTo:{\n\t                digits:true,\n\t                equalTo:{\n\t                    params:'[name=\"number\"]'\n\t                }\n\t            },\n\t            minlength:{\n\t                minlength:{\n\t                    params:10\n\t                },\n\t                maxlength:{\n\t                    params:15\n\t                }\n\t            },\n\t            email:{\n\t                email:true\n\t            }\n\t        };\n\t        this.state={\n\t            showTab:0,\n\t            update:'uid',\n\t            show:false\n\t        };\n\t    }\n\t\n\t    show(value,text,target,active){\n\t        console.dir(value);\n\t    }\n\t    getDialog(d){\n\t        //this.dialog = d;\n\t    }\n\t    change(value){\n\t       this.setState({\n\t           showTab:value,\n\t           update:'uid'+(+new Date())\n\t       });\n\t\n\t    }\n\t    submit(vals){\n\t        alert('验证成功'+JSON.stringify(vals));\n\t    }\n\t    showMask(){\n\t        Dialog.mask('demo2');\n\t    }\n\t    render(){\n\t        return (\n\t            <DemoLayout title=\"验证控件\">\n\t                <DemoItem title=\"非必填项\">\n\t                    <CodeShow><Code code={getFile('validate-demo1')}/></CodeShow>\n\t                    <DemoShow>\n\t                        <ValidatorPanel rules={this.rules} submitElement=\"#submit1\" direction=\"right\" id=\"testFrom\" update={this.state.update} submitCallback={::this.submit}>\n\t                            <CheckboxGroup>\n\t                                <Input  type=\"checkbox\" label='1'  name=\"checkbox\" value=\"1\"  data-validate />\n\t                                <Input  type=\"checkbox\" label='2'  name=\"checkbox\" value=\"2\" data-validate  />\n\t                                <Input  type=\"checkbox\" label='3'  name=\"checkbox\" value=\"3\" data-validate  />\n\t                                <Input  type=\"checkbox\" label='4a'  name=\"checkbox\" value=\"4a\" data-validate  />\n\t                            </CheckboxGroup>\n\t                            <Row>\n\t                                <Col>\n\t                                    <CalendarPanel>\n\t                                        <Input placeholder=\"请选择日期\" icon=\"calendar\" name=\"date\" data-validate />\n\t                                    </CalendarPanel>\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Input placeholder=\"请输入手机号码\" name=\"number\" data-validate />\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Input placeholder=\"请再次确认手机号码\" name=\"equalTo\" data-validate />\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Button radius egSize=\"xs\" id=\"submit1\" >点我提交表单</Button>\n\t                                </Col>\n\t                            </Row>\n\t                        </ValidatorPanel>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"必填项\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('validate-demo2')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <ValidatorPanel rules={this.rules} submitElement=\"#submit2\" direction=\"right\" id=\"testFrom\" update={this.state.update} submitCallback={::this.submit}>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Input placeholder=\"请输入姓名\"  name=\"userName\" data-validate />\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Input placeholder=\"最大最小字符10-15\" name=\"minlength\" data-validate />\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Input placeholder=\"请输入您的email\" name=\"email\" data-validate />\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Button radius egSize=\"xs\" id=\"submit2\" >点我提交表单</Button>\n\t                                </Col>\n\t                            </Row>\n\t                        </ValidatorPanel>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t                <DemoItem title=\"弹出验证表单\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('validate-demo3')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <Button onClick={::this.showMask}>弹出验证表单</Button>\n\t                        <Dialog id=\"demo2\" egSize=\"sm\" title=\"表单验证\">\n\t                            <Grid>\n\t                                <ValidatorPanel rules={this.rules} submitElement=\"#ssubmit\" direction=\"top\" id=\"testDialogFrom\" submitCallback={::this.submit}>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            <Input placeholder=\"请输入姓名\"  name=\"userName\" data-validate />\n\t\n\t                                        </Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            <Input placeholder=\"请输入有效的号码\" name=\"number\" data-validate />\n\t                                        </Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            <Input placeholder=\"请输入有效的号码\" name=\"equalTo\" data-validate />\n\t                                        </Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            <Input placeholder=\"最大最小字符10-15\" name=\"minlength\" data-validate />\n\t                                        </Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            <Input placeholder=\"请输入您的email\" name=\"email\" data-validate />\n\t                                        </Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            <Button radius egSize=\"xs\" id=\"ssubmit\" >点我提交表单</Button>\n\t                                        </Col>\n\t                                    </Row>\n\t                                </ValidatorPanel>\n\t                            </Grid>\n\t                        </Dialog>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t\n\t\n\t                <DemoItem title=\"ValidatorWrapper\">\n\t                    <CodeShow>\n\t                        <Code code={getFile('validate-demo4')}/>\n\t                    </CodeShow>\n\t                    <DemoShow>\n\t                        <ValidatorWrapper\n\t                            rules={{\n\t                                userName:{\n\t                                    required:true\n\t                                }}} >\n\t                            <Input placeholder=\"请输入姓名\"  name=\"userName\" data-validate />\n\t                        </ValidatorWrapper>\n\t                        <br />\n\t                        <ValidatorWrapper\n\t                            rules={{\n\t                                minlength:{\n\t                                    minlength:{\n\t                                    params:10\n\t                                 },\n\t                                 maxlength:{\n\t                                     params:15\n\t                                 }\n\t                             }   }} >\n\t                            <Input placeholder=\"最大最小字符10-15\" name=\"minlength\" data-validate />\n\t                        </ValidatorWrapper>\n\t                    </DemoShow>\n\t                </DemoItem>\n\t\n\t            </DemoLayout>\n\t        );\n\t    }\n\t};\n\texport default Demo;"
            ],
            "exampleTitles": [
                "validate"
            ],
            "exampleUrls": [
                "http://future-team.github.io/eagle-ui/examples/index.html#/validate"
            ],
            "show": true
        }
    },
    "classitems": [
        {
            "file": "src/dialog/Dialog.js",
            "line": 26,
            "description": "key 报warning，暂时改为keys",
            "class": "Panel"
        },
        {
            "file": "src/panels/Panel.js",
            "line": 34,
            "description": "panel的样式风格, 这个属性只会影响多层panel嵌套的场景<br>\n可以设置为normal或者default<br>\ndefault为默认值，当出现嵌套的panel时，子panel不会有border<br>\n当egType为normal时，每一层的子panel和父panel之间都会有border隔开",
            "itemtype": "property",
            "name": "egType",
            "type": "String",
            "default": "'default'",
            "class": "Panel",
            "module": "panel(面板)"
        },
        {
            "file": "src/panels/Panel.js",
            "line": 44,
            "description": "可以通过heading设置panel的header，如果设置了heading属性，就没有必要在Panel下包含PanelHeader标签",
            "itemtype": "property",
            "name": "heading",
            "type": "String",
            "default": "empty",
            "class": "Panel",
            "module": "panel(面板)"
        },
        {
            "file": "src/panels/PanelContent.js",
            "line": 20,
            "description": "是否为panelContent添加padding，默认true",
            "itemtype": "property",
            "name": "padding",
            "type": "bool",
            "default": "true",
            "class": "PanelContent",
            "module": "panel(面板)"
        },
        {
            "file": "src/panels/PanelFooter.js",
            "line": 21,
            "description": "是否为panelFooter中的内容添加padding，默认true",
            "itemtype": "property",
            "name": "padding",
            "type": "bool",
            "default": "true",
            "class": "PanelFooter",
            "module": "panel(面板)"
        },
        {
            "file": "src/panels/PanelHeader.js",
            "line": 20,
            "description": "设置leftFlag为true时，header的背景色会变为白色（默认灰色），并在header左边添加高亮flag",
            "itemtype": "property",
            "name": "leftFlag",
            "type": "Boolean",
            "default": "false",
            "class": "PanelHeader",
            "module": "panel(面板)"
        },
        {
            "file": "src/sug/Search.js",
            "line": 10,
            "description": "回调方法，主要作用将value传给父级元素。默认为null",
            "itemtype": "property",
            "name": "callback",
            "type": "func",
            "default": "null",
            "class": "Column",
            "module": "panel(面板)"
        },
        {
            "file": "src/sug/Search.js",
            "line": 17,
            "description": "样式类名前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "string",
            "class": "Column",
            "module": "panel(面板)"
        },
        {
            "file": "src/tables/Column.js",
            "line": 18,
            "description": "表头样式(设置表头，支持JSX)",
            "itemtype": "property",
            "name": "header",
            "type": "String",
            "class": "Column",
            "module": "table(表格)"
        },
        {
            "file": "src/tables/Column.js",
            "line": 27,
            "description": "用来声明需要绑定数组对象中的哪一个属性",
            "itemtype": "property",
            "name": "field",
            "type": "String",
            "class": "Column",
            "module": "table(表格)"
        },
        {
            "file": "src/tables/Column.js",
            "line": 33,
            "description": "用来描述每个竖排单元格的展示形式\n不应该为string",
            "itemtype": "property",
            "name": "cell",
            "type": "Object",
            "class": "Column",
            "module": "table(表格)"
        },
        {
            "file": "src/tables/Table.js",
            "line": 30,
            "description": "用来渲染表格的数组，可选参数，如果传入data，会更具table下的column标签绑定的属性进行渲染",
            "itemtype": "property",
            "name": "data",
            "type": "Array",
            "class": "Table",
            "module": "table(表格)"
        },
        {
            "file": "src/tables/Tr.js",
            "line": 18,
            "description": "是否在每一行下添加分割线",
            "itemtype": "property",
            "name": "split",
            "type": "bool",
            "default": "false",
            "class": "Tr",
            "module": "table(表格)"
        },
        {
            "file": "src/utils/ClassNameMixin.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "src/utils/MethodMixin.js",
            "line": 1,
            "description": "Created by mac on 16/1/3.",
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "src/utils/PropertyMixin.js",
            "line": 1,
            "description": "Created by mac on 16/1/3.",
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "src/utils/constants.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "src/utils/constants.js",
            "line": 12,
            "description": "状态",
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "src/utils/constants.js",
            "line": 51,
            "description": "颜色",
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "src/utils/extend.js",
            "line": 5,
            "description": "A recursive merge between two objects.",
            "params": [
                {
                    "name": "base",
                    "description": "- the object whose properties are to be overwritten. It\n                  should be either the root level or some nested level."
                },
                {
                    "name": "override",
                    "description": "- an object containing properties to be overwritten. It\n                  should have the same structure as the object object."
                }
            ],
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "src/Button.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "src/Button.js",
            "line": 23,
            "description": "按钮尺寸,分别为xs、sm、lg",
            "itemtype": "property",
            "name": "egSize",
            "type": "String",
            "default": "sm",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "src/Button.js",
            "line": 30,
            "description": "是否禁用按钮",
            "itemtype": "property",
            "name": "disabled",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "src/Button.js",
            "line": 38,
            "description": "按钮是否处于选中状态",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "src/Button.js",
            "line": 45,
            "description": "按钮颜色样式，可以为['success','error','warning','danger','default','link','white']中任何一个",
            "itemtype": "property",
            "name": "egStyle",
            "type": "Boolean",
            "default": "''",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "src/Button.js",
            "line": 53,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "default": "'button'",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "src/Button.js",
            "line": 60,
            "description": "是否为块级显示",
            "itemtype": "property",
            "name": "block",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "src/Button.js",
            "line": 68,
            "description": "是否只将主题颜色应用于边框，而不是应用于背景色",
            "itemtype": "property",
            "name": "hollow",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "src/ButtonGroup.js",
            "line": 1,
            "description": "Created by mac on 15/9/8.",
            "class": "ButtonGroup",
            "module": "form(表单)"
        },
        {
            "file": "src/ButtonGroup.js",
            "line": 23,
            "description": "是否自适应宽度并水平排列",
            "itemtype": "property",
            "name": "justify",
            "type": "Boolean",
            "default": "false",
            "class": "ButtonGroup",
            "module": "form(表单)"
        },
        {
            "file": "src/ButtonGroup.js",
            "line": 30,
            "description": "是否垂直排列",
            "itemtype": "property",
            "name": "tacked",
            "type": "Boolean",
            "default": "false",
            "class": "ButtonGroup",
            "module": "form(表单)"
        },
        {
            "file": "src/ButtonGroup.js",
            "line": 44,
            "description": "tacked: bool 是否垂直排列\njustify: justify 是否自适应宽度",
            "class": "ButtonGroup",
            "module": "form(表单)"
        },
        {
            "file": "src/ButtonGroup.js",
            "line": 56,
            "description": "点击按钮组中任意按钮时触发的回调事件",
            "itemtype": "event",
            "name": "activeCallback",
            "params": [
                {
                    "name": "target",
                    "description": "触发事件的dom节点",
                    "type": "Dom"
                },
                {
                    "name": "html",
                    "description": "触发事件dom节点的innerHTML",
                    "type": "InnerHTML"
                }
            ],
            "class": "ButtonGroup",
            "module": "form(表单)"
        },
        {
            "file": "src/Calendar.js",
            "line": 48,
            "description": "起始日期",
            "itemtype": "property",
            "name": "startDate",
            "type": "String",
            "default": "empty",
            "class": "Calendar",
            "module": "ui"
        },
        {
            "file": "src/Calendar.js",
            "line": 55,
            "description": "终止日期",
            "itemtype": "property",
            "name": "endDate",
            "type": "String",
            "default": "empty",
            "class": "Calendar",
            "module": "ui"
        },
        {
            "file": "src/Calendar.js",
            "line": 62,
            "description": "默认选中日期",
            "itemtype": "property",
            "name": "defaultDate",
            "type": "String",
            "default": "当天",
            "class": "Calendar",
            "module": "ui"
        },
        {
            "file": "src/Calendar.js",
            "line": 69,
            "description": "日期格式",
            "itemtype": "property",
            "name": "format",
            "type": "string",
            "default": "'yyyy-MM-dd'",
            "class": "Calendar",
            "module": "ui"
        },
        {
            "file": "src/Calendar.js",
            "line": 76,
            "description": "日期选择控件类型,date表示可以选择年月日，year只能选择年份，month只能选择月份",
            "itemtype": "property",
            "name": "calendarType",
            "type": "string",
            "default": "'date'",
            "class": "Calendar",
            "module": "ui"
        },
        {
            "file": "src/Calendar.js",
            "line": 83,
            "description": "选择某个具体日期后执行的回调函数",
            "itemtype": "event",
            "name": "selectCallback",
            "params": [
                {
                    "name": "date",
                    "description": "日期",
                    "type": "String"
                }
            ],
            "default": "void",
            "class": "Calendar",
            "module": "ui"
        },
        {
            "file": "src/Calendar.js",
            "line": 194,
            "class": "Calendar",
            "module": "ui"
        },
        {
            "file": "src/Calendar.js",
            "line": 201,
            "class": "Calendar",
            "module": "ui"
        },
        {
            "file": "src/CalendarPanel.js",
            "line": 34,
            "description": "日历位置",
            "itemtype": "property",
            "name": "direction",
            "type": "string direction 可选值有 top | left | down | right",
            "default": "auto 自动根据当前位置切换 上/下",
            "class": "CalendarPanel",
            "module": "ui"
        },
        {
            "file": "src/CalendarPanel.js",
            "line": 41,
            "description": "通过传入此函数获取日期值",
            "itemtype": "event",
            "name": "getValueCallback",
            "params": [
                {
                    "name": "date",
                    "description": "日期",
                    "type": "String"
                }
            ],
            "class": "CalendarPanel",
            "module": "ui"
        },
        {
            "file": "src/CheckboxGroup.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "CheckboxGroup",
            "module": "ui"
        },
        {
            "file": "src/Col.js",
            "line": 24,
            "description": "适用于每个Row下的最后一个Col\n当所有的col加起来不满12的情况下：如果不设置end属性，最后一个Col会向右对齐，如果设置end属性，最后一个Col就会向左对齐（float left）",
            "itemtype": "property",
            "name": "end",
            "type": "Boolean",
            "default": "false",
            "class": "Col",
            "module": "grid(布局)"
        },
        {
            "file": "src/Col.js",
            "line": 32,
            "description": "Row总宽度为100%(12份)，sm的值表示当前Col宽度占比父元素12份中的几份",
            "itemtype": "property",
            "name": "sm",
            "type": "Number",
            "default": "12(一整行)",
            "class": "Col",
            "module": "grid(布局)"
        },
        {
            "file": "src/DateTimePicker.js",
            "line": 30,
            "description": "格式化日期时间<br />\n<code>yyyy</code>:表示年<br />\n<code>MM</code>:表示月<br />\n<code>dd</code>:表示天<br />\n<code>HH</code>:24小时制<br />\n<code>hh</code>:12小时制<br />\n<code>mm</code>:分钟<br />\n<code>tt</code>:上午或下午<br />",
            "itemtype": "property",
            "name": "format",
            "type": "String",
            "default": "HH:mm tt",
            "class": "DateTimePicker",
            "module": "ui"
        },
        {
            "file": "src/Dialog.js",
            "line": 13,
            "description": "是否显示标题栏背景色",
            "itemtype": "property",
            "name": "isHeaderBackground",
            "type": "Boolean",
            "default": "true",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "src/Dialog.js",
            "line": 20,
            "description": "底部按钮对齐方式 center、right or left",
            "itemtype": "property",
            "name": "buttonAlign",
            "type": "String",
            "default": "center",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "src/Dialog.js",
            "line": 27,
            "description": "是否显示标题栏",
            "itemtype": "property",
            "name": "isHeader",
            "type": "Boolean",
            "default": "true",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "src/Dialog.js",
            "line": 34,
            "description": "内容区域对齐方式",
            "itemtype": "property",
            "name": "contentAlign",
            "type": "String",
            "default": "center",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "src/Dialog.js",
            "line": 41,
            "description": "是否显示遮罩层",
            "itemtype": "property",
            "name": "isMask",
            "type": "Boolean",
            "default": "true",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "src/Dialog.js",
            "line": 48,
            "description": "内容不在content之内 mask属性",
            "itemtype": "property",
            "name": "outside",
            "type": "Boolean",
            "default": "false",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "src/Dialog.js",
            "line": 55,
            "description": "是否显示关闭 mask常用属性",
            "itemtype": "property",
            "name": "isClose",
            "type": "Boolean",
            "default": "false",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "src/Dialog.js",
            "line": 62,
            "description": "标题",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "default": "empty",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "src/Dialog.js",
            "line": 68,
            "description": "是否点击背景层也能关闭弹窗",
            "itemtype": "property",
            "name": "isMaskClose",
            "type": "Boolean",
            "default": "true",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "src/Dialog.js",
            "line": 75,
            "description": "底部按钮组<br />\n当不设置type的时候，按钮的回调直接用callback定义就好，<br />\n如果设置了type为'success'或者'cancel'，callback属性将不会起到作用，此时可以通过dialog提供的promise来注册点击成功或者取消按钮时的回调事件:<br/>\n<pre class=\"code prettyprint\">\n<code>\n   Dialog.confirm('确定你已经打开了么？').then(()=>{\n           alert('确定');\n       },()=>{\n           alert('取消');\n       });\n</code>\n</pre>\n<br>\n按钮组格式如下：\n   <pre class=\"code prettyprint\">\n       <code>\n       [\n            {\n                type: 'success',\n                name: '确认'\n            },\n            {\n                type:'cancel',\n                egStyle:'white',\n                name:'取消'\n            },\n            {\n                egStyle:'warning',\n                name:'自定义按钮',\n                callback:()=>{alert('自定义按钮');}\n            }\n        ]\n       </code>\n   </pre>",
            "itemtype": "property",
            "name": "buttons",
            "type": "Array",
            "default": "empty",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "src/ImgSlider.js",
            "line": 1,
            "description": "Created by slashhuang on 15/12/28.",
            "class": "imgSlider",
            "module": "grid(布局)"
        },
        {
            "file": "src/ImgSlider.js",
            "line": 110,
            "description": "slider的图片数组",
            "itemtype": "property",
            "name": "imgList",
            "type": "Array",
            "default": "图片数组(包含大图地址、描述等信息)",
            "class": "imgSlider",
            "module": "ui"
        },
        {
            "file": "src/ImgSlider.js",
            "line": 117,
            "description": "是否展示slider",
            "itemtype": "property",
            "name": "show",
            "type": "boolean",
            "default": "false(默认不展示)",
            "class": "imgSlider",
            "module": "ui"
        },
        {
            "file": "src/ImgSlider.js",
            "line": 124,
            "description": "图片信息(对应imgList中大图标题信息的key))",
            "itemtype": "property",
            "name": "urlKey",
            "type": "string",
            "default": "url",
            "class": "imgSlider",
            "module": "ui"
        },
        {
            "file": "src/ImgSlider.js",
            "line": 131,
            "description": "图片信息(对应图片信息数组对象中图片描述信息的key)",
            "itemtype": "property",
            "name": "profileKey",
            "type": "string",
            "default": "profile",
            "class": "imgSlider",
            "module": "ui"
        },
        {
            "file": "src/ImgSlider.js",
            "line": 138,
            "description": "图片描述信息(对应imgList中大图标题信息的key)",
            "itemtype": "property",
            "name": "titleKey",
            "type": "string",
            "default": "description",
            "class": "imgSlider",
            "module": "ui"
        },
        {
            "file": "src/ImgSlider.js",
            "line": 145,
            "description": "是否显示slider的图片缩略图部分",
            "itemtype": "property",
            "name": "showThumbnail",
            "type": "boolean",
            "default": "true",
            "class": "imgSlider",
            "module": "ui"
        },
        {
            "file": "src/ImgSlider.js",
            "line": 152,
            "description": "缩略图的key",
            "itemtype": "property",
            "name": "thumbnailKey",
            "type": "array",
            "default": "默认和urlKey保持一致",
            "class": "imgSlider",
            "module": "ui"
        },
        {
            "file": "src/ImgSlider.js",
            "line": 159,
            "description": "缩略图展示数目",
            "itemtype": "property",
            "name": "pageNum",
            "type": "number",
            "default": "5",
            "class": "imgSlider",
            "module": "ui"
        },
        {
            "file": "src/ImgSlider.js",
            "line": 166,
            "description": "控制缩放旋转控件的显示，默认隐藏",
            "itemtype": "property",
            "name": "imgModify",
            "type": "boolean",
            "default": "false",
            "class": "imgSlider",
            "module": "ui"
        },
        {
            "file": "src/ImgSlider.js",
            "line": 337,
            "description": "有放大操作需求时，新增操作区div",
            "class": "imgSlider",
            "module": "ui"
        },
        {
            "file": "src/Input.js",
            "line": 62,
            "description": "生成不同的元素标签",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "Input",
            "module": "form(表单)"
        },
        {
            "file": "src/Input.js",
            "line": 68,
            "description": "默认输入提示",
            "itemtype": "property",
            "name": "autoComplete",
            "type": "String",
            "class": "Input",
            "module": "form(表单)"
        },
        {
            "file": "src/Input.js",
            "line": 74,
            "description": "type为radio或checkbox时，需要显示的标签信息",
            "itemtype": "property",
            "name": "label",
            "type": "String",
            "class": "Input",
            "module": "form(表单)"
        },
        {
            "file": "src/Input.js",
            "line": 80,
            "description": "需要显示的icon",
            "itemtype": "property",
            "name": "icon",
            "type": "String",
            "class": "Input",
            "module": "form(表单)"
        },
        {
            "file": "src/Input.js",
            "line": 85,
            "description": "给icon设置样式",
            "itemtype": "property",
            "name": "iconStyle",
            "type": "Object",
            "class": "Input",
            "module": "form(表单)"
        },
        {
            "file": "src/Input.js",
            "line": 91,
            "description": "icon,input类型只能是text这种的",
            "itemtype": "property",
            "name": "icon",
            "type": "String",
            "class": "Input",
            "module": "form(表单)"
        },
        {
            "file": "src/Input.js",
            "line": 97,
            "description": "icon展示的方向，{left,right}",
            "itemtype": "property",
            "name": "iconDirection",
            "type": "String",
            "class": "Input",
            "module": "form(表单)"
        },
        {
            "file": "src/Input.js",
            "line": 103,
            "description": "icon点击事件",
            "itemtype": "property",
            "name": "iconClickCallback",
            "type": "Function",
            "class": "Input",
            "module": "form(表单)"
        },
        {
            "file": "src/Label.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Label",
            "module": "form(表单)"
        },
        {
            "file": "src/Label.js",
            "line": 21,
            "description": "label的链接地址（不设置的话默认不进行跳转）",
            "itemtype": "property",
            "name": "url",
            "type": "String",
            "default": "'javascript:void(0);'",
            "class": "Label",
            "module": "ui"
        },
        {
            "file": "src/Label.js",
            "line": 29,
            "description": "标签尺寸,分别为xs、sm、lg",
            "itemtype": "property",
            "name": "egSize",
            "type": "String",
            "default": "sm",
            "class": "Label",
            "module": "ui"
        },
        {
            "file": "src/Label.js",
            "line": 36,
            "description": "是否禁用Label",
            "itemtype": "property",
            "name": "disabled",
            "type": "Boolean",
            "default": "false",
            "class": "Label",
            "module": "ui"
        },
        {
            "file": "src/Label.js",
            "line": 43,
            "description": "标签是否处于选中状态",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "default": "false",
            "class": "Label",
            "module": "ui"
        },
        {
            "file": "src/Label.js",
            "line": 50,
            "description": "标签颜色样式，可以为['success','error','warning','danger','']中任何一个",
            "itemtype": "property",
            "name": "egStyle",
            "type": "Boolean",
            "default": "''",
            "class": "Label",
            "module": "ui"
        },
        {
            "file": "src/Label.js",
            "line": 67,
            "description": "点击回调函数",
            "class": "Label",
            "module": "ui"
        },
        {
            "file": "src/LabelGroup.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "LabelGroup",
            "module": "ui"
        },
        {
            "file": "src/LabelGroup.js",
            "line": 24,
            "description": "标签组左侧标题",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "LabelGroup",
            "module": "ui"
        },
        {
            "file": "src/LabelGroup.js",
            "line": 30,
            "description": "标签组展现形式{form|simple|default}",
            "itemtype": "property",
            "name": "egType",
            "type": "String",
            "default": "default",
            "class": "LabelGroup",
            "module": "ui"
        },
        {
            "file": "src/LabelGroup.js",
            "line": 37,
            "description": "点击后触发的回调，所有label会被继承",
            "itemtype": "property",
            "name": "activeCallback",
            "type": "Function",
            "class": "LabelGroup",
            "module": "ui"
        },
        {
            "file": "src/LabelGroup.js",
            "line": 43,
            "description": "默认选中的项，取值为选中标签的文案",
            "itemtype": "property",
            "name": "defaultChecked",
            "type": "String Integer",
            "class": "LabelGroup",
            "module": "ui"
        },
        {
            "file": "src/LabelGroup.js",
            "line": 52,
            "description": "间距，label集合与左边title的间距",
            "itemtype": "property",
            "name": "spacing",
            "type": "Integer",
            "class": "LabelGroup",
            "module": "ui"
        },
        {
            "file": "src/LabelGroup.js",
            "line": 123,
            "description": "key 重复，使用component生成唯一key",
            "class": "LabelGroup",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 20,
            "description": "总页数",
            "itemtype": "property",
            "name": "currentPage",
            "type": "Integer",
            "default": "1",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 27,
            "description": "每页显示多少条数据",
            "itemtype": "property",
            "name": "pageSize",
            "type": "Integer",
            "default": "20",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 34,
            "description": "数据总数",
            "itemtype": "property",
            "name": "total",
            "type": "Integer",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 40,
            "description": "点击分页回调",
            "itemtype": "event",
            "name": "pageCallback",
            "params": [
                {
                    "name": "pageNum",
                    "description": "用户点击的页码",
                    "type": "Integer"
                }
            ],
            "default": "function(){}",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 47,
            "itemtype": "property",
            "name": "activeClass",
            "type": "String",
            "default": "active",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 56,
            "description": "开启选择每页显示数量选项",
            "itemtype": "property",
            "name": "showItemsNumber",
            "type": "Boolean",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 62,
            "description": "自定义每页显示数量数组,需为非空数组。默认为[]",
            "itemtype": "property",
            "name": "choosePageSize",
            "type": "array",
            "default": "[]",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 69,
            "description": "分页组件的样式,取值为'theme1'或'theme2'(theme1的页码没有样式，theme2的页码是块状样式)",
            "itemtype": "property",
            "name": "theme",
            "type": "string",
            "default": "'theme1'",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 76,
            "description": "可见的分页数",
            "itemtype": "property",
            "name": "visiblePages",
            "type": "nmumber",
            "default": "10",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 91,
            "description": "默认每页显示数量为［］",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 97,
            "description": "跟showItemsNumber一起使用 arguments{pageSize}",
            "itemtype": "property",
            "name": "loadPageCallback",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 106,
            "is_constructor": 1,
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 114,
            "type": "Integer",
            "default": "",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 124,
            "type": "Boolean",
            "default": "false",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 133,
            "description": "当前页",
            "type": "Integer",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 176,
            "description": "跳转至N页",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 230,
            "description": "生成页码",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/Paging.js",
            "line": 297,
            "description": "if 提供自定义数组 且非空。",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "src/RadioGroup.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "RadioGroup",
            "module": "ui"
        },
        {
            "file": "src/RadioGroup.js",
            "line": 39,
            "description": "radio name",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "default": "''",
            "class": "RadioGroup",
            "module": "form(表单)"
        },
        {
            "file": "src/RadioGroup.js",
            "line": 46,
            "description": "默认选中项",
            "itemtype": "property",
            "name": "defaultChecked",
            "type": "String",
            "default": "''",
            "class": "RadioGroup",
            "module": "form(表单)"
        },
        {
            "file": "src/RadioGroup.js",
            "line": 53,
            "description": "获取选中的值",
            "itemtype": "event",
            "name": "getValueCallback",
            "params": [
                {
                    "name": "null",
                    "description": ""
                }
            ],
            "default": "void",
            "class": "RadioGroup",
            "module": "form(表单)"
        },
        {
            "file": "src/Select.js",
            "line": 39,
            "description": "回调方法，主要作用将value传给父级元素。默认为null",
            "itemtype": "event",
            "name": "getValueCallback",
            "params": [
                {
                    "name": "value",
                    "description": "值",
                    "type": "Primitive/pointer"
                },
                {
                    "name": "key",
                    "description": "键",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "类型",
                    "type": "String"
                }
            ],
            "default": "null",
            "class": "Select",
            "module": "form(表单)"
        },
        {
            "file": "src/Select.js",
            "line": 48,
            "description": "没有选中任何item时的占位文案",
            "itemtype": "property",
            "name": "placeholder",
            "type": "string",
            "class": "Select",
            "module": "form(表单)"
        },
        {
            "file": "src/Select.js",
            "line": 56,
            "description": "默认选中值，即初始显示内容",
            "itemtype": "property",
            "name": "defaultChecked",
            "type": "String",
            "default": "''",
            "class": "Select",
            "module": "form(表单)"
        },
        {
            "file": "src/Select.js",
            "line": 64,
            "description": "报svg的warning竟然在这里。。 真尴尬",
            "class": "Select",
            "module": "form(表单)"
        },
        {
            "file": "src/Slider.js",
            "line": 27,
            "description": "滑块初始值",
            "itemtype": "property",
            "name": "min",
            "type": "Number",
            "default": "0",
            "class": "Slider",
            "module": "ui"
        },
        {
            "file": "src/Slider.js",
            "line": 34,
            "description": "滑块最大值",
            "itemtype": "property",
            "name": "max",
            "type": "Number",
            "default": "100",
            "class": "Slider",
            "module": "ui"
        },
        {
            "file": "src/Slider.js",
            "line": 41,
            "description": "默认滑块值，设置后会默认移动到对应的值上",
            "itemtype": "property",
            "name": "defaultValue",
            "type": "Number",
            "default": "0",
            "class": "Slider",
            "module": "ui"
        },
        {
            "file": "src/Slider.js",
            "line": 48,
            "description": "获取移动后的滑块值，getValueCallback(value)",
            "itemtype": "property",
            "name": "getValueCallback",
            "type": "Function",
            "default": "null",
            "class": "Slider",
            "module": "ui"
        },
        {
            "file": "src/Slider.js",
            "line": 55,
            "description": "第一次实例化slider时被调用，initCallback(value)",
            "itemtype": "property",
            "name": "initCallback",
            "type": "Function",
            "default": "null",
            "class": "Slider",
            "module": "ui"
        },
        {
            "file": "src/Star.js",
            "line": 24,
            "description": "星级评价分数(满分100)",
            "itemtype": "property",
            "name": "Rate",
            "type": "number",
            "default": "0",
            "class": "Star",
            "module": "ui"
        },
        {
            "file": "src/Star.js",
            "line": 31,
            "description": "星星大小",
            "itemtype": "property",
            "name": "size",
            "type": "String||number",
            "default": "13  可以取值10-20 默认单位为'px'",
            "class": "Star",
            "module": "ui"
        },
        {
            "file": "src/Star.js",
            "line": 41,
            "description": "星星是否可以自己设置\n设置单位为1个星星",
            "itemtype": "property",
            "name": "disable",
            "type": "boolean",
            "default": "false",
            "class": "Star",
            "module": "ui"
        },
        {
            "file": "src/Star.js",
            "line": 50,
            "description": "用于不同的css写法导致的位置微调",
            "class": "Star",
            "module": "ui"
        },
        {
            "file": "src/Suggestion.js",
            "line": 17,
            "description": "当用户选中sug中的某一提示项时触发的回调函数",
            "itemtype": "event",
            "name": "getValueCallback",
            "params": [
                {
                    "name": "key",
                    "description": "每一个sug Item的value属性",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "每一个sug Item的展示值",
                    "type": "String"
                }
            ],
            "default": "function(){}",
            "class": "Suggestion",
            "module": "ui"
        },
        {
            "file": "src/Suggestion.js",
            "line": 28,
            "description": "input框左侧或者右侧出现的提示图标.默认不加icon.如果想显示放大镜图标可以将icon设置为\"search\".其他图标可以参考icon fonts",
            "itemtype": "property",
            "name": "icon",
            "type": "String",
            "default": "''",
            "class": "Suggestion",
            "module": "ui"
        },
        {
            "file": "src/Suggestion.js",
            "line": 35,
            "description": "图标出现的位置，可以设置为left或者right",
            "itemtype": "property",
            "name": "iconDirection",
            "type": "String",
            "default": "'right'",
            "class": "Suggestion",
            "module": "ui"
        },
        {
            "file": "src/Suggestion.js",
            "line": 42,
            "description": "icon的样式，比如可以通过设置{color:'red'}来将icon设置为红色",
            "itemtype": "property",
            "name": "iconStyle",
            "type": "Object",
            "default": "{}",
            "class": "Suggestion",
            "module": "ui"
        },
        {
            "file": "src/Suggestion.js",
            "line": 49,
            "description": "没有匹配结果时下拉框中的匹配文案",
            "itemtype": "property",
            "name": "noResultTips",
            "type": "String",
            "default": "'没有匹配结果'",
            "class": "Suggestion",
            "module": "ui"
        },
        {
            "file": "src/Suggestion.js",
            "line": 56,
            "description": "input框中没有输入值时的提示文案",
            "itemtype": "property",
            "name": "placeholder",
            "type": "String",
            "default": "''",
            "class": "Suggestion",
            "module": "ui"
        },
        {
            "file": "src/Tab.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Tab",
            "module": "ui"
        },
        {
            "file": "src/Tab.js",
            "line": 21,
            "description": "tab导航标签的title",
            "itemtype": "property",
            "name": "heading",
            "type": "String",
            "default": "'tab'",
            "class": "Tab",
            "module": "ui"
        },
        {
            "file": "src/Tabset.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Tabset",
            "module": "ui"
        },
        {
            "file": "src/Tabset.js",
            "line": 29,
            "description": "需要在初始的时候打开第几个tab，默认为0（从0计数，即打开第一个tab）",
            "itemtype": "property",
            "name": "activeTab",
            "type": "Number",
            "default": "0",
            "class": "Tabset",
            "module": "ui"
        },
        {
            "file": "src/Tabset.js",
            "line": 36,
            "description": "回调方法，当用户切换不同tab时，会调用这个回调。",
            "itemtype": "event",
            "name": "tabCallback",
            "params": [
                {
                    "name": "activeTabIndex",
                    "description": "当前激活的是第几个tab，从0开始计数",
                    "type": "Number"
                }
            ],
            "default": "undefined",
            "class": "Tabset",
            "module": "ui"
        },
        {
            "file": "src/TimePicker.js",
            "line": 24,
            "description": "格式化时间<br />\n<code>HH</code>:24小时制<br />\n<code>hh</code>:12小时制<br />\n<code>mm</code>:分钟<br />\n<code>tt</code>:上午或下午<br />",
            "itemtype": "property",
            "name": "format",
            "type": "String",
            "default": "HH:mm tt",
            "class": "TimePicker",
            "module": "ui"
        },
        {
            "file": "src/TimePicker.js",
            "line": 35,
            "description": "默认值",
            "itemtype": "property",
            "name": "defaultValue",
            "type": "String",
            "default": "''",
            "class": "TimePicker",
            "module": "ui"
        },
        {
            "file": "src/Toast.js",
            "line": 25,
            "description": "toast类型：分为success,error,loading 三种。默认success",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "success",
            "class": "Toast",
            "module": "ui"
        },
        {
            "file": "src/Toast.js",
            "line": 32,
            "description": "文字信息",
            "itemtype": "property",
            "name": "message",
            "type": "String",
            "default": "保存成功",
            "class": "Toast",
            "module": "ui"
        },
        {
            "file": "src/Toast.js",
            "line": 39,
            "description": "tips n秒后消失 默认2秒",
            "itemtype": "property",
            "name": "seconds",
            "type": "Integer",
            "default": "2",
            "class": "Toast",
            "module": "ui"
        },
        {
            "file": "src/Toast.js",
            "line": 46,
            "description": "类名样式前缀",
            "class": "Toast",
            "module": "ui"
        },
        {
            "file": "src/Toast.js",
            "line": 50,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "default": "div",
            "class": "Toast",
            "module": "ui"
        },
        {
            "file": "src/Toast.js",
            "line": 70,
            "description": "改变state.show 隐藏tips,并调用回调方法",
            "class": "Toast",
            "module": "ui"
        },
        {
            "file": "src/Tooltip.js",
            "line": 20,
            "description": "提示是否展示",
            "itemtype": "property",
            "name": "show",
            "type": "Boolean",
            "default": "null",
            "class": "Tooltip",
            "module": "ui"
        },
        {
            "file": "src/Tooltip.js",
            "line": 27,
            "description": "提示内容",
            "itemtype": "property",
            "name": "msg",
            "type": "String",
            "default": "null",
            "class": "Tooltip",
            "module": "ui"
        },
        {
            "file": "src/Tooltip.js",
            "line": 34,
            "description": "提示方向",
            "itemtype": "property",
            "name": "direction",
            "type": "String",
            "default": "null",
            "class": "Tooltip",
            "module": "ui"
        },
        {
            "file": "src/Tooltip.js",
            "line": 51,
            "description": "接收到新props时执行,state.show变为nextProps.show\n接收到新props时执行,state.show变为nextProps.show\n实现隐藏与显示",
            "class": "Tooltip",
            "module": "ui"
        },
        {
            "file": "src/Tooltip.js",
            "line": 100,
            "description": "判断是否有子元素，有的话取children，否则取msg\n两者均有以children优先",
            "class": "Tooltip",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 43,
            "description": "提示内容",
            "itemtype": "property",
            "name": "msg",
            "type": "String",
            "default": "这是个提示",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 50,
            "description": "是否指定tips的边界，如果指定超出该边界则改变方向，否则默认以可是窗口边界来判断",
            "itemtype": "property",
            "name": "wrapper",
            "type": "string",
            "default": "''",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 57,
            "description": "提示方向。方向可选：top,down,left,right.默认down",
            "itemtype": "property",
            "name": "direction",
            "type": "String",
            "default": "bottom",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 66,
            "description": "触发事件类型，可选‘click‘，’hover‘",
            "itemtype": "property",
            "name": "trigger",
            "type": ":String",
            "default": "hover",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 73,
            "description": "可选 'black,white'",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 78,
            "description": "提示内容padding，默认5",
            "itemtype": "property",
            "name": "padding",
            "type": ":Number",
            "default": "hover",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 99,
            "description": "显示与否由父组件控制",
            "type": "Boolean",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 109,
            "description": "动态更新展示",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 118,
            "description": "如果事件是click，body加上事件，移除时隐藏",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 160,
            "description": "获得限制区域的宽，若未指定则默认可视区域大小",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 178,
            "description": "获取元素的client宽高",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 189,
            "description": "获取tips的offset\n宽高容易获取，top和left循环向上直到body，如果指定边界a，则取两者之差",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 204,
            "description": "获取处理之后的offset，top和left",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 215,
            "description": "获取offset top、left。\n两者获取方式相同，根据isleft区分left或top",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 230,
            "description": "tips方向和边界判断，调整tips的位置",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 265,
            "description": "获得浏览器的边界大小",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 277,
            "description": "如果方向改变，重新设置箭头方向",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/TooltipPanel.js",
            "line": 290,
            "description": "判断是否满足边界条件,返回满足的方向\n不满足的话应该说直接取相反方向",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "src/ValidatorBase.js",
            "line": 52,
            "description": "需要初始化的表单元素默认值(废弃)",
            "itemtype": "property",
            "name": "values",
            "type": "Object",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "src/ValidatorBase.js",
            "line": 58,
            "description": "每次验证时值被改变后都会被触发，会回传当前data-field字段、值和所有值对象",
            "itemtype": "property",
            "name": "getValueCallback",
            "type": "Function",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "src/ValidatorBase.js",
            "line": 67,
            "description": "包装容器",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "default": "form",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "src/ValidatorBase.js",
            "line": 74,
            "description": "触发验证的事件集合",
            "itemtype": "property",
            "name": "trigger",
            "type": "String",
            "default": "blur keyup focus click",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "src/ValidatorBase.js",
            "line": 81,
            "description": "默认规则提示文案",
            "itemtype": "property",
            "name": "message",
            "type": "Object",
            "default": "required: '不能为空',\n        date: '请正确填写日期',\n        number: '请输入一个有效的号码',\n        url: '请输入一个有效的URL',\n        email: '请输入一个有效的电子邮件地址',\n        dateISO: '请输入一个有效的日期(ISO)',\n        digits: '请输入数字',\n        equalTo:'请再次输入相同的值。',\n        minlength: '请输入至少{0}字符',\n        maxlength: '请输入不超过{0}字符',\n        rangelength: '请输入一个值{0}和{1}字符之间',\n        min: '请输入一个值大于或等于{0}',\n        max: '请输入一个值小于或等于{0}',\n        range: '请输入一个值{0} - {1}'",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "src/ValidatorBase.js",
            "line": 118,
            "description": "自定义在提交后的callback",
            "itemtype": "event",
            "name": "submitCallback",
            "params": [
                {
                    "name": "opt",
                    "description": "表单数据结构",
                    "type": "Object"
                }
            ],
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "src/ValidatorBase.js",
            "line": 126,
            "description": "自定义验证规则之外的其他逻辑",
            "itemtype": "event",
            "name": "validateCallback",
            "params": [
                {
                    "name": "opt",
                    "description": "表单数据结构",
                    "type": "Object"
                }
            ],
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "src/ValidatorBase.js",
            "line": 134,
            "description": "提示框消失时间",
            "itemtype": "property",
            "name": "timeout",
            "type": "Number",
            "default": "3000",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "src/ValidatorBase.js",
            "line": 141,
            "description": "提交按钮id",
            "itemtype": "property",
            "name": "submitElement",
            "type": "String",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "src/ValidatorBase.js",
            "line": 147,
            "description": "是否增强文本框提示",
            "itemtype": "property",
            "name": "shake",
            "type": "Boolean",
            "default": "true",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "src/ValidatorBase.js",
            "line": 154,
            "description": "规则验证",
            "itemtype": "property",
            "name": "rules",
            "type": "Object",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "src/ValidatorBase.js",
            "line": 160,
            "description": "提示方位",
            "itemtype": "property",
            "name": "direction",
            "type": "String",
            "default": "right",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "src/ValidatorBase.js",
            "line": 167,
            "description": "重新更新dom",
            "itemtype": "property",
            "name": "update",
            "type": "String",
            "default": "+new Date()",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "src/ValidatorWrapper.js",
            "line": 52,
            "description": "默认规则提示文案",
            "itemtype": "property",
            "name": "message",
            "type": "Object",
            "default": "required: '不能为空',\ndate: '请正确填写日期',\nnumber: '请输入一个有效的号码',\nurl: '请输入一个有效的URL',\nemail: '请输入一个有效的电子邮件地址',\ndateISO: '请输入一个有效的日期(ISO)',\ndigits: '请输入数字',\nequalTo:'请再次输入相同的值。',\nminlength: '请输入至少{0}字符',\nmaxlength: '请输入不超过{0}字符',\nrangelength: '请输入一个值{0}和{1}字符之间',\nmin: '请输入一个值大于或等于{0}',\nmax: '请输入一个值小于或等于{0}',\nrange: '请输入一个值{0} - {1}'",
            "class": "ValidatorWrapper",
            "module": "form(表单)"
        },
        {
            "file": "src/ValidatorWrapper.js",
            "line": 73,
            "description": "规则验证",
            "itemtype": "property",
            "name": "rules",
            "type": "Object",
            "class": "ValidatorWrapper",
            "module": "form(表单)"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: demo",
            "line": " src/panels/Panel.js:17"
        },
        {
            "message": "unknown tag: show",
            "line": " src/panels/Panel.js:17"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/panels/PanelContent.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/panels/PanelContent.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/panels/PanelFooter.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/panels/PanelFooter.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/panels/PanelHeader.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/panels/PanelHeader.js:5"
        },
        {
            "message": "unknown tag: content",
            "line": " src/tables/Column.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/tables/Column.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/tables/Column.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/tables/Table.js:17"
        },
        {
            "message": "unknown tag: show",
            "line": " src/tables/Table.js:17"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/tables/Td.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/tables/Td.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/tables/Th.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/tables/Th.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/tables/Tr.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/tables/Tr.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Button.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Button.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/ButtonGroup.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/ButtonGroup.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Calendar.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Calendar.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/CalendarPanel.js:10"
        },
        {
            "message": "unknown tag: show",
            "line": " src/CalendarPanel.js:10"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/CheckboxGroup.js:11"
        },
        {
            "message": "unknown tag: show",
            "line": " src/CheckboxGroup.js:11"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Col.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Col.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Crumb.js:27"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Crumb.js:27"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/DateTimePicker.js:9"
        },
        {
            "message": "unknown tag: show",
            "line": " src/DateTimePicker.js:9"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Dialog.js:3"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Dialog.js:3"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Grid.js:28"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Grid.js:28"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/ImgSlider.js:10"
        },
        {
            "message": "unknown tag: show",
            "line": " src/ImgSlider.js:10"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Input.js:20"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Input.js:20"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Label.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Label.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/LabelGroup.js:11"
        },
        {
            "message": "unknown tag: show",
            "line": " src/LabelGroup.js:11"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Paging.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Paging.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/RadioGroup.js:11"
        },
        {
            "message": "unknown tag: show",
            "line": " src/RadioGroup.js:11"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Row.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Row.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Select.js:12"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Select.js:12"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Slider.js:7"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Slider.js:7"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Star.js:4"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Star.js:4"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Suggestion.js:3"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Suggestion.js:3"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Tab.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Tab.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Tabset.js:9"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Tabset.js:9"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/TimePicker.js:9"
        },
        {
            "message": "unknown tag: show",
            "line": " src/TimePicker.js:9"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Toast.js:11"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Toast.js:11"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Tooltip.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Tooltip.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/TooltipPanel.js:10"
        },
        {
            "message": "unknown tag: show",
            "line": " src/TooltipPanel.js:10"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/ValidatorBase.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/ValidatorBase.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/ValidatorWrapper.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/ValidatorWrapper.js:5"
        },
        {
            "message": "Missing item type\nkey 报warning，暂时改为keys",
            "line": " src/dialog/Dialog.js:26"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " src/utils/ClassNameMixin.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 16/1/3.",
            "line": " src/utils/MethodMixin.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 16/1/3.",
            "line": " src/utils/PropertyMixin.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " src/utils/constants.js:1"
        },
        {
            "message": "Missing item type\n状态",
            "line": " src/utils/constants.js:12"
        },
        {
            "message": "Missing item type\n颜色",
            "line": " src/utils/constants.js:51"
        },
        {
            "message": "Missing item type\nA recursive merge between two objects.",
            "line": " src/utils/extend.js:5"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " src/Button.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/8.",
            "line": " src/ButtonGroup.js:1"
        },
        {
            "message": "Missing item type\ntacked: bool 是否垂直排列\njustify: justify 是否自适应宽度",
            "line": " src/ButtonGroup.js:44"
        },
        {
            "message": "Missing item type",
            "line": " src/Calendar.js:194"
        },
        {
            "message": "Missing item type",
            "line": " src/Calendar.js:201"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " src/CheckboxGroup.js:1"
        },
        {
            "message": "Missing item type\nCreated by slashhuang on 15/12/28.",
            "line": " src/ImgSlider.js:1"
        },
        {
            "message": "Missing item type\n有放大操作需求时，新增操作区div",
            "line": " src/ImgSlider.js:337"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " src/Label.js:1"
        },
        {
            "message": "Missing item type\n点击回调函数",
            "line": " src/Label.js:67"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " src/LabelGroup.js:1"
        },
        {
            "message": "Missing item type\nkey 重复，使用component生成唯一key",
            "line": " src/LabelGroup.js:123"
        },
        {
            "message": "Missing item type\n默认每页显示数量为［］",
            "line": " src/Paging.js:91"
        },
        {
            "message": "Missing item type",
            "line": " src/Paging.js:106"
        },
        {
            "message": "Missing item type",
            "line": " src/Paging.js:114"
        },
        {
            "message": "Missing item type",
            "line": " src/Paging.js:124"
        },
        {
            "message": "Missing item type\n当前页",
            "line": " src/Paging.js:133"
        },
        {
            "message": "Missing item type\n跳转至N页",
            "line": " src/Paging.js:176"
        },
        {
            "message": "Missing item type\n生成页码",
            "line": " src/Paging.js:230"
        },
        {
            "message": "Missing item type\nif 提供自定义数组 且非空。",
            "line": " src/Paging.js:297"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " src/RadioGroup.js:1"
        },
        {
            "message": "Missing item type\n报svg的warning竟然在这里。。 真尴尬",
            "line": " src/Select.js:64"
        },
        {
            "message": "Missing item type\n用于不同的css写法导致的位置微调",
            "line": " src/Star.js:50"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " src/Tab.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " src/Tabset.js:1"
        },
        {
            "message": "Missing item type\n类名样式前缀",
            "line": " src/Toast.js:46"
        },
        {
            "message": "Missing item type\n改变state.show 隐藏tips,并调用回调方法",
            "line": " src/Toast.js:70"
        },
        {
            "message": "Missing item type\n接收到新props时执行,state.show变为nextProps.show\n接收到新props时执行,state.show变为nextProps.show\n实现隐藏与显示",
            "line": " src/Tooltip.js:51"
        },
        {
            "message": "Missing item type\n判断是否有子元素，有的话取children，否则取msg\n两者均有以children优先",
            "line": " src/Tooltip.js:100"
        },
        {
            "message": "Missing item type\n可选 'black,white'",
            "line": " src/TooltipPanel.js:73"
        },
        {
            "message": "Missing item type\n显示与否由父组件控制",
            "line": " src/TooltipPanel.js:99"
        },
        {
            "message": "Missing item type\n动态更新展示",
            "line": " src/TooltipPanel.js:109"
        },
        {
            "message": "Missing item type\n如果事件是click，body加上事件，移除时隐藏",
            "line": " src/TooltipPanel.js:118"
        },
        {
            "message": "Missing item type\n获得限制区域的宽，若未指定则默认可视区域大小",
            "line": " src/TooltipPanel.js:160"
        },
        {
            "message": "Missing item type\n获取元素的client宽高",
            "line": " src/TooltipPanel.js:178"
        },
        {
            "message": "Missing item type\n获取tips的offset\n宽高容易获取，top和left循环向上直到body，如果指定边界a，则取两者之差",
            "line": " src/TooltipPanel.js:189"
        },
        {
            "message": "Missing item type\n获取处理之后的offset，top和left",
            "line": " src/TooltipPanel.js:204"
        },
        {
            "message": "Missing item type\n获取offset top、left。\n两者获取方式相同，根据isleft区分left或top",
            "line": " src/TooltipPanel.js:215"
        },
        {
            "message": "Missing item type\ntips方向和边界判断，调整tips的位置",
            "line": " src/TooltipPanel.js:230"
        },
        {
            "message": "Missing item type\n获得浏览器的边界大小",
            "line": " src/TooltipPanel.js:265"
        },
        {
            "message": "Missing item type\n如果方向改变，重新设置箭头方向",
            "line": " src/TooltipPanel.js:277"
        },
        {
            "message": "Missing item type\n判断是否满足边界条件,返回满足的方向\n不满足的话应该说直接取相反方向",
            "line": " src/TooltipPanel.js:290"
        }
    ]
}